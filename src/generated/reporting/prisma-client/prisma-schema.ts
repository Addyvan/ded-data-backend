// Code generated by Prisma (prisma@1.34.2). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

export const typeDefs = /* GraphQL */ `type AggregategaStats {
  count: Int!
}

type AggregategcAccountData {
  count: Int!
}

type AggregategcCollabData {
  count: Int!
}

type AggregategcConnexData {
  count: Int!
}

type AggregategcMessageData {
  count: Int!
}

type AggregategcPediaData {
  count: Int!
}

type AggregategcWikiData {
  count: Int!
}

type AggregatePeriod {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type gaStats {
  id: ID!
  numSessions: Int
  avgPageviewsPerSession: Float
  avgSessionDuration: Float
  avgPageLoadTime: Float
  bounceRate: Float
}

type gaStatsConnection {
  pageInfo: PageInfo!
  edges: [gaStatsEdge]!
  aggregate: AggregategaStats!
}

input gaStatsCreateInput {
  id: ID
  numSessions: Int
  avgPageviewsPerSession: Float
  avgSessionDuration: Float
  avgPageLoadTime: Float
  bounceRate: Float
}

input gaStatsCreateOneInput {
  create: gaStatsCreateInput
  connect: gaStatsWhereUniqueInput
}

type gaStatsEdge {
  node: gaStats!
  cursor: String!
}

enum gaStatsOrderByInput {
  id_ASC
  id_DESC
  numSessions_ASC
  numSessions_DESC
  avgPageviewsPerSession_ASC
  avgPageviewsPerSession_DESC
  avgSessionDuration_ASC
  avgSessionDuration_DESC
  avgPageLoadTime_ASC
  avgPageLoadTime_DESC
  bounceRate_ASC
  bounceRate_DESC
}

type gaStatsPreviousValues {
  id: ID!
  numSessions: Int
  avgPageviewsPerSession: Float
  avgSessionDuration: Float
  avgPageLoadTime: Float
  bounceRate: Float
}

type gaStatsSubscriptionPayload {
  mutation: MutationType!
  node: gaStats
  updatedFields: [String!]
  previousValues: gaStatsPreviousValues
}

input gaStatsSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: gaStatsWhereInput
  AND: [gaStatsSubscriptionWhereInput!]
  OR: [gaStatsSubscriptionWhereInput!]
  NOT: [gaStatsSubscriptionWhereInput!]
}

input gaStatsUpdateDataInput {
  numSessions: Int
  avgPageviewsPerSession: Float
  avgSessionDuration: Float
  avgPageLoadTime: Float
  bounceRate: Float
}

input gaStatsUpdateInput {
  numSessions: Int
  avgPageviewsPerSession: Float
  avgSessionDuration: Float
  avgPageLoadTime: Float
  bounceRate: Float
}

input gaStatsUpdateManyMutationInput {
  numSessions: Int
  avgPageviewsPerSession: Float
  avgSessionDuration: Float
  avgPageLoadTime: Float
  bounceRate: Float
}

input gaStatsUpdateOneInput {
  create: gaStatsCreateInput
  update: gaStatsUpdateDataInput
  upsert: gaStatsUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: gaStatsWhereUniqueInput
}

input gaStatsUpsertNestedInput {
  update: gaStatsUpdateDataInput!
  create: gaStatsCreateInput!
}

input gaStatsWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  numSessions: Int
  numSessions_not: Int
  numSessions_in: [Int!]
  numSessions_not_in: [Int!]
  numSessions_lt: Int
  numSessions_lte: Int
  numSessions_gt: Int
  numSessions_gte: Int
  avgPageviewsPerSession: Float
  avgPageviewsPerSession_not: Float
  avgPageviewsPerSession_in: [Float!]
  avgPageviewsPerSession_not_in: [Float!]
  avgPageviewsPerSession_lt: Float
  avgPageviewsPerSession_lte: Float
  avgPageviewsPerSession_gt: Float
  avgPageviewsPerSession_gte: Float
  avgSessionDuration: Float
  avgSessionDuration_not: Float
  avgSessionDuration_in: [Float!]
  avgSessionDuration_not_in: [Float!]
  avgSessionDuration_lt: Float
  avgSessionDuration_lte: Float
  avgSessionDuration_gt: Float
  avgSessionDuration_gte: Float
  avgPageLoadTime: Float
  avgPageLoadTime_not: Float
  avgPageLoadTime_in: [Float!]
  avgPageLoadTime_not_in: [Float!]
  avgPageLoadTime_lt: Float
  avgPageLoadTime_lte: Float
  avgPageLoadTime_gt: Float
  avgPageLoadTime_gte: Float
  bounceRate: Float
  bounceRate_not: Float
  bounceRate_in: [Float!]
  bounceRate_not_in: [Float!]
  bounceRate_lt: Float
  bounceRate_lte: Float
  bounceRate_gt: Float
  bounceRate_gte: Float
  AND: [gaStatsWhereInput!]
  OR: [gaStatsWhereInput!]
  NOT: [gaStatsWhereInput!]
}

input gaStatsWhereUniqueInput {
  id: ID
}

type gcAccountData {
  id: ID!
  period: Period!
  totalNumAccounts: Int
  numNewAccounts: Int
}

type gcAccountDataConnection {
  pageInfo: PageInfo!
  edges: [gcAccountDataEdge]!
  aggregate: AggregategcAccountData!
}

input gcAccountDataCreateInput {
  id: ID
  period: PeriodCreateOneWithoutAccountInput!
  totalNumAccounts: Int
  numNewAccounts: Int
}

input gcAccountDataCreateOneWithoutPeriodInput {
  create: gcAccountDataCreateWithoutPeriodInput
  connect: gcAccountDataWhereUniqueInput
}

input gcAccountDataCreateWithoutPeriodInput {
  id: ID
  totalNumAccounts: Int
  numNewAccounts: Int
}

type gcAccountDataEdge {
  node: gcAccountData!
  cursor: String!
}

enum gcAccountDataOrderByInput {
  id_ASC
  id_DESC
  totalNumAccounts_ASC
  totalNumAccounts_DESC
  numNewAccounts_ASC
  numNewAccounts_DESC
}

type gcAccountDataPreviousValues {
  id: ID!
  totalNumAccounts: Int
  numNewAccounts: Int
}

type gcAccountDataSubscriptionPayload {
  mutation: MutationType!
  node: gcAccountData
  updatedFields: [String!]
  previousValues: gcAccountDataPreviousValues
}

input gcAccountDataSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: gcAccountDataWhereInput
  AND: [gcAccountDataSubscriptionWhereInput!]
  OR: [gcAccountDataSubscriptionWhereInput!]
  NOT: [gcAccountDataSubscriptionWhereInput!]
}

input gcAccountDataUpdateInput {
  period: PeriodUpdateOneRequiredWithoutAccountInput
  totalNumAccounts: Int
  numNewAccounts: Int
}

input gcAccountDataUpdateManyMutationInput {
  totalNumAccounts: Int
  numNewAccounts: Int
}

input gcAccountDataUpdateOneWithoutPeriodInput {
  create: gcAccountDataCreateWithoutPeriodInput
  update: gcAccountDataUpdateWithoutPeriodDataInput
  upsert: gcAccountDataUpsertWithoutPeriodInput
  delete: Boolean
  disconnect: Boolean
  connect: gcAccountDataWhereUniqueInput
}

input gcAccountDataUpdateWithoutPeriodDataInput {
  totalNumAccounts: Int
  numNewAccounts: Int
}

input gcAccountDataUpsertWithoutPeriodInput {
  update: gcAccountDataUpdateWithoutPeriodDataInput!
  create: gcAccountDataCreateWithoutPeriodInput!
}

input gcAccountDataWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  period: PeriodWhereInput
  totalNumAccounts: Int
  totalNumAccounts_not: Int
  totalNumAccounts_in: [Int!]
  totalNumAccounts_not_in: [Int!]
  totalNumAccounts_lt: Int
  totalNumAccounts_lte: Int
  totalNumAccounts_gt: Int
  totalNumAccounts_gte: Int
  numNewAccounts: Int
  numNewAccounts_not: Int
  numNewAccounts_in: [Int!]
  numNewAccounts_not_in: [Int!]
  numNewAccounts_lt: Int
  numNewAccounts_lte: Int
  numNewAccounts_gt: Int
  numNewAccounts_gte: Int
  AND: [gcAccountDataWhereInput!]
  OR: [gcAccountDataWhereInput!]
  NOT: [gcAccountDataWhereInput!]
}

input gcAccountDataWhereUniqueInput {
  id: ID
}

type gcCollabData {
  id: ID!
  period: Period!
  totalNumAccounts: Int
  numNewAccounts: Int
  gaData: gaStats
  totalNumGroups: Int
  numNewGroups: Int
}

type gcCollabDataConnection {
  pageInfo: PageInfo!
  edges: [gcCollabDataEdge]!
  aggregate: AggregategcCollabData!
}

input gcCollabDataCreateInput {
  id: ID
  period: PeriodCreateOneWithoutCollabInput!
  totalNumAccounts: Int
  numNewAccounts: Int
  gaData: gaStatsCreateOneInput
  totalNumGroups: Int
  numNewGroups: Int
}

input gcCollabDataCreateOneWithoutPeriodInput {
  create: gcCollabDataCreateWithoutPeriodInput
  connect: gcCollabDataWhereUniqueInput
}

input gcCollabDataCreateWithoutPeriodInput {
  id: ID
  totalNumAccounts: Int
  numNewAccounts: Int
  gaData: gaStatsCreateOneInput
  totalNumGroups: Int
  numNewGroups: Int
}

type gcCollabDataEdge {
  node: gcCollabData!
  cursor: String!
}

enum gcCollabDataOrderByInput {
  id_ASC
  id_DESC
  totalNumAccounts_ASC
  totalNumAccounts_DESC
  numNewAccounts_ASC
  numNewAccounts_DESC
  totalNumGroups_ASC
  totalNumGroups_DESC
  numNewGroups_ASC
  numNewGroups_DESC
}

type gcCollabDataPreviousValues {
  id: ID!
  totalNumAccounts: Int
  numNewAccounts: Int
  totalNumGroups: Int
  numNewGroups: Int
}

type gcCollabDataSubscriptionPayload {
  mutation: MutationType!
  node: gcCollabData
  updatedFields: [String!]
  previousValues: gcCollabDataPreviousValues
}

input gcCollabDataSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: gcCollabDataWhereInput
  AND: [gcCollabDataSubscriptionWhereInput!]
  OR: [gcCollabDataSubscriptionWhereInput!]
  NOT: [gcCollabDataSubscriptionWhereInput!]
}

input gcCollabDataUpdateInput {
  period: PeriodUpdateOneRequiredWithoutCollabInput
  totalNumAccounts: Int
  numNewAccounts: Int
  gaData: gaStatsUpdateOneInput
  totalNumGroups: Int
  numNewGroups: Int
}

input gcCollabDataUpdateManyMutationInput {
  totalNumAccounts: Int
  numNewAccounts: Int
  totalNumGroups: Int
  numNewGroups: Int
}

input gcCollabDataUpdateOneRequiredWithoutPeriodInput {
  create: gcCollabDataCreateWithoutPeriodInput
  update: gcCollabDataUpdateWithoutPeriodDataInput
  upsert: gcCollabDataUpsertWithoutPeriodInput
  connect: gcCollabDataWhereUniqueInput
}

input gcCollabDataUpdateWithoutPeriodDataInput {
  totalNumAccounts: Int
  numNewAccounts: Int
  gaData: gaStatsUpdateOneInput
  totalNumGroups: Int
  numNewGroups: Int
}

input gcCollabDataUpsertWithoutPeriodInput {
  update: gcCollabDataUpdateWithoutPeriodDataInput!
  create: gcCollabDataCreateWithoutPeriodInput!
}

input gcCollabDataWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  period: PeriodWhereInput
  totalNumAccounts: Int
  totalNumAccounts_not: Int
  totalNumAccounts_in: [Int!]
  totalNumAccounts_not_in: [Int!]
  totalNumAccounts_lt: Int
  totalNumAccounts_lte: Int
  totalNumAccounts_gt: Int
  totalNumAccounts_gte: Int
  numNewAccounts: Int
  numNewAccounts_not: Int
  numNewAccounts_in: [Int!]
  numNewAccounts_not_in: [Int!]
  numNewAccounts_lt: Int
  numNewAccounts_lte: Int
  numNewAccounts_gt: Int
  numNewAccounts_gte: Int
  gaData: gaStatsWhereInput
  totalNumGroups: Int
  totalNumGroups_not: Int
  totalNumGroups_in: [Int!]
  totalNumGroups_not_in: [Int!]
  totalNumGroups_lt: Int
  totalNumGroups_lte: Int
  totalNumGroups_gt: Int
  totalNumGroups_gte: Int
  numNewGroups: Int
  numNewGroups_not: Int
  numNewGroups_in: [Int!]
  numNewGroups_not_in: [Int!]
  numNewGroups_lt: Int
  numNewGroups_lte: Int
  numNewGroups_gt: Int
  numNewGroups_gte: Int
  AND: [gcCollabDataWhereInput!]
  OR: [gcCollabDataWhereInput!]
  NOT: [gcCollabDataWhereInput!]
}

input gcCollabDataWhereUniqueInput {
  id: ID
}

type gcConnexData {
  id: ID!
  period: Period!
  totalNumAccounts: Int
  numNewAccounts: Int
  gaData: gaStats
  totalNumGroups: Int
  numNewGroups: Int
}

type gcConnexDataConnection {
  pageInfo: PageInfo!
  edges: [gcConnexDataEdge]!
  aggregate: AggregategcConnexData!
}

input gcConnexDataCreateInput {
  id: ID
  period: PeriodCreateOneWithoutConnexInput!
  totalNumAccounts: Int
  numNewAccounts: Int
  gaData: gaStatsCreateOneInput
  totalNumGroups: Int
  numNewGroups: Int
}

input gcConnexDataCreateOneWithoutPeriodInput {
  create: gcConnexDataCreateWithoutPeriodInput
  connect: gcConnexDataWhereUniqueInput
}

input gcConnexDataCreateWithoutPeriodInput {
  id: ID
  totalNumAccounts: Int
  numNewAccounts: Int
  gaData: gaStatsCreateOneInput
  totalNumGroups: Int
  numNewGroups: Int
}

type gcConnexDataEdge {
  node: gcConnexData!
  cursor: String!
}

enum gcConnexDataOrderByInput {
  id_ASC
  id_DESC
  totalNumAccounts_ASC
  totalNumAccounts_DESC
  numNewAccounts_ASC
  numNewAccounts_DESC
  totalNumGroups_ASC
  totalNumGroups_DESC
  numNewGroups_ASC
  numNewGroups_DESC
}

type gcConnexDataPreviousValues {
  id: ID!
  totalNumAccounts: Int
  numNewAccounts: Int
  totalNumGroups: Int
  numNewGroups: Int
}

type gcConnexDataSubscriptionPayload {
  mutation: MutationType!
  node: gcConnexData
  updatedFields: [String!]
  previousValues: gcConnexDataPreviousValues
}

input gcConnexDataSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: gcConnexDataWhereInput
  AND: [gcConnexDataSubscriptionWhereInput!]
  OR: [gcConnexDataSubscriptionWhereInput!]
  NOT: [gcConnexDataSubscriptionWhereInput!]
}

input gcConnexDataUpdateInput {
  period: PeriodUpdateOneRequiredWithoutConnexInput
  totalNumAccounts: Int
  numNewAccounts: Int
  gaData: gaStatsUpdateOneInput
  totalNumGroups: Int
  numNewGroups: Int
}

input gcConnexDataUpdateManyMutationInput {
  totalNumAccounts: Int
  numNewAccounts: Int
  totalNumGroups: Int
  numNewGroups: Int
}

input gcConnexDataUpdateOneRequiredWithoutPeriodInput {
  create: gcConnexDataCreateWithoutPeriodInput
  update: gcConnexDataUpdateWithoutPeriodDataInput
  upsert: gcConnexDataUpsertWithoutPeriodInput
  connect: gcConnexDataWhereUniqueInput
}

input gcConnexDataUpdateWithoutPeriodDataInput {
  totalNumAccounts: Int
  numNewAccounts: Int
  gaData: gaStatsUpdateOneInput
  totalNumGroups: Int
  numNewGroups: Int
}

input gcConnexDataUpsertWithoutPeriodInput {
  update: gcConnexDataUpdateWithoutPeriodDataInput!
  create: gcConnexDataCreateWithoutPeriodInput!
}

input gcConnexDataWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  period: PeriodWhereInput
  totalNumAccounts: Int
  totalNumAccounts_not: Int
  totalNumAccounts_in: [Int!]
  totalNumAccounts_not_in: [Int!]
  totalNumAccounts_lt: Int
  totalNumAccounts_lte: Int
  totalNumAccounts_gt: Int
  totalNumAccounts_gte: Int
  numNewAccounts: Int
  numNewAccounts_not: Int
  numNewAccounts_in: [Int!]
  numNewAccounts_not_in: [Int!]
  numNewAccounts_lt: Int
  numNewAccounts_lte: Int
  numNewAccounts_gt: Int
  numNewAccounts_gte: Int
  gaData: gaStatsWhereInput
  totalNumGroups: Int
  totalNumGroups_not: Int
  totalNumGroups_in: [Int!]
  totalNumGroups_not_in: [Int!]
  totalNumGroups_lt: Int
  totalNumGroups_lte: Int
  totalNumGroups_gt: Int
  totalNumGroups_gte: Int
  numNewGroups: Int
  numNewGroups_not: Int
  numNewGroups_in: [Int!]
  numNewGroups_not_in: [Int!]
  numNewGroups_lt: Int
  numNewGroups_lte: Int
  numNewGroups_gt: Int
  numNewGroups_gte: Int
  AND: [gcConnexDataWhereInput!]
  OR: [gcConnexDataWhereInput!]
  NOT: [gcConnexDataWhereInput!]
}

input gcConnexDataWhereUniqueInput {
  id: ID
}

type gcMessageData {
  id: ID!
  period: Period!
  totalNumAccounts: Int
  numNewAccounts: Int
  totalNumChannelMessages: Int
  numNewChannelMessages: Int
  totalNumPrivateGroupMessages: Int
  numNewPrivateGroupMessages: Int
  totalNumDirectMessages: Int
  numNewDirectMessages: Int
  totalNumFileUploads: Int
  numNewFileUploads: Int
}

type gcMessageDataConnection {
  pageInfo: PageInfo!
  edges: [gcMessageDataEdge]!
  aggregate: AggregategcMessageData!
}

input gcMessageDataCreateInput {
  id: ID
  period: PeriodCreateOneWithoutMessageInput!
  totalNumAccounts: Int
  numNewAccounts: Int
  totalNumChannelMessages: Int
  numNewChannelMessages: Int
  totalNumPrivateGroupMessages: Int
  numNewPrivateGroupMessages: Int
  totalNumDirectMessages: Int
  numNewDirectMessages: Int
  totalNumFileUploads: Int
  numNewFileUploads: Int
}

input gcMessageDataCreateOneWithoutPeriodInput {
  create: gcMessageDataCreateWithoutPeriodInput
  connect: gcMessageDataWhereUniqueInput
}

input gcMessageDataCreateWithoutPeriodInput {
  id: ID
  totalNumAccounts: Int
  numNewAccounts: Int
  totalNumChannelMessages: Int
  numNewChannelMessages: Int
  totalNumPrivateGroupMessages: Int
  numNewPrivateGroupMessages: Int
  totalNumDirectMessages: Int
  numNewDirectMessages: Int
  totalNumFileUploads: Int
  numNewFileUploads: Int
}

type gcMessageDataEdge {
  node: gcMessageData!
  cursor: String!
}

enum gcMessageDataOrderByInput {
  id_ASC
  id_DESC
  totalNumAccounts_ASC
  totalNumAccounts_DESC
  numNewAccounts_ASC
  numNewAccounts_DESC
  totalNumChannelMessages_ASC
  totalNumChannelMessages_DESC
  numNewChannelMessages_ASC
  numNewChannelMessages_DESC
  totalNumPrivateGroupMessages_ASC
  totalNumPrivateGroupMessages_DESC
  numNewPrivateGroupMessages_ASC
  numNewPrivateGroupMessages_DESC
  totalNumDirectMessages_ASC
  totalNumDirectMessages_DESC
  numNewDirectMessages_ASC
  numNewDirectMessages_DESC
  totalNumFileUploads_ASC
  totalNumFileUploads_DESC
  numNewFileUploads_ASC
  numNewFileUploads_DESC
}

type gcMessageDataPreviousValues {
  id: ID!
  totalNumAccounts: Int
  numNewAccounts: Int
  totalNumChannelMessages: Int
  numNewChannelMessages: Int
  totalNumPrivateGroupMessages: Int
  numNewPrivateGroupMessages: Int
  totalNumDirectMessages: Int
  numNewDirectMessages: Int
  totalNumFileUploads: Int
  numNewFileUploads: Int
}

type gcMessageDataSubscriptionPayload {
  mutation: MutationType!
  node: gcMessageData
  updatedFields: [String!]
  previousValues: gcMessageDataPreviousValues
}

input gcMessageDataSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: gcMessageDataWhereInput
  AND: [gcMessageDataSubscriptionWhereInput!]
  OR: [gcMessageDataSubscriptionWhereInput!]
  NOT: [gcMessageDataSubscriptionWhereInput!]
}

input gcMessageDataUpdateInput {
  period: PeriodUpdateOneRequiredWithoutMessageInput
  totalNumAccounts: Int
  numNewAccounts: Int
  totalNumChannelMessages: Int
  numNewChannelMessages: Int
  totalNumPrivateGroupMessages: Int
  numNewPrivateGroupMessages: Int
  totalNumDirectMessages: Int
  numNewDirectMessages: Int
  totalNumFileUploads: Int
  numNewFileUploads: Int
}

input gcMessageDataUpdateManyMutationInput {
  totalNumAccounts: Int
  numNewAccounts: Int
  totalNumChannelMessages: Int
  numNewChannelMessages: Int
  totalNumPrivateGroupMessages: Int
  numNewPrivateGroupMessages: Int
  totalNumDirectMessages: Int
  numNewDirectMessages: Int
  totalNumFileUploads: Int
  numNewFileUploads: Int
}

input gcMessageDataUpdateOneRequiredWithoutPeriodInput {
  create: gcMessageDataCreateWithoutPeriodInput
  update: gcMessageDataUpdateWithoutPeriodDataInput
  upsert: gcMessageDataUpsertWithoutPeriodInput
  connect: gcMessageDataWhereUniqueInput
}

input gcMessageDataUpdateWithoutPeriodDataInput {
  totalNumAccounts: Int
  numNewAccounts: Int
  totalNumChannelMessages: Int
  numNewChannelMessages: Int
  totalNumPrivateGroupMessages: Int
  numNewPrivateGroupMessages: Int
  totalNumDirectMessages: Int
  numNewDirectMessages: Int
  totalNumFileUploads: Int
  numNewFileUploads: Int
}

input gcMessageDataUpsertWithoutPeriodInput {
  update: gcMessageDataUpdateWithoutPeriodDataInput!
  create: gcMessageDataCreateWithoutPeriodInput!
}

input gcMessageDataWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  period: PeriodWhereInput
  totalNumAccounts: Int
  totalNumAccounts_not: Int
  totalNumAccounts_in: [Int!]
  totalNumAccounts_not_in: [Int!]
  totalNumAccounts_lt: Int
  totalNumAccounts_lte: Int
  totalNumAccounts_gt: Int
  totalNumAccounts_gte: Int
  numNewAccounts: Int
  numNewAccounts_not: Int
  numNewAccounts_in: [Int!]
  numNewAccounts_not_in: [Int!]
  numNewAccounts_lt: Int
  numNewAccounts_lte: Int
  numNewAccounts_gt: Int
  numNewAccounts_gte: Int
  totalNumChannelMessages: Int
  totalNumChannelMessages_not: Int
  totalNumChannelMessages_in: [Int!]
  totalNumChannelMessages_not_in: [Int!]
  totalNumChannelMessages_lt: Int
  totalNumChannelMessages_lte: Int
  totalNumChannelMessages_gt: Int
  totalNumChannelMessages_gte: Int
  numNewChannelMessages: Int
  numNewChannelMessages_not: Int
  numNewChannelMessages_in: [Int!]
  numNewChannelMessages_not_in: [Int!]
  numNewChannelMessages_lt: Int
  numNewChannelMessages_lte: Int
  numNewChannelMessages_gt: Int
  numNewChannelMessages_gte: Int
  totalNumPrivateGroupMessages: Int
  totalNumPrivateGroupMessages_not: Int
  totalNumPrivateGroupMessages_in: [Int!]
  totalNumPrivateGroupMessages_not_in: [Int!]
  totalNumPrivateGroupMessages_lt: Int
  totalNumPrivateGroupMessages_lte: Int
  totalNumPrivateGroupMessages_gt: Int
  totalNumPrivateGroupMessages_gte: Int
  numNewPrivateGroupMessages: Int
  numNewPrivateGroupMessages_not: Int
  numNewPrivateGroupMessages_in: [Int!]
  numNewPrivateGroupMessages_not_in: [Int!]
  numNewPrivateGroupMessages_lt: Int
  numNewPrivateGroupMessages_lte: Int
  numNewPrivateGroupMessages_gt: Int
  numNewPrivateGroupMessages_gte: Int
  totalNumDirectMessages: Int
  totalNumDirectMessages_not: Int
  totalNumDirectMessages_in: [Int!]
  totalNumDirectMessages_not_in: [Int!]
  totalNumDirectMessages_lt: Int
  totalNumDirectMessages_lte: Int
  totalNumDirectMessages_gt: Int
  totalNumDirectMessages_gte: Int
  numNewDirectMessages: Int
  numNewDirectMessages_not: Int
  numNewDirectMessages_in: [Int!]
  numNewDirectMessages_not_in: [Int!]
  numNewDirectMessages_lt: Int
  numNewDirectMessages_lte: Int
  numNewDirectMessages_gt: Int
  numNewDirectMessages_gte: Int
  totalNumFileUploads: Int
  totalNumFileUploads_not: Int
  totalNumFileUploads_in: [Int!]
  totalNumFileUploads_not_in: [Int!]
  totalNumFileUploads_lt: Int
  totalNumFileUploads_lte: Int
  totalNumFileUploads_gt: Int
  totalNumFileUploads_gte: Int
  numNewFileUploads: Int
  numNewFileUploads_not: Int
  numNewFileUploads_in: [Int!]
  numNewFileUploads_not_in: [Int!]
  numNewFileUploads_lt: Int
  numNewFileUploads_lte: Int
  numNewFileUploads_gt: Int
  numNewFileUploads_gte: Int
  AND: [gcMessageDataWhereInput!]
  OR: [gcMessageDataWhereInput!]
  NOT: [gcMessageDataWhereInput!]
}

input gcMessageDataWhereUniqueInput {
  id: ID
}

type gcPediaData {
  id: ID!
  period: Period!
  totalNumAccounts: Int
  numNewAccounts: Int
  totalNumArticles: Int
  numNewArticles: Int
  totalNumEdits: Int
  numNewEdits: Int
}

type gcPediaDataConnection {
  pageInfo: PageInfo!
  edges: [gcPediaDataEdge]!
  aggregate: AggregategcPediaData!
}

input gcPediaDataCreateInput {
  id: ID
  period: PeriodCreateOneWithoutPediaInput!
  totalNumAccounts: Int
  numNewAccounts: Int
  totalNumArticles: Int
  numNewArticles: Int
  totalNumEdits: Int
  numNewEdits: Int
}

input gcPediaDataCreateOneWithoutPeriodInput {
  create: gcPediaDataCreateWithoutPeriodInput
  connect: gcPediaDataWhereUniqueInput
}

input gcPediaDataCreateWithoutPeriodInput {
  id: ID
  totalNumAccounts: Int
  numNewAccounts: Int
  totalNumArticles: Int
  numNewArticles: Int
  totalNumEdits: Int
  numNewEdits: Int
}

type gcPediaDataEdge {
  node: gcPediaData!
  cursor: String!
}

enum gcPediaDataOrderByInput {
  id_ASC
  id_DESC
  totalNumAccounts_ASC
  totalNumAccounts_DESC
  numNewAccounts_ASC
  numNewAccounts_DESC
  totalNumArticles_ASC
  totalNumArticles_DESC
  numNewArticles_ASC
  numNewArticles_DESC
  totalNumEdits_ASC
  totalNumEdits_DESC
  numNewEdits_ASC
  numNewEdits_DESC
}

type gcPediaDataPreviousValues {
  id: ID!
  totalNumAccounts: Int
  numNewAccounts: Int
  totalNumArticles: Int
  numNewArticles: Int
  totalNumEdits: Int
  numNewEdits: Int
}

type gcPediaDataSubscriptionPayload {
  mutation: MutationType!
  node: gcPediaData
  updatedFields: [String!]
  previousValues: gcPediaDataPreviousValues
}

input gcPediaDataSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: gcPediaDataWhereInput
  AND: [gcPediaDataSubscriptionWhereInput!]
  OR: [gcPediaDataSubscriptionWhereInput!]
  NOT: [gcPediaDataSubscriptionWhereInput!]
}

input gcPediaDataUpdateInput {
  period: PeriodUpdateOneRequiredWithoutPediaInput
  totalNumAccounts: Int
  numNewAccounts: Int
  totalNumArticles: Int
  numNewArticles: Int
  totalNumEdits: Int
  numNewEdits: Int
}

input gcPediaDataUpdateManyMutationInput {
  totalNumAccounts: Int
  numNewAccounts: Int
  totalNumArticles: Int
  numNewArticles: Int
  totalNumEdits: Int
  numNewEdits: Int
}

input gcPediaDataUpdateOneRequiredWithoutPeriodInput {
  create: gcPediaDataCreateWithoutPeriodInput
  update: gcPediaDataUpdateWithoutPeriodDataInput
  upsert: gcPediaDataUpsertWithoutPeriodInput
  connect: gcPediaDataWhereUniqueInput
}

input gcPediaDataUpdateWithoutPeriodDataInput {
  totalNumAccounts: Int
  numNewAccounts: Int
  totalNumArticles: Int
  numNewArticles: Int
  totalNumEdits: Int
  numNewEdits: Int
}

input gcPediaDataUpsertWithoutPeriodInput {
  update: gcPediaDataUpdateWithoutPeriodDataInput!
  create: gcPediaDataCreateWithoutPeriodInput!
}

input gcPediaDataWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  period: PeriodWhereInput
  totalNumAccounts: Int
  totalNumAccounts_not: Int
  totalNumAccounts_in: [Int!]
  totalNumAccounts_not_in: [Int!]
  totalNumAccounts_lt: Int
  totalNumAccounts_lte: Int
  totalNumAccounts_gt: Int
  totalNumAccounts_gte: Int
  numNewAccounts: Int
  numNewAccounts_not: Int
  numNewAccounts_in: [Int!]
  numNewAccounts_not_in: [Int!]
  numNewAccounts_lt: Int
  numNewAccounts_lte: Int
  numNewAccounts_gt: Int
  numNewAccounts_gte: Int
  totalNumArticles: Int
  totalNumArticles_not: Int
  totalNumArticles_in: [Int!]
  totalNumArticles_not_in: [Int!]
  totalNumArticles_lt: Int
  totalNumArticles_lte: Int
  totalNumArticles_gt: Int
  totalNumArticles_gte: Int
  numNewArticles: Int
  numNewArticles_not: Int
  numNewArticles_in: [Int!]
  numNewArticles_not_in: [Int!]
  numNewArticles_lt: Int
  numNewArticles_lte: Int
  numNewArticles_gt: Int
  numNewArticles_gte: Int
  totalNumEdits: Int
  totalNumEdits_not: Int
  totalNumEdits_in: [Int!]
  totalNumEdits_not_in: [Int!]
  totalNumEdits_lt: Int
  totalNumEdits_lte: Int
  totalNumEdits_gt: Int
  totalNumEdits_gte: Int
  numNewEdits: Int
  numNewEdits_not: Int
  numNewEdits_in: [Int!]
  numNewEdits_not_in: [Int!]
  numNewEdits_lt: Int
  numNewEdits_lte: Int
  numNewEdits_gt: Int
  numNewEdits_gte: Int
  AND: [gcPediaDataWhereInput!]
  OR: [gcPediaDataWhereInput!]
  NOT: [gcPediaDataWhereInput!]
}

input gcPediaDataWhereUniqueInput {
  id: ID
}

type gcWikiData {
  id: ID!
  period: Period!
  totalNumAccounts: Int
  numNewAccounts: Int
  gaData: gaStats
  totalNumArticles: Int
  numNewArticles: Int
  totalNumEdits: Int
  numNewEdits: Int
}

type gcWikiDataConnection {
  pageInfo: PageInfo!
  edges: [gcWikiDataEdge]!
  aggregate: AggregategcWikiData!
}

input gcWikiDataCreateInput {
  id: ID
  period: PeriodCreateOneWithoutWikiInput!
  totalNumAccounts: Int
  numNewAccounts: Int
  gaData: gaStatsCreateOneInput
  totalNumArticles: Int
  numNewArticles: Int
  totalNumEdits: Int
  numNewEdits: Int
}

input gcWikiDataCreateOneWithoutPeriodInput {
  create: gcWikiDataCreateWithoutPeriodInput
  connect: gcWikiDataWhereUniqueInput
}

input gcWikiDataCreateWithoutPeriodInput {
  id: ID
  totalNumAccounts: Int
  numNewAccounts: Int
  gaData: gaStatsCreateOneInput
  totalNumArticles: Int
  numNewArticles: Int
  totalNumEdits: Int
  numNewEdits: Int
}

type gcWikiDataEdge {
  node: gcWikiData!
  cursor: String!
}

enum gcWikiDataOrderByInput {
  id_ASC
  id_DESC
  totalNumAccounts_ASC
  totalNumAccounts_DESC
  numNewAccounts_ASC
  numNewAccounts_DESC
  totalNumArticles_ASC
  totalNumArticles_DESC
  numNewArticles_ASC
  numNewArticles_DESC
  totalNumEdits_ASC
  totalNumEdits_DESC
  numNewEdits_ASC
  numNewEdits_DESC
}

type gcWikiDataPreviousValues {
  id: ID!
  totalNumAccounts: Int
  numNewAccounts: Int
  totalNumArticles: Int
  numNewArticles: Int
  totalNumEdits: Int
  numNewEdits: Int
}

type gcWikiDataSubscriptionPayload {
  mutation: MutationType!
  node: gcWikiData
  updatedFields: [String!]
  previousValues: gcWikiDataPreviousValues
}

input gcWikiDataSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: gcWikiDataWhereInput
  AND: [gcWikiDataSubscriptionWhereInput!]
  OR: [gcWikiDataSubscriptionWhereInput!]
  NOT: [gcWikiDataSubscriptionWhereInput!]
}

input gcWikiDataUpdateInput {
  period: PeriodUpdateOneRequiredWithoutWikiInput
  totalNumAccounts: Int
  numNewAccounts: Int
  gaData: gaStatsUpdateOneInput
  totalNumArticles: Int
  numNewArticles: Int
  totalNumEdits: Int
  numNewEdits: Int
}

input gcWikiDataUpdateManyMutationInput {
  totalNumAccounts: Int
  numNewAccounts: Int
  totalNumArticles: Int
  numNewArticles: Int
  totalNumEdits: Int
  numNewEdits: Int
}

input gcWikiDataUpdateOneRequiredWithoutPeriodInput {
  create: gcWikiDataCreateWithoutPeriodInput
  update: gcWikiDataUpdateWithoutPeriodDataInput
  upsert: gcWikiDataUpsertWithoutPeriodInput
  connect: gcWikiDataWhereUniqueInput
}

input gcWikiDataUpdateWithoutPeriodDataInput {
  totalNumAccounts: Int
  numNewAccounts: Int
  gaData: gaStatsUpdateOneInput
  totalNumArticles: Int
  numNewArticles: Int
  totalNumEdits: Int
  numNewEdits: Int
}

input gcWikiDataUpsertWithoutPeriodInput {
  update: gcWikiDataUpdateWithoutPeriodDataInput!
  create: gcWikiDataCreateWithoutPeriodInput!
}

input gcWikiDataWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  period: PeriodWhereInput
  totalNumAccounts: Int
  totalNumAccounts_not: Int
  totalNumAccounts_in: [Int!]
  totalNumAccounts_not_in: [Int!]
  totalNumAccounts_lt: Int
  totalNumAccounts_lte: Int
  totalNumAccounts_gt: Int
  totalNumAccounts_gte: Int
  numNewAccounts: Int
  numNewAccounts_not: Int
  numNewAccounts_in: [Int!]
  numNewAccounts_not_in: [Int!]
  numNewAccounts_lt: Int
  numNewAccounts_lte: Int
  numNewAccounts_gt: Int
  numNewAccounts_gte: Int
  gaData: gaStatsWhereInput
  totalNumArticles: Int
  totalNumArticles_not: Int
  totalNumArticles_in: [Int!]
  totalNumArticles_not_in: [Int!]
  totalNumArticles_lt: Int
  totalNumArticles_lte: Int
  totalNumArticles_gt: Int
  totalNumArticles_gte: Int
  numNewArticles: Int
  numNewArticles_not: Int
  numNewArticles_in: [Int!]
  numNewArticles_not_in: [Int!]
  numNewArticles_lt: Int
  numNewArticles_lte: Int
  numNewArticles_gt: Int
  numNewArticles_gte: Int
  totalNumEdits: Int
  totalNumEdits_not: Int
  totalNumEdits_in: [Int!]
  totalNumEdits_not_in: [Int!]
  totalNumEdits_lt: Int
  totalNumEdits_lte: Int
  totalNumEdits_gt: Int
  totalNumEdits_gte: Int
  numNewEdits: Int
  numNewEdits_not: Int
  numNewEdits_in: [Int!]
  numNewEdits_not_in: [Int!]
  numNewEdits_lt: Int
  numNewEdits_lte: Int
  numNewEdits_gt: Int
  numNewEdits_gte: Int
  AND: [gcWikiDataWhereInput!]
  OR: [gcWikiDataWhereInput!]
  NOT: [gcWikiDataWhereInput!]
}

input gcWikiDataWhereUniqueInput {
  id: ID
}

scalar Long

type Mutation {
  createPeriod(data: PeriodCreateInput!): Period!
  updatePeriod(data: PeriodUpdateInput!, where: PeriodWhereUniqueInput!): Period
  updateManyPeriods(data: PeriodUpdateManyMutationInput!, where: PeriodWhereInput): BatchPayload!
  upsertPeriod(where: PeriodWhereUniqueInput!, create: PeriodCreateInput!, update: PeriodUpdateInput!): Period!
  deletePeriod(where: PeriodWhereUniqueInput!): Period
  deleteManyPeriods(where: PeriodWhereInput): BatchPayload!
  creategaStats(data: gaStatsCreateInput!): gaStats!
  updategaStats(data: gaStatsUpdateInput!, where: gaStatsWhereUniqueInput!): gaStats
  updateManygaStatses(data: gaStatsUpdateManyMutationInput!, where: gaStatsWhereInput): BatchPayload!
  upsertgaStats(where: gaStatsWhereUniqueInput!, create: gaStatsCreateInput!, update: gaStatsUpdateInput!): gaStats!
  deletegaStats(where: gaStatsWhereUniqueInput!): gaStats
  deleteManygaStatses(where: gaStatsWhereInput): BatchPayload!
  creategcAccountData(data: gcAccountDataCreateInput!): gcAccountData!
  updategcAccountData(data: gcAccountDataUpdateInput!, where: gcAccountDataWhereUniqueInput!): gcAccountData
  updateManygcAccountDatas(data: gcAccountDataUpdateManyMutationInput!, where: gcAccountDataWhereInput): BatchPayload!
  upsertgcAccountData(where: gcAccountDataWhereUniqueInput!, create: gcAccountDataCreateInput!, update: gcAccountDataUpdateInput!): gcAccountData!
  deletegcAccountData(where: gcAccountDataWhereUniqueInput!): gcAccountData
  deleteManygcAccountDatas(where: gcAccountDataWhereInput): BatchPayload!
  creategcCollabData(data: gcCollabDataCreateInput!): gcCollabData!
  updategcCollabData(data: gcCollabDataUpdateInput!, where: gcCollabDataWhereUniqueInput!): gcCollabData
  updateManygcCollabDatas(data: gcCollabDataUpdateManyMutationInput!, where: gcCollabDataWhereInput): BatchPayload!
  upsertgcCollabData(where: gcCollabDataWhereUniqueInput!, create: gcCollabDataCreateInput!, update: gcCollabDataUpdateInput!): gcCollabData!
  deletegcCollabData(where: gcCollabDataWhereUniqueInput!): gcCollabData
  deleteManygcCollabDatas(where: gcCollabDataWhereInput): BatchPayload!
  creategcConnexData(data: gcConnexDataCreateInput!): gcConnexData!
  updategcConnexData(data: gcConnexDataUpdateInput!, where: gcConnexDataWhereUniqueInput!): gcConnexData
  updateManygcConnexDatas(data: gcConnexDataUpdateManyMutationInput!, where: gcConnexDataWhereInput): BatchPayload!
  upsertgcConnexData(where: gcConnexDataWhereUniqueInput!, create: gcConnexDataCreateInput!, update: gcConnexDataUpdateInput!): gcConnexData!
  deletegcConnexData(where: gcConnexDataWhereUniqueInput!): gcConnexData
  deleteManygcConnexDatas(where: gcConnexDataWhereInput): BatchPayload!
  creategcMessageData(data: gcMessageDataCreateInput!): gcMessageData!
  updategcMessageData(data: gcMessageDataUpdateInput!, where: gcMessageDataWhereUniqueInput!): gcMessageData
  updateManygcMessageDatas(data: gcMessageDataUpdateManyMutationInput!, where: gcMessageDataWhereInput): BatchPayload!
  upsertgcMessageData(where: gcMessageDataWhereUniqueInput!, create: gcMessageDataCreateInput!, update: gcMessageDataUpdateInput!): gcMessageData!
  deletegcMessageData(where: gcMessageDataWhereUniqueInput!): gcMessageData
  deleteManygcMessageDatas(where: gcMessageDataWhereInput): BatchPayload!
  creategcPediaData(data: gcPediaDataCreateInput!): gcPediaData!
  updategcPediaData(data: gcPediaDataUpdateInput!, where: gcPediaDataWhereUniqueInput!): gcPediaData
  updateManygcPediaDatas(data: gcPediaDataUpdateManyMutationInput!, where: gcPediaDataWhereInput): BatchPayload!
  upsertgcPediaData(where: gcPediaDataWhereUniqueInput!, create: gcPediaDataCreateInput!, update: gcPediaDataUpdateInput!): gcPediaData!
  deletegcPediaData(where: gcPediaDataWhereUniqueInput!): gcPediaData
  deleteManygcPediaDatas(where: gcPediaDataWhereInput): BatchPayload!
  creategcWikiData(data: gcWikiDataCreateInput!): gcWikiData!
  updategcWikiData(data: gcWikiDataUpdateInput!, where: gcWikiDataWhereUniqueInput!): gcWikiData
  updateManygcWikiDatas(data: gcWikiDataUpdateManyMutationInput!, where: gcWikiDataWhereInput): BatchPayload!
  upsertgcWikiData(where: gcWikiDataWhereUniqueInput!, create: gcWikiDataCreateInput!, update: gcWikiDataUpdateInput!): gcWikiData!
  deletegcWikiData(where: gcWikiDataWhereUniqueInput!): gcWikiData
  deleteManygcWikiDatas(where: gcWikiDataWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Period {
  id: ID!
  month: Int!
  year: Int!
  account: gcAccountData
  collab: gcCollabData!
  connex: gcConnexData!
  message: gcMessageData!
  pedia: gcPediaData!
  wiki: gcWikiData!
}

type PeriodConnection {
  pageInfo: PageInfo!
  edges: [PeriodEdge]!
  aggregate: AggregatePeriod!
}

input PeriodCreateInput {
  id: ID
  month: Int!
  year: Int!
  account: gcAccountDataCreateOneWithoutPeriodInput
  collab: gcCollabDataCreateOneWithoutPeriodInput!
  connex: gcConnexDataCreateOneWithoutPeriodInput!
  message: gcMessageDataCreateOneWithoutPeriodInput!
  pedia: gcPediaDataCreateOneWithoutPeriodInput!
  wiki: gcWikiDataCreateOneWithoutPeriodInput!
}

input PeriodCreateOneWithoutAccountInput {
  create: PeriodCreateWithoutAccountInput
  connect: PeriodWhereUniqueInput
}

input PeriodCreateOneWithoutCollabInput {
  create: PeriodCreateWithoutCollabInput
  connect: PeriodWhereUniqueInput
}

input PeriodCreateOneWithoutConnexInput {
  create: PeriodCreateWithoutConnexInput
  connect: PeriodWhereUniqueInput
}

input PeriodCreateOneWithoutMessageInput {
  create: PeriodCreateWithoutMessageInput
  connect: PeriodWhereUniqueInput
}

input PeriodCreateOneWithoutPediaInput {
  create: PeriodCreateWithoutPediaInput
  connect: PeriodWhereUniqueInput
}

input PeriodCreateOneWithoutWikiInput {
  create: PeriodCreateWithoutWikiInput
  connect: PeriodWhereUniqueInput
}

input PeriodCreateWithoutAccountInput {
  id: ID
  month: Int!
  year: Int!
  collab: gcCollabDataCreateOneWithoutPeriodInput!
  connex: gcConnexDataCreateOneWithoutPeriodInput!
  message: gcMessageDataCreateOneWithoutPeriodInput!
  pedia: gcPediaDataCreateOneWithoutPeriodInput!
  wiki: gcWikiDataCreateOneWithoutPeriodInput!
}

input PeriodCreateWithoutCollabInput {
  id: ID
  month: Int!
  year: Int!
  account: gcAccountDataCreateOneWithoutPeriodInput
  connex: gcConnexDataCreateOneWithoutPeriodInput!
  message: gcMessageDataCreateOneWithoutPeriodInput!
  pedia: gcPediaDataCreateOneWithoutPeriodInput!
  wiki: gcWikiDataCreateOneWithoutPeriodInput!
}

input PeriodCreateWithoutConnexInput {
  id: ID
  month: Int!
  year: Int!
  account: gcAccountDataCreateOneWithoutPeriodInput
  collab: gcCollabDataCreateOneWithoutPeriodInput!
  message: gcMessageDataCreateOneWithoutPeriodInput!
  pedia: gcPediaDataCreateOneWithoutPeriodInput!
  wiki: gcWikiDataCreateOneWithoutPeriodInput!
}

input PeriodCreateWithoutMessageInput {
  id: ID
  month: Int!
  year: Int!
  account: gcAccountDataCreateOneWithoutPeriodInput
  collab: gcCollabDataCreateOneWithoutPeriodInput!
  connex: gcConnexDataCreateOneWithoutPeriodInput!
  pedia: gcPediaDataCreateOneWithoutPeriodInput!
  wiki: gcWikiDataCreateOneWithoutPeriodInput!
}

input PeriodCreateWithoutPediaInput {
  id: ID
  month: Int!
  year: Int!
  account: gcAccountDataCreateOneWithoutPeriodInput
  collab: gcCollabDataCreateOneWithoutPeriodInput!
  connex: gcConnexDataCreateOneWithoutPeriodInput!
  message: gcMessageDataCreateOneWithoutPeriodInput!
  wiki: gcWikiDataCreateOneWithoutPeriodInput!
}

input PeriodCreateWithoutWikiInput {
  id: ID
  month: Int!
  year: Int!
  account: gcAccountDataCreateOneWithoutPeriodInput
  collab: gcCollabDataCreateOneWithoutPeriodInput!
  connex: gcConnexDataCreateOneWithoutPeriodInput!
  message: gcMessageDataCreateOneWithoutPeriodInput!
  pedia: gcPediaDataCreateOneWithoutPeriodInput!
}

type PeriodEdge {
  node: Period!
  cursor: String!
}

enum PeriodOrderByInput {
  id_ASC
  id_DESC
  month_ASC
  month_DESC
  year_ASC
  year_DESC
}

type PeriodPreviousValues {
  id: ID!
  month: Int!
  year: Int!
}

type PeriodSubscriptionPayload {
  mutation: MutationType!
  node: Period
  updatedFields: [String!]
  previousValues: PeriodPreviousValues
}

input PeriodSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PeriodWhereInput
  AND: [PeriodSubscriptionWhereInput!]
  OR: [PeriodSubscriptionWhereInput!]
  NOT: [PeriodSubscriptionWhereInput!]
}

input PeriodUpdateInput {
  month: Int
  year: Int
  account: gcAccountDataUpdateOneWithoutPeriodInput
  collab: gcCollabDataUpdateOneRequiredWithoutPeriodInput
  connex: gcConnexDataUpdateOneRequiredWithoutPeriodInput
  message: gcMessageDataUpdateOneRequiredWithoutPeriodInput
  pedia: gcPediaDataUpdateOneRequiredWithoutPeriodInput
  wiki: gcWikiDataUpdateOneRequiredWithoutPeriodInput
}

input PeriodUpdateManyMutationInput {
  month: Int
  year: Int
}

input PeriodUpdateOneRequiredWithoutAccountInput {
  create: PeriodCreateWithoutAccountInput
  update: PeriodUpdateWithoutAccountDataInput
  upsert: PeriodUpsertWithoutAccountInput
  connect: PeriodWhereUniqueInput
}

input PeriodUpdateOneRequiredWithoutCollabInput {
  create: PeriodCreateWithoutCollabInput
  update: PeriodUpdateWithoutCollabDataInput
  upsert: PeriodUpsertWithoutCollabInput
  connect: PeriodWhereUniqueInput
}

input PeriodUpdateOneRequiredWithoutConnexInput {
  create: PeriodCreateWithoutConnexInput
  update: PeriodUpdateWithoutConnexDataInput
  upsert: PeriodUpsertWithoutConnexInput
  connect: PeriodWhereUniqueInput
}

input PeriodUpdateOneRequiredWithoutMessageInput {
  create: PeriodCreateWithoutMessageInput
  update: PeriodUpdateWithoutMessageDataInput
  upsert: PeriodUpsertWithoutMessageInput
  connect: PeriodWhereUniqueInput
}

input PeriodUpdateOneRequiredWithoutPediaInput {
  create: PeriodCreateWithoutPediaInput
  update: PeriodUpdateWithoutPediaDataInput
  upsert: PeriodUpsertWithoutPediaInput
  connect: PeriodWhereUniqueInput
}

input PeriodUpdateOneRequiredWithoutWikiInput {
  create: PeriodCreateWithoutWikiInput
  update: PeriodUpdateWithoutWikiDataInput
  upsert: PeriodUpsertWithoutWikiInput
  connect: PeriodWhereUniqueInput
}

input PeriodUpdateWithoutAccountDataInput {
  month: Int
  year: Int
  collab: gcCollabDataUpdateOneRequiredWithoutPeriodInput
  connex: gcConnexDataUpdateOneRequiredWithoutPeriodInput
  message: gcMessageDataUpdateOneRequiredWithoutPeriodInput
  pedia: gcPediaDataUpdateOneRequiredWithoutPeriodInput
  wiki: gcWikiDataUpdateOneRequiredWithoutPeriodInput
}

input PeriodUpdateWithoutCollabDataInput {
  month: Int
  year: Int
  account: gcAccountDataUpdateOneWithoutPeriodInput
  connex: gcConnexDataUpdateOneRequiredWithoutPeriodInput
  message: gcMessageDataUpdateOneRequiredWithoutPeriodInput
  pedia: gcPediaDataUpdateOneRequiredWithoutPeriodInput
  wiki: gcWikiDataUpdateOneRequiredWithoutPeriodInput
}

input PeriodUpdateWithoutConnexDataInput {
  month: Int
  year: Int
  account: gcAccountDataUpdateOneWithoutPeriodInput
  collab: gcCollabDataUpdateOneRequiredWithoutPeriodInput
  message: gcMessageDataUpdateOneRequiredWithoutPeriodInput
  pedia: gcPediaDataUpdateOneRequiredWithoutPeriodInput
  wiki: gcWikiDataUpdateOneRequiredWithoutPeriodInput
}

input PeriodUpdateWithoutMessageDataInput {
  month: Int
  year: Int
  account: gcAccountDataUpdateOneWithoutPeriodInput
  collab: gcCollabDataUpdateOneRequiredWithoutPeriodInput
  connex: gcConnexDataUpdateOneRequiredWithoutPeriodInput
  pedia: gcPediaDataUpdateOneRequiredWithoutPeriodInput
  wiki: gcWikiDataUpdateOneRequiredWithoutPeriodInput
}

input PeriodUpdateWithoutPediaDataInput {
  month: Int
  year: Int
  account: gcAccountDataUpdateOneWithoutPeriodInput
  collab: gcCollabDataUpdateOneRequiredWithoutPeriodInput
  connex: gcConnexDataUpdateOneRequiredWithoutPeriodInput
  message: gcMessageDataUpdateOneRequiredWithoutPeriodInput
  wiki: gcWikiDataUpdateOneRequiredWithoutPeriodInput
}

input PeriodUpdateWithoutWikiDataInput {
  month: Int
  year: Int
  account: gcAccountDataUpdateOneWithoutPeriodInput
  collab: gcCollabDataUpdateOneRequiredWithoutPeriodInput
  connex: gcConnexDataUpdateOneRequiredWithoutPeriodInput
  message: gcMessageDataUpdateOneRequiredWithoutPeriodInput
  pedia: gcPediaDataUpdateOneRequiredWithoutPeriodInput
}

input PeriodUpsertWithoutAccountInput {
  update: PeriodUpdateWithoutAccountDataInput!
  create: PeriodCreateWithoutAccountInput!
}

input PeriodUpsertWithoutCollabInput {
  update: PeriodUpdateWithoutCollabDataInput!
  create: PeriodCreateWithoutCollabInput!
}

input PeriodUpsertWithoutConnexInput {
  update: PeriodUpdateWithoutConnexDataInput!
  create: PeriodCreateWithoutConnexInput!
}

input PeriodUpsertWithoutMessageInput {
  update: PeriodUpdateWithoutMessageDataInput!
  create: PeriodCreateWithoutMessageInput!
}

input PeriodUpsertWithoutPediaInput {
  update: PeriodUpdateWithoutPediaDataInput!
  create: PeriodCreateWithoutPediaInput!
}

input PeriodUpsertWithoutWikiInput {
  update: PeriodUpdateWithoutWikiDataInput!
  create: PeriodCreateWithoutWikiInput!
}

input PeriodWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  month: Int
  month_not: Int
  month_in: [Int!]
  month_not_in: [Int!]
  month_lt: Int
  month_lte: Int
  month_gt: Int
  month_gte: Int
  year: Int
  year_not: Int
  year_in: [Int!]
  year_not_in: [Int!]
  year_lt: Int
  year_lte: Int
  year_gt: Int
  year_gte: Int
  account: gcAccountDataWhereInput
  collab: gcCollabDataWhereInput
  connex: gcConnexDataWhereInput
  message: gcMessageDataWhereInput
  pedia: gcPediaDataWhereInput
  wiki: gcWikiDataWhereInput
  AND: [PeriodWhereInput!]
  OR: [PeriodWhereInput!]
  NOT: [PeriodWhereInput!]
}

input PeriodWhereUniqueInput {
  id: ID
}

type Query {
  period(where: PeriodWhereUniqueInput!): Period
  periods(where: PeriodWhereInput, orderBy: PeriodOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Period]!
  periodsConnection(where: PeriodWhereInput, orderBy: PeriodOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PeriodConnection!
  gaStats(where: gaStatsWhereUniqueInput!): gaStats
  gaStatses(where: gaStatsWhereInput, orderBy: gaStatsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [gaStats]!
  gaStatsesConnection(where: gaStatsWhereInput, orderBy: gaStatsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): gaStatsConnection!
  gcAccountData(where: gcAccountDataWhereUniqueInput!): gcAccountData
  gcAccountDatas(where: gcAccountDataWhereInput, orderBy: gcAccountDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [gcAccountData]!
  gcAccountDatasConnection(where: gcAccountDataWhereInput, orderBy: gcAccountDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): gcAccountDataConnection!
  gcCollabData(where: gcCollabDataWhereUniqueInput!): gcCollabData
  gcCollabDatas(where: gcCollabDataWhereInput, orderBy: gcCollabDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [gcCollabData]!
  gcCollabDatasConnection(where: gcCollabDataWhereInput, orderBy: gcCollabDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): gcCollabDataConnection!
  gcConnexData(where: gcConnexDataWhereUniqueInput!): gcConnexData
  gcConnexDatas(where: gcConnexDataWhereInput, orderBy: gcConnexDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [gcConnexData]!
  gcConnexDatasConnection(where: gcConnexDataWhereInput, orderBy: gcConnexDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): gcConnexDataConnection!
  gcMessageData(where: gcMessageDataWhereUniqueInput!): gcMessageData
  gcMessageDatas(where: gcMessageDataWhereInput, orderBy: gcMessageDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [gcMessageData]!
  gcMessageDatasConnection(where: gcMessageDataWhereInput, orderBy: gcMessageDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): gcMessageDataConnection!
  gcPediaData(where: gcPediaDataWhereUniqueInput!): gcPediaData
  gcPediaDatas(where: gcPediaDataWhereInput, orderBy: gcPediaDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [gcPediaData]!
  gcPediaDatasConnection(where: gcPediaDataWhereInput, orderBy: gcPediaDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): gcPediaDataConnection!
  gcWikiData(where: gcWikiDataWhereUniqueInput!): gcWikiData
  gcWikiDatas(where: gcWikiDataWhereInput, orderBy: gcWikiDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [gcWikiData]!
  gcWikiDatasConnection(where: gcWikiDataWhereInput, orderBy: gcWikiDataOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): gcWikiDataConnection!
  node(id: ID!): Node
}

type Subscription {
  period(where: PeriodSubscriptionWhereInput): PeriodSubscriptionPayload
  gaStats(where: gaStatsSubscriptionWhereInput): gaStatsSubscriptionPayload
  gcAccountData(where: gcAccountDataSubscriptionWhereInput): gcAccountDataSubscriptionPayload
  gcCollabData(where: gcCollabDataSubscriptionWhereInput): gcCollabDataSubscriptionPayload
  gcConnexData(where: gcConnexDataSubscriptionWhereInput): gcConnexDataSubscriptionPayload
  gcMessageData(where: gcMessageDataSubscriptionWhereInput): gcMessageDataSubscriptionPayload
  gcPediaData(where: gcPediaDataSubscriptionWhereInput): gcPediaDataSubscriptionPayload
  gcWikiData(where: gcWikiDataSubscriptionWhereInput): gcWikiDataSubscriptionPayload
}
`