/**
 * This file was automatically generated by nexus-prisma@0.3.7
 * Do not make changes to this file directly
 */

import { core } from 'nexus'
import { GraphQLResolveInfo } from 'graphql'
import * as prisma from '../prisma-client'

declare global {
  interface NexusPrismaGen extends NexusPrismaTypes {}
}

export interface NexusPrismaTypes {
  objectTypes: {
    fields: {
      Query: QueryObject
      Period: PeriodObject
      gcAccountData: gcAccountDataObject
      gcCollabData: gcCollabDataObject
      gaStats: gaStatsObject
      gcConnexData: gcConnexDataObject
      gcMessageData: gcMessageDataObject
      gcPediaData: gcPediaDataObject
      gcWikiData: gcWikiDataObject
      PeriodConnection: PeriodConnectionObject
      PageInfo: PageInfoObject
      PeriodEdge: PeriodEdgeObject
      AggregatePeriod: AggregatePeriodObject
      gaStatsConnection: gaStatsConnectionObject
      gaStatsEdge: gaStatsEdgeObject
      AggregategaStats: AggregategaStatsObject
      gcAccountDataConnection: gcAccountDataConnectionObject
      gcAccountDataEdge: gcAccountDataEdgeObject
      AggregategcAccountData: AggregategcAccountDataObject
      gcCollabDataConnection: gcCollabDataConnectionObject
      gcCollabDataEdge: gcCollabDataEdgeObject
      AggregategcCollabData: AggregategcCollabDataObject
      gcConnexDataConnection: gcConnexDataConnectionObject
      gcConnexDataEdge: gcConnexDataEdgeObject
      AggregategcConnexData: AggregategcConnexDataObject
      gcMessageDataConnection: gcMessageDataConnectionObject
      gcMessageDataEdge: gcMessageDataEdgeObject
      AggregategcMessageData: AggregategcMessageDataObject
      gcPediaDataConnection: gcPediaDataConnectionObject
      gcPediaDataEdge: gcPediaDataEdgeObject
      AggregategcPediaData: AggregategcPediaDataObject
      gcWikiDataConnection: gcWikiDataConnectionObject
      gcWikiDataEdge: gcWikiDataEdgeObject
      AggregategcWikiData: AggregategcWikiDataObject
      Mutation: MutationObject
      BatchPayload: BatchPayloadObject
      Subscription: SubscriptionObject
      PeriodSubscriptionPayload: PeriodSubscriptionPayloadObject
      PeriodPreviousValues: PeriodPreviousValuesObject
      gaStatsSubscriptionPayload: gaStatsSubscriptionPayloadObject
      gaStatsPreviousValues: gaStatsPreviousValuesObject
      gcAccountDataSubscriptionPayload: gcAccountDataSubscriptionPayloadObject
      gcAccountDataPreviousValues: gcAccountDataPreviousValuesObject
      gcCollabDataSubscriptionPayload: gcCollabDataSubscriptionPayloadObject
      gcCollabDataPreviousValues: gcCollabDataPreviousValuesObject
      gcConnexDataSubscriptionPayload: gcConnexDataSubscriptionPayloadObject
      gcConnexDataPreviousValues: gcConnexDataPreviousValuesObject
      gcMessageDataSubscriptionPayload: gcMessageDataSubscriptionPayloadObject
      gcMessageDataPreviousValues: gcMessageDataPreviousValuesObject
      gcPediaDataSubscriptionPayload: gcPediaDataSubscriptionPayloadObject
      gcPediaDataPreviousValues: gcPediaDataPreviousValuesObject
      gcWikiDataSubscriptionPayload: gcWikiDataSubscriptionPayloadObject
      gcWikiDataPreviousValues: gcWikiDataPreviousValuesObject
    }
    fieldsDetails: {
      Query: QueryFieldDetails
      Period: PeriodFieldDetails
      gcAccountData: gcAccountDataFieldDetails
      gcCollabData: gcCollabDataFieldDetails
      gaStats: gaStatsFieldDetails
      gcConnexData: gcConnexDataFieldDetails
      gcMessageData: gcMessageDataFieldDetails
      gcPediaData: gcPediaDataFieldDetails
      gcWikiData: gcWikiDataFieldDetails
      PeriodConnection: PeriodConnectionFieldDetails
      PageInfo: PageInfoFieldDetails
      PeriodEdge: PeriodEdgeFieldDetails
      AggregatePeriod: AggregatePeriodFieldDetails
      gaStatsConnection: gaStatsConnectionFieldDetails
      gaStatsEdge: gaStatsEdgeFieldDetails
      AggregategaStats: AggregategaStatsFieldDetails
      gcAccountDataConnection: gcAccountDataConnectionFieldDetails
      gcAccountDataEdge: gcAccountDataEdgeFieldDetails
      AggregategcAccountData: AggregategcAccountDataFieldDetails
      gcCollabDataConnection: gcCollabDataConnectionFieldDetails
      gcCollabDataEdge: gcCollabDataEdgeFieldDetails
      AggregategcCollabData: AggregategcCollabDataFieldDetails
      gcConnexDataConnection: gcConnexDataConnectionFieldDetails
      gcConnexDataEdge: gcConnexDataEdgeFieldDetails
      AggregategcConnexData: AggregategcConnexDataFieldDetails
      gcMessageDataConnection: gcMessageDataConnectionFieldDetails
      gcMessageDataEdge: gcMessageDataEdgeFieldDetails
      AggregategcMessageData: AggregategcMessageDataFieldDetails
      gcPediaDataConnection: gcPediaDataConnectionFieldDetails
      gcPediaDataEdge: gcPediaDataEdgeFieldDetails
      AggregategcPediaData: AggregategcPediaDataFieldDetails
      gcWikiDataConnection: gcWikiDataConnectionFieldDetails
      gcWikiDataEdge: gcWikiDataEdgeFieldDetails
      AggregategcWikiData: AggregategcWikiDataFieldDetails
      Mutation: MutationFieldDetails
      BatchPayload: BatchPayloadFieldDetails
      Subscription: SubscriptionFieldDetails
      PeriodSubscriptionPayload: PeriodSubscriptionPayloadFieldDetails
      PeriodPreviousValues: PeriodPreviousValuesFieldDetails
      gaStatsSubscriptionPayload: gaStatsSubscriptionPayloadFieldDetails
      gaStatsPreviousValues: gaStatsPreviousValuesFieldDetails
      gcAccountDataSubscriptionPayload: gcAccountDataSubscriptionPayloadFieldDetails
      gcAccountDataPreviousValues: gcAccountDataPreviousValuesFieldDetails
      gcCollabDataSubscriptionPayload: gcCollabDataSubscriptionPayloadFieldDetails
      gcCollabDataPreviousValues: gcCollabDataPreviousValuesFieldDetails
      gcConnexDataSubscriptionPayload: gcConnexDataSubscriptionPayloadFieldDetails
      gcConnexDataPreviousValues: gcConnexDataPreviousValuesFieldDetails
      gcMessageDataSubscriptionPayload: gcMessageDataSubscriptionPayloadFieldDetails
      gcMessageDataPreviousValues: gcMessageDataPreviousValuesFieldDetails
      gcPediaDataSubscriptionPayload: gcPediaDataSubscriptionPayloadFieldDetails
      gcPediaDataPreviousValues: gcPediaDataPreviousValuesFieldDetails
      gcWikiDataSubscriptionPayload: gcWikiDataSubscriptionPayloadFieldDetails
      gcWikiDataPreviousValues: gcWikiDataPreviousValuesFieldDetails
    }
  }
  inputTypes: {
    fields: {
      PeriodWhereUniqueInput: PeriodWhereUniqueInputInputObject
      PeriodWhereInput: PeriodWhereInputInputObject
      gcAccountDataWhereInput: gcAccountDataWhereInputInputObject
      gcCollabDataWhereInput: gcCollabDataWhereInputInputObject
      gaStatsWhereInput: gaStatsWhereInputInputObject
      gcConnexDataWhereInput: gcConnexDataWhereInputInputObject
      gcMessageDataWhereInput: gcMessageDataWhereInputInputObject
      gcPediaDataWhereInput: gcPediaDataWhereInputInputObject
      gcWikiDataWhereInput: gcWikiDataWhereInputInputObject
      gaStatsWhereUniqueInput: gaStatsWhereUniqueInputInputObject
      gcAccountDataWhereUniqueInput: gcAccountDataWhereUniqueInputInputObject
      gcCollabDataWhereUniqueInput: gcCollabDataWhereUniqueInputInputObject
      gcConnexDataWhereUniqueInput: gcConnexDataWhereUniqueInputInputObject
      gcMessageDataWhereUniqueInput: gcMessageDataWhereUniqueInputInputObject
      gcPediaDataWhereUniqueInput: gcPediaDataWhereUniqueInputInputObject
      gcWikiDataWhereUniqueInput: gcWikiDataWhereUniqueInputInputObject
      PeriodCreateInput: PeriodCreateInputInputObject
      gcAccountDataCreateOneWithoutPeriodInput: gcAccountDataCreateOneWithoutPeriodInputInputObject
      gcAccountDataCreateWithoutPeriodInput: gcAccountDataCreateWithoutPeriodInputInputObject
      gcCollabDataCreateOneWithoutPeriodInput: gcCollabDataCreateOneWithoutPeriodInputInputObject
      gcCollabDataCreateWithoutPeriodInput: gcCollabDataCreateWithoutPeriodInputInputObject
      gaStatsCreateOneInput: gaStatsCreateOneInputInputObject
      gaStatsCreateInput: gaStatsCreateInputInputObject
      gcConnexDataCreateOneWithoutPeriodInput: gcConnexDataCreateOneWithoutPeriodInputInputObject
      gcConnexDataCreateWithoutPeriodInput: gcConnexDataCreateWithoutPeriodInputInputObject
      gcMessageDataCreateOneWithoutPeriodInput: gcMessageDataCreateOneWithoutPeriodInputInputObject
      gcMessageDataCreateWithoutPeriodInput: gcMessageDataCreateWithoutPeriodInputInputObject
      gcPediaDataCreateOneWithoutPeriodInput: gcPediaDataCreateOneWithoutPeriodInputInputObject
      gcPediaDataCreateWithoutPeriodInput: gcPediaDataCreateWithoutPeriodInputInputObject
      gcWikiDataCreateOneWithoutPeriodInput: gcWikiDataCreateOneWithoutPeriodInputInputObject
      gcWikiDataCreateWithoutPeriodInput: gcWikiDataCreateWithoutPeriodInputInputObject
      PeriodUpdateInput: PeriodUpdateInputInputObject
      gcAccountDataUpdateOneWithoutPeriodInput: gcAccountDataUpdateOneWithoutPeriodInputInputObject
      gcAccountDataUpdateWithoutPeriodDataInput: gcAccountDataUpdateWithoutPeriodDataInputInputObject
      gcAccountDataUpsertWithoutPeriodInput: gcAccountDataUpsertWithoutPeriodInputInputObject
      gcCollabDataUpdateOneRequiredWithoutPeriodInput: gcCollabDataUpdateOneRequiredWithoutPeriodInputInputObject
      gcCollabDataUpdateWithoutPeriodDataInput: gcCollabDataUpdateWithoutPeriodDataInputInputObject
      gaStatsUpdateOneInput: gaStatsUpdateOneInputInputObject
      gaStatsUpdateDataInput: gaStatsUpdateDataInputInputObject
      gaStatsUpsertNestedInput: gaStatsUpsertNestedInputInputObject
      gcCollabDataUpsertWithoutPeriodInput: gcCollabDataUpsertWithoutPeriodInputInputObject
      gcConnexDataUpdateOneRequiredWithoutPeriodInput: gcConnexDataUpdateOneRequiredWithoutPeriodInputInputObject
      gcConnexDataUpdateWithoutPeriodDataInput: gcConnexDataUpdateWithoutPeriodDataInputInputObject
      gcConnexDataUpsertWithoutPeriodInput: gcConnexDataUpsertWithoutPeriodInputInputObject
      gcMessageDataUpdateOneRequiredWithoutPeriodInput: gcMessageDataUpdateOneRequiredWithoutPeriodInputInputObject
      gcMessageDataUpdateWithoutPeriodDataInput: gcMessageDataUpdateWithoutPeriodDataInputInputObject
      gcMessageDataUpsertWithoutPeriodInput: gcMessageDataUpsertWithoutPeriodInputInputObject
      gcPediaDataUpdateOneRequiredWithoutPeriodInput: gcPediaDataUpdateOneRequiredWithoutPeriodInputInputObject
      gcPediaDataUpdateWithoutPeriodDataInput: gcPediaDataUpdateWithoutPeriodDataInputInputObject
      gcPediaDataUpsertWithoutPeriodInput: gcPediaDataUpsertWithoutPeriodInputInputObject
      gcWikiDataUpdateOneRequiredWithoutPeriodInput: gcWikiDataUpdateOneRequiredWithoutPeriodInputInputObject
      gcWikiDataUpdateWithoutPeriodDataInput: gcWikiDataUpdateWithoutPeriodDataInputInputObject
      gcWikiDataUpsertWithoutPeriodInput: gcWikiDataUpsertWithoutPeriodInputInputObject
      PeriodUpdateManyMutationInput: PeriodUpdateManyMutationInputInputObject
      gaStatsUpdateInput: gaStatsUpdateInputInputObject
      gaStatsUpdateManyMutationInput: gaStatsUpdateManyMutationInputInputObject
      gcAccountDataCreateInput: gcAccountDataCreateInputInputObject
      PeriodCreateOneWithoutGcAccountInput: PeriodCreateOneWithoutGcAccountInputInputObject
      PeriodCreateWithoutGcAccountInput: PeriodCreateWithoutGcAccountInputInputObject
      gcAccountDataUpdateInput: gcAccountDataUpdateInputInputObject
      PeriodUpdateOneRequiredWithoutGcAccountInput: PeriodUpdateOneRequiredWithoutGcAccountInputInputObject
      PeriodUpdateWithoutGcAccountDataInput: PeriodUpdateWithoutGcAccountDataInputInputObject
      PeriodUpsertWithoutGcAccountInput: PeriodUpsertWithoutGcAccountInputInputObject
      gcAccountDataUpdateManyMutationInput: gcAccountDataUpdateManyMutationInputInputObject
      gcCollabDataCreateInput: gcCollabDataCreateInputInputObject
      PeriodCreateOneWithoutGcCollabInput: PeriodCreateOneWithoutGcCollabInputInputObject
      PeriodCreateWithoutGcCollabInput: PeriodCreateWithoutGcCollabInputInputObject
      gcCollabDataUpdateInput: gcCollabDataUpdateInputInputObject
      PeriodUpdateOneRequiredWithoutGcCollabInput: PeriodUpdateOneRequiredWithoutGcCollabInputInputObject
      PeriodUpdateWithoutGcCollabDataInput: PeriodUpdateWithoutGcCollabDataInputInputObject
      PeriodUpsertWithoutGcCollabInput: PeriodUpsertWithoutGcCollabInputInputObject
      gcCollabDataUpdateManyMutationInput: gcCollabDataUpdateManyMutationInputInputObject
      gcConnexDataCreateInput: gcConnexDataCreateInputInputObject
      PeriodCreateOneWithoutGcConnexInput: PeriodCreateOneWithoutGcConnexInputInputObject
      PeriodCreateWithoutGcConnexInput: PeriodCreateWithoutGcConnexInputInputObject
      gcConnexDataUpdateInput: gcConnexDataUpdateInputInputObject
      PeriodUpdateOneRequiredWithoutGcConnexInput: PeriodUpdateOneRequiredWithoutGcConnexInputInputObject
      PeriodUpdateWithoutGcConnexDataInput: PeriodUpdateWithoutGcConnexDataInputInputObject
      PeriodUpsertWithoutGcConnexInput: PeriodUpsertWithoutGcConnexInputInputObject
      gcConnexDataUpdateManyMutationInput: gcConnexDataUpdateManyMutationInputInputObject
      gcMessageDataCreateInput: gcMessageDataCreateInputInputObject
      PeriodCreateOneWithoutGcMessageInput: PeriodCreateOneWithoutGcMessageInputInputObject
      PeriodCreateWithoutGcMessageInput: PeriodCreateWithoutGcMessageInputInputObject
      gcMessageDataUpdateInput: gcMessageDataUpdateInputInputObject
      PeriodUpdateOneRequiredWithoutGcMessageInput: PeriodUpdateOneRequiredWithoutGcMessageInputInputObject
      PeriodUpdateWithoutGcMessageDataInput: PeriodUpdateWithoutGcMessageDataInputInputObject
      PeriodUpsertWithoutGcMessageInput: PeriodUpsertWithoutGcMessageInputInputObject
      gcMessageDataUpdateManyMutationInput: gcMessageDataUpdateManyMutationInputInputObject
      gcPediaDataCreateInput: gcPediaDataCreateInputInputObject
      PeriodCreateOneWithoutGcPediaInput: PeriodCreateOneWithoutGcPediaInputInputObject
      PeriodCreateWithoutGcPediaInput: PeriodCreateWithoutGcPediaInputInputObject
      gcPediaDataUpdateInput: gcPediaDataUpdateInputInputObject
      PeriodUpdateOneRequiredWithoutGcPediaInput: PeriodUpdateOneRequiredWithoutGcPediaInputInputObject
      PeriodUpdateWithoutGcPediaDataInput: PeriodUpdateWithoutGcPediaDataInputInputObject
      PeriodUpsertWithoutGcPediaInput: PeriodUpsertWithoutGcPediaInputInputObject
      gcPediaDataUpdateManyMutationInput: gcPediaDataUpdateManyMutationInputInputObject
      gcWikiDataCreateInput: gcWikiDataCreateInputInputObject
      PeriodCreateOneWithoutGcWikiInput: PeriodCreateOneWithoutGcWikiInputInputObject
      PeriodCreateWithoutGcWikiInput: PeriodCreateWithoutGcWikiInputInputObject
      gcWikiDataUpdateInput: gcWikiDataUpdateInputInputObject
      PeriodUpdateOneRequiredWithoutGcWikiInput: PeriodUpdateOneRequiredWithoutGcWikiInputInputObject
      PeriodUpdateWithoutGcWikiDataInput: PeriodUpdateWithoutGcWikiDataInputInputObject
      PeriodUpsertWithoutGcWikiInput: PeriodUpsertWithoutGcWikiInputInputObject
      gcWikiDataUpdateManyMutationInput: gcWikiDataUpdateManyMutationInputInputObject
      PeriodSubscriptionWhereInput: PeriodSubscriptionWhereInputInputObject
      gaStatsSubscriptionWhereInput: gaStatsSubscriptionWhereInputInputObject
      gcAccountDataSubscriptionWhereInput: gcAccountDataSubscriptionWhereInputInputObject
      gcCollabDataSubscriptionWhereInput: gcCollabDataSubscriptionWhereInputInputObject
      gcConnexDataSubscriptionWhereInput: gcConnexDataSubscriptionWhereInputInputObject
      gcMessageDataSubscriptionWhereInput: gcMessageDataSubscriptionWhereInputInputObject
      gcPediaDataSubscriptionWhereInput: gcPediaDataSubscriptionWhereInputInputObject
      gcWikiDataSubscriptionWhereInput: gcWikiDataSubscriptionWhereInputInputObject
    }
  }
  enumTypes: {
    PeriodOrderByInput: PeriodOrderByInputValues,
    gaStatsOrderByInput: gaStatsOrderByInputValues,
    gcAccountDataOrderByInput: gcAccountDataOrderByInputValues,
    gcCollabDataOrderByInput: gcCollabDataOrderByInputValues,
    gcConnexDataOrderByInput: gcConnexDataOrderByInputValues,
    gcMessageDataOrderByInput: gcMessageDataOrderByInputValues,
    gcPediaDataOrderByInput: gcPediaDataOrderByInputValues,
    gcWikiDataOrderByInput: gcWikiDataOrderByInputValues,
    MutationType: MutationTypeValues,
  }
}

// Types for Query

type QueryObject =
  | QueryFields
  | { name: 'period', args?: QueryPeriodArgs[] | false, alias?: string  } 
  | { name: 'periods', args?: QueryPeriodsArgs[] | false, alias?: string  } 
  | { name: 'periodsConnection', args?: QueryPeriodsConnectionArgs[] | false, alias?: string  } 
  | { name: 'gaStats', args?: QueryGaStatsArgs[] | false, alias?: string  } 
  | { name: 'gaStatses', args?: QueryGaStatsesArgs[] | false, alias?: string  } 
  | { name: 'gaStatsesConnection', args?: QueryGaStatsesConnectionArgs[] | false, alias?: string  } 
  | { name: 'gcAccountData', args?: QueryGcAccountDataArgs[] | false, alias?: string  } 
  | { name: 'gcAccountDatas', args?: QueryGcAccountDatasArgs[] | false, alias?: string  } 
  | { name: 'gcAccountDatasConnection', args?: QueryGcAccountDatasConnectionArgs[] | false, alias?: string  } 
  | { name: 'gcCollabData', args?: QueryGcCollabDataArgs[] | false, alias?: string  } 
  | { name: 'gcCollabDatas', args?: QueryGcCollabDatasArgs[] | false, alias?: string  } 
  | { name: 'gcCollabDatasConnection', args?: QueryGcCollabDatasConnectionArgs[] | false, alias?: string  } 
  | { name: 'gcConnexData', args?: QueryGcConnexDataArgs[] | false, alias?: string  } 
  | { name: 'gcConnexDatas', args?: QueryGcConnexDatasArgs[] | false, alias?: string  } 
  | { name: 'gcConnexDatasConnection', args?: QueryGcConnexDatasConnectionArgs[] | false, alias?: string  } 
  | { name: 'gcMessageData', args?: QueryGcMessageDataArgs[] | false, alias?: string  } 
  | { name: 'gcMessageDatas', args?: QueryGcMessageDatasArgs[] | false, alias?: string  } 
  | { name: 'gcMessageDatasConnection', args?: QueryGcMessageDatasConnectionArgs[] | false, alias?: string  } 
  | { name: 'gcPediaData', args?: QueryGcPediaDataArgs[] | false, alias?: string  } 
  | { name: 'gcPediaDatas', args?: QueryGcPediaDatasArgs[] | false, alias?: string  } 
  | { name: 'gcPediaDatasConnection', args?: QueryGcPediaDatasConnectionArgs[] | false, alias?: string  } 
  | { name: 'gcWikiData', args?: QueryGcWikiDataArgs[] | false, alias?: string  } 
  | { name: 'gcWikiDatas', args?: QueryGcWikiDatasArgs[] | false, alias?: string  } 
  | { name: 'gcWikiDatasConnection', args?: QueryGcWikiDatasConnectionArgs[] | false, alias?: string  } 

type QueryFields =
  | 'period'
  | 'periods'
  | 'periodsConnection'
  | 'gaStats'
  | 'gaStatses'
  | 'gaStatsesConnection'
  | 'gcAccountData'
  | 'gcAccountDatas'
  | 'gcAccountDatasConnection'
  | 'gcCollabData'
  | 'gcCollabDatas'
  | 'gcCollabDatasConnection'
  | 'gcConnexData'
  | 'gcConnexDatas'
  | 'gcConnexDatasConnection'
  | 'gcMessageData'
  | 'gcMessageDatas'
  | 'gcMessageDatasConnection'
  | 'gcPediaData'
  | 'gcPediaDatas'
  | 'gcPediaDatasConnection'
  | 'gcWikiData'
  | 'gcWikiDatas'
  | 'gcWikiDatasConnection'


type QueryPeriodArgs =
  | 'where'
type QueryPeriodsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPeriodsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryGaStatsArgs =
  | 'where'
type QueryGaStatsesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryGaStatsesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryGcAccountDataArgs =
  | 'where'
type QueryGcAccountDatasArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryGcAccountDatasConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryGcCollabDataArgs =
  | 'where'
type QueryGcCollabDatasArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryGcCollabDatasConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryGcConnexDataArgs =
  | 'where'
type QueryGcConnexDatasArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryGcConnexDatasConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryGcMessageDataArgs =
  | 'where'
type QueryGcMessageDatasArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryGcMessageDatasConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryGcPediaDataArgs =
  | 'where'
type QueryGcPediaDatasArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryGcPediaDatasConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryGcWikiDataArgs =
  | 'where'
type QueryGcWikiDatasArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryGcWikiDatasConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface QueryFieldDetails {
  period: {
    type: 'Period'
    args: Record<QueryPeriodArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: PeriodWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Period | null> | prisma.Period | null
  }
  periods: {
    type: 'Period'
    args: Record<QueryPeriodsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PeriodWhereInput | null, orderBy?: prisma.PeriodOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Period[]> | prisma.Period[]
  }
  periodsConnection: {
    type: 'PeriodConnection'
    args: Record<QueryPeriodsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PeriodWhereInput | null, orderBy?: prisma.PeriodOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PeriodConnection> | prisma.PeriodConnection
  }
  gaStats: {
    type: 'gaStats'
    args: Record<QueryGaStatsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: gaStatsWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gaStats | null> | prisma.gaStats | null
  }
  gaStatses: {
    type: 'gaStats'
    args: Record<QueryGaStatsesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: gaStatsWhereInput | null, orderBy?: prisma.gaStatsOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gaStats[]> | prisma.gaStats[]
  }
  gaStatsesConnection: {
    type: 'gaStatsConnection'
    args: Record<QueryGaStatsesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: gaStatsWhereInput | null, orderBy?: prisma.gaStatsOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gaStatsConnection> | prisma.gaStatsConnection
  }
  gcAccountData: {
    type: 'gcAccountData'
    args: Record<QueryGcAccountDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: gcAccountDataWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcAccountData | null> | prisma.gcAccountData | null
  }
  gcAccountDatas: {
    type: 'gcAccountData'
    args: Record<QueryGcAccountDatasArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: gcAccountDataWhereInput | null, orderBy?: prisma.gcAccountDataOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcAccountData[]> | prisma.gcAccountData[]
  }
  gcAccountDatasConnection: {
    type: 'gcAccountDataConnection'
    args: Record<QueryGcAccountDatasConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: gcAccountDataWhereInput | null, orderBy?: prisma.gcAccountDataOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcAccountDataConnection> | prisma.gcAccountDataConnection
  }
  gcCollabData: {
    type: 'gcCollabData'
    args: Record<QueryGcCollabDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: gcCollabDataWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcCollabData | null> | prisma.gcCollabData | null
  }
  gcCollabDatas: {
    type: 'gcCollabData'
    args: Record<QueryGcCollabDatasArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: gcCollabDataWhereInput | null, orderBy?: prisma.gcCollabDataOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcCollabData[]> | prisma.gcCollabData[]
  }
  gcCollabDatasConnection: {
    type: 'gcCollabDataConnection'
    args: Record<QueryGcCollabDatasConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: gcCollabDataWhereInput | null, orderBy?: prisma.gcCollabDataOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcCollabDataConnection> | prisma.gcCollabDataConnection
  }
  gcConnexData: {
    type: 'gcConnexData'
    args: Record<QueryGcConnexDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: gcConnexDataWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcConnexData | null> | prisma.gcConnexData | null
  }
  gcConnexDatas: {
    type: 'gcConnexData'
    args: Record<QueryGcConnexDatasArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: gcConnexDataWhereInput | null, orderBy?: prisma.gcConnexDataOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcConnexData[]> | prisma.gcConnexData[]
  }
  gcConnexDatasConnection: {
    type: 'gcConnexDataConnection'
    args: Record<QueryGcConnexDatasConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: gcConnexDataWhereInput | null, orderBy?: prisma.gcConnexDataOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcConnexDataConnection> | prisma.gcConnexDataConnection
  }
  gcMessageData: {
    type: 'gcMessageData'
    args: Record<QueryGcMessageDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: gcMessageDataWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcMessageData | null> | prisma.gcMessageData | null
  }
  gcMessageDatas: {
    type: 'gcMessageData'
    args: Record<QueryGcMessageDatasArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: gcMessageDataWhereInput | null, orderBy?: prisma.gcMessageDataOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcMessageData[]> | prisma.gcMessageData[]
  }
  gcMessageDatasConnection: {
    type: 'gcMessageDataConnection'
    args: Record<QueryGcMessageDatasConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: gcMessageDataWhereInput | null, orderBy?: prisma.gcMessageDataOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcMessageDataConnection> | prisma.gcMessageDataConnection
  }
  gcPediaData: {
    type: 'gcPediaData'
    args: Record<QueryGcPediaDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: gcPediaDataWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcPediaData | null> | prisma.gcPediaData | null
  }
  gcPediaDatas: {
    type: 'gcPediaData'
    args: Record<QueryGcPediaDatasArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: gcPediaDataWhereInput | null, orderBy?: prisma.gcPediaDataOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcPediaData[]> | prisma.gcPediaData[]
  }
  gcPediaDatasConnection: {
    type: 'gcPediaDataConnection'
    args: Record<QueryGcPediaDatasConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: gcPediaDataWhereInput | null, orderBy?: prisma.gcPediaDataOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcPediaDataConnection> | prisma.gcPediaDataConnection
  }
  gcWikiData: {
    type: 'gcWikiData'
    args: Record<QueryGcWikiDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: gcWikiDataWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcWikiData | null> | prisma.gcWikiData | null
  }
  gcWikiDatas: {
    type: 'gcWikiData'
    args: Record<QueryGcWikiDatasArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: gcWikiDataWhereInput | null, orderBy?: prisma.gcWikiDataOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcWikiData[]> | prisma.gcWikiData[]
  }
  gcWikiDatasConnection: {
    type: 'gcWikiDataConnection'
    args: Record<QueryGcWikiDatasConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: gcWikiDataWhereInput | null, orderBy?: prisma.gcWikiDataOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcWikiDataConnection> | prisma.gcWikiDataConnection
  }
}
  

// Types for Period

type PeriodObject =
  | PeriodFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'month', args?: [] | false, alias?: string  } 
  | { name: 'year', args?: [] | false, alias?: string  } 
  | { name: 'gcAccount', args?: [] | false, alias?: string  } 
  | { name: 'gcCollab', args?: [] | false, alias?: string  } 
  | { name: 'gcConnex', args?: [] | false, alias?: string  } 
  | { name: 'gcMessage', args?: [] | false, alias?: string  } 
  | { name: 'gcPedia', args?: [] | false, alias?: string  } 
  | { name: 'gcWiki', args?: [] | false, alias?: string  } 

type PeriodFields =
  | 'id'
  | 'month'
  | 'year'
  | 'gcAccount'
  | 'gcCollab'
  | 'gcConnex'
  | 'gcMessage'
  | 'gcPedia'
  | 'gcWiki'



  

export interface PeriodFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  month: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  year: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  gcAccount: {
    type: 'gcAccountData'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Period">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcAccountData | null> | prisma.gcAccountData | null
  }
  gcCollab: {
    type: 'gcCollabData'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Period">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcCollabData> | prisma.gcCollabData
  }
  gcConnex: {
    type: 'gcConnexData'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Period">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcConnexData> | prisma.gcConnexData
  }
  gcMessage: {
    type: 'gcMessageData'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Period">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcMessageData> | prisma.gcMessageData
  }
  gcPedia: {
    type: 'gcPediaData'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Period">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcPediaData> | prisma.gcPediaData
  }
  gcWiki: {
    type: 'gcWikiData'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Period">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcWikiData> | prisma.gcWikiData
  }
}
  

// Types for gcAccountData

type gcAccountDataObject =
  | gcAccountDataFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'period', args?: [] | false, alias?: string  } 
  | { name: 'totalNumAccounts', args?: [] | false, alias?: string  } 
  | { name: 'numNewAccounts', args?: [] | false, alias?: string  } 

type gcAccountDataFields =
  | 'id'
  | 'period'
  | 'totalNumAccounts'
  | 'numNewAccounts'



  

export interface gcAccountDataFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  period: {
    type: 'Period'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcAccountData">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Period> | prisma.Period
  }
  totalNumAccounts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewAccounts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for gcCollabData

type gcCollabDataObject =
  | gcCollabDataFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'period', args?: [] | false, alias?: string  } 
  | { name: 'totalNumAccounts', args?: [] | false, alias?: string  } 
  | { name: 'numNewAccounts', args?: [] | false, alias?: string  } 
  | { name: 'gaStats', args?: [] | false, alias?: string  } 
  | { name: 'totalNumGroups', args?: [] | false, alias?: string  } 
  | { name: 'numNewGroups', args?: [] | false, alias?: string  } 

type gcCollabDataFields =
  | 'id'
  | 'period'
  | 'totalNumAccounts'
  | 'numNewAccounts'
  | 'gaStats'
  | 'totalNumGroups'
  | 'numNewGroups'



  

export interface gcCollabDataFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  period: {
    type: 'Period'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcCollabData">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Period> | prisma.Period
  }
  totalNumAccounts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewAccounts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  gaStats: {
    type: 'gaStats'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"gcCollabData">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gaStats | null> | prisma.gaStats | null
  }
  totalNumGroups: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewGroups: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for gaStats

type gaStatsObject =
  | gaStatsFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'numSessions', args?: [] | false, alias?: string  } 
  | { name: 'avgPageviewsPerSession', args?: [] | false, alias?: string  } 
  | { name: 'avgSessionDuration', args?: [] | false, alias?: string  } 
  | { name: 'avgPageLoadTime', args?: [] | false, alias?: string  } 
  | { name: 'bounceRate', args?: [] | false, alias?: string  } 

type gaStatsFields =
  | 'id'
  | 'numSessions'
  | 'avgPageviewsPerSession'
  | 'avgSessionDuration'
  | 'avgPageLoadTime'
  | 'bounceRate'



  

export interface gaStatsFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  numSessions: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  avgPageviewsPerSession: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  avgSessionDuration: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  avgPageLoadTime: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  bounceRate: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for gcConnexData

type gcConnexDataObject =
  | gcConnexDataFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'period', args?: [] | false, alias?: string  } 
  | { name: 'totalNumAccounts', args?: [] | false, alias?: string  } 
  | { name: 'numNewAccounts', args?: [] | false, alias?: string  } 
  | { name: 'gaStats', args?: [] | false, alias?: string  } 
  | { name: 'totalNumGroups', args?: [] | false, alias?: string  } 
  | { name: 'numNewGroups', args?: [] | false, alias?: string  } 

type gcConnexDataFields =
  | 'id'
  | 'period'
  | 'totalNumAccounts'
  | 'numNewAccounts'
  | 'gaStats'
  | 'totalNumGroups'
  | 'numNewGroups'



  

export interface gcConnexDataFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  period: {
    type: 'Period'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcConnexData">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Period> | prisma.Period
  }
  totalNumAccounts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewAccounts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  gaStats: {
    type: 'gaStats'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"gcConnexData">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gaStats | null> | prisma.gaStats | null
  }
  totalNumGroups: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewGroups: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for gcMessageData

type gcMessageDataObject =
  | gcMessageDataFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'period', args?: [] | false, alias?: string  } 
  | { name: 'totalNumAccounts', args?: [] | false, alias?: string  } 
  | { name: 'numNewAccounts', args?: [] | false, alias?: string  } 
  | { name: 'totalNumChannelMessages', args?: [] | false, alias?: string  } 
  | { name: 'numNewChannelMessages', args?: [] | false, alias?: string  } 
  | { name: 'totalNumPrivateGroupMessages', args?: [] | false, alias?: string  } 
  | { name: 'numNewPrivateGroupMessages', args?: [] | false, alias?: string  } 
  | { name: 'totalNumDirectMessages', args?: [] | false, alias?: string  } 
  | { name: 'numNewDirectMessages', args?: [] | false, alias?: string  } 
  | { name: 'totalNumFileUploads', args?: [] | false, alias?: string  } 
  | { name: 'numNewFileUploads', args?: [] | false, alias?: string  } 

type gcMessageDataFields =
  | 'id'
  | 'period'
  | 'totalNumAccounts'
  | 'numNewAccounts'
  | 'totalNumChannelMessages'
  | 'numNewChannelMessages'
  | 'totalNumPrivateGroupMessages'
  | 'numNewPrivateGroupMessages'
  | 'totalNumDirectMessages'
  | 'numNewDirectMessages'
  | 'totalNumFileUploads'
  | 'numNewFileUploads'



  

export interface gcMessageDataFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  period: {
    type: 'Period'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcMessageData">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Period> | prisma.Period
  }
  totalNumAccounts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewAccounts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  totalNumChannelMessages: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewChannelMessages: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  totalNumPrivateGroupMessages: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewPrivateGroupMessages: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  totalNumDirectMessages: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewDirectMessages: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  totalNumFileUploads: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewFileUploads: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for gcPediaData

type gcPediaDataObject =
  | gcPediaDataFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'period', args?: [] | false, alias?: string  } 
  | { name: 'totalNumAccounts', args?: [] | false, alias?: string  } 
  | { name: 'numNewAccounts', args?: [] | false, alias?: string  } 
  | { name: 'totalNumArticles', args?: [] | false, alias?: string  } 
  | { name: 'numNewArticles', args?: [] | false, alias?: string  } 
  | { name: 'totalNumEdits', args?: [] | false, alias?: string  } 
  | { name: 'numNewEdits', args?: [] | false, alias?: string  } 

type gcPediaDataFields =
  | 'id'
  | 'period'
  | 'totalNumAccounts'
  | 'numNewAccounts'
  | 'totalNumArticles'
  | 'numNewArticles'
  | 'totalNumEdits'
  | 'numNewEdits'



  

export interface gcPediaDataFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  period: {
    type: 'Period'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcPediaData">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Period> | prisma.Period
  }
  totalNumAccounts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewAccounts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  totalNumArticles: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewArticles: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  totalNumEdits: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewEdits: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for gcWikiData

type gcWikiDataObject =
  | gcWikiDataFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'period', args?: [] | false, alias?: string  } 
  | { name: 'totalNumAccounts', args?: [] | false, alias?: string  } 
  | { name: 'numNewAccounts', args?: [] | false, alias?: string  } 
  | { name: 'gaStats', args?: [] | false, alias?: string  } 
  | { name: 'totalNumArticles', args?: [] | false, alias?: string  } 
  | { name: 'numNewArticles', args?: [] | false, alias?: string  } 
  | { name: 'totalNumEdits', args?: [] | false, alias?: string  } 
  | { name: 'numNewEdits', args?: [] | false, alias?: string  } 

type gcWikiDataFields =
  | 'id'
  | 'period'
  | 'totalNumAccounts'
  | 'numNewAccounts'
  | 'gaStats'
  | 'totalNumArticles'
  | 'numNewArticles'
  | 'totalNumEdits'
  | 'numNewEdits'



  

export interface gcWikiDataFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  period: {
    type: 'Period'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcWikiData">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Period> | prisma.Period
  }
  totalNumAccounts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewAccounts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  gaStats: {
    type: 'gaStats'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"gcWikiData">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gaStats | null> | prisma.gaStats | null
  }
  totalNumArticles: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewArticles: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  totalNumEdits: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewEdits: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for PeriodConnection

type PeriodConnectionObject =
  | PeriodConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type PeriodConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface PeriodConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PeriodConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'PeriodEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"PeriodConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PeriodEdge[]> | prisma.PeriodEdge[]
  }
  aggregate: {
    type: 'AggregatePeriod'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PeriodConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregatePeriod> | prisma.AggregatePeriod
  }
}
  

// Types for PageInfo

type PageInfoObject =
  | PageInfoFields
  | { name: 'hasNextPage', args?: [] | false, alias?: string  } 
  | { name: 'hasPreviousPage', args?: [] | false, alias?: string  } 
  | { name: 'startCursor', args?: [] | false, alias?: string  } 
  | { name: 'endCursor', args?: [] | false, alias?: string  } 

type PageInfoFields =
  | 'hasNextPage'
  | 'hasPreviousPage'
  | 'startCursor'
  | 'endCursor'



  

export interface PageInfoFieldDetails {
  hasNextPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hasPreviousPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  endCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for PeriodEdge

type PeriodEdgeObject =
  | PeriodEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type PeriodEdgeFields =
  | 'node'
  | 'cursor'



  

export interface PeriodEdgeFieldDetails {
  node: {
    type: 'Period'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PeriodEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Period> | prisma.Period
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregatePeriod

type AggregatePeriodObject =
  | AggregatePeriodFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregatePeriodFields =
  | 'count'



  

export interface AggregatePeriodFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for gaStatsConnection

type gaStatsConnectionObject =
  | gaStatsConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type gaStatsConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface gaStatsConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gaStatsConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'gaStatsEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"gaStatsConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gaStatsEdge[]> | prisma.gaStatsEdge[]
  }
  aggregate: {
    type: 'AggregategaStats'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gaStatsConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregategaStats> | prisma.AggregategaStats
  }
}
  

// Types for gaStatsEdge

type gaStatsEdgeObject =
  | gaStatsEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type gaStatsEdgeFields =
  | 'node'
  | 'cursor'



  

export interface gaStatsEdgeFieldDetails {
  node: {
    type: 'gaStats'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gaStatsEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gaStats> | prisma.gaStats
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregategaStats

type AggregategaStatsObject =
  | AggregategaStatsFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregategaStatsFields =
  | 'count'



  

export interface AggregategaStatsFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for gcAccountDataConnection

type gcAccountDataConnectionObject =
  | gcAccountDataConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type gcAccountDataConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface gcAccountDataConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcAccountDataConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'gcAccountDataEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"gcAccountDataConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcAccountDataEdge[]> | prisma.gcAccountDataEdge[]
  }
  aggregate: {
    type: 'AggregategcAccountData'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcAccountDataConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregategcAccountData> | prisma.AggregategcAccountData
  }
}
  

// Types for gcAccountDataEdge

type gcAccountDataEdgeObject =
  | gcAccountDataEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type gcAccountDataEdgeFields =
  | 'node'
  | 'cursor'



  

export interface gcAccountDataEdgeFieldDetails {
  node: {
    type: 'gcAccountData'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcAccountDataEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcAccountData> | prisma.gcAccountData
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregategcAccountData

type AggregategcAccountDataObject =
  | AggregategcAccountDataFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregategcAccountDataFields =
  | 'count'



  

export interface AggregategcAccountDataFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for gcCollabDataConnection

type gcCollabDataConnectionObject =
  | gcCollabDataConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type gcCollabDataConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface gcCollabDataConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcCollabDataConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'gcCollabDataEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"gcCollabDataConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcCollabDataEdge[]> | prisma.gcCollabDataEdge[]
  }
  aggregate: {
    type: 'AggregategcCollabData'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcCollabDataConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregategcCollabData> | prisma.AggregategcCollabData
  }
}
  

// Types for gcCollabDataEdge

type gcCollabDataEdgeObject =
  | gcCollabDataEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type gcCollabDataEdgeFields =
  | 'node'
  | 'cursor'



  

export interface gcCollabDataEdgeFieldDetails {
  node: {
    type: 'gcCollabData'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcCollabDataEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcCollabData> | prisma.gcCollabData
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregategcCollabData

type AggregategcCollabDataObject =
  | AggregategcCollabDataFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregategcCollabDataFields =
  | 'count'



  

export interface AggregategcCollabDataFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for gcConnexDataConnection

type gcConnexDataConnectionObject =
  | gcConnexDataConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type gcConnexDataConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface gcConnexDataConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcConnexDataConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'gcConnexDataEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"gcConnexDataConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcConnexDataEdge[]> | prisma.gcConnexDataEdge[]
  }
  aggregate: {
    type: 'AggregategcConnexData'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcConnexDataConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregategcConnexData> | prisma.AggregategcConnexData
  }
}
  

// Types for gcConnexDataEdge

type gcConnexDataEdgeObject =
  | gcConnexDataEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type gcConnexDataEdgeFields =
  | 'node'
  | 'cursor'



  

export interface gcConnexDataEdgeFieldDetails {
  node: {
    type: 'gcConnexData'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcConnexDataEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcConnexData> | prisma.gcConnexData
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregategcConnexData

type AggregategcConnexDataObject =
  | AggregategcConnexDataFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregategcConnexDataFields =
  | 'count'



  

export interface AggregategcConnexDataFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for gcMessageDataConnection

type gcMessageDataConnectionObject =
  | gcMessageDataConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type gcMessageDataConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface gcMessageDataConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcMessageDataConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'gcMessageDataEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"gcMessageDataConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcMessageDataEdge[]> | prisma.gcMessageDataEdge[]
  }
  aggregate: {
    type: 'AggregategcMessageData'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcMessageDataConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregategcMessageData> | prisma.AggregategcMessageData
  }
}
  

// Types for gcMessageDataEdge

type gcMessageDataEdgeObject =
  | gcMessageDataEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type gcMessageDataEdgeFields =
  | 'node'
  | 'cursor'



  

export interface gcMessageDataEdgeFieldDetails {
  node: {
    type: 'gcMessageData'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcMessageDataEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcMessageData> | prisma.gcMessageData
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregategcMessageData

type AggregategcMessageDataObject =
  | AggregategcMessageDataFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregategcMessageDataFields =
  | 'count'



  

export interface AggregategcMessageDataFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for gcPediaDataConnection

type gcPediaDataConnectionObject =
  | gcPediaDataConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type gcPediaDataConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface gcPediaDataConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcPediaDataConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'gcPediaDataEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"gcPediaDataConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcPediaDataEdge[]> | prisma.gcPediaDataEdge[]
  }
  aggregate: {
    type: 'AggregategcPediaData'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcPediaDataConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregategcPediaData> | prisma.AggregategcPediaData
  }
}
  

// Types for gcPediaDataEdge

type gcPediaDataEdgeObject =
  | gcPediaDataEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type gcPediaDataEdgeFields =
  | 'node'
  | 'cursor'



  

export interface gcPediaDataEdgeFieldDetails {
  node: {
    type: 'gcPediaData'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcPediaDataEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcPediaData> | prisma.gcPediaData
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregategcPediaData

type AggregategcPediaDataObject =
  | AggregategcPediaDataFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregategcPediaDataFields =
  | 'count'



  

export interface AggregategcPediaDataFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for gcWikiDataConnection

type gcWikiDataConnectionObject =
  | gcWikiDataConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type gcWikiDataConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface gcWikiDataConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcWikiDataConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'gcWikiDataEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"gcWikiDataConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcWikiDataEdge[]> | prisma.gcWikiDataEdge[]
  }
  aggregate: {
    type: 'AggregategcWikiData'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcWikiDataConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregategcWikiData> | prisma.AggregategcWikiData
  }
}
  

// Types for gcWikiDataEdge

type gcWikiDataEdgeObject =
  | gcWikiDataEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type gcWikiDataEdgeFields =
  | 'node'
  | 'cursor'



  

export interface gcWikiDataEdgeFieldDetails {
  node: {
    type: 'gcWikiData'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcWikiDataEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcWikiData> | prisma.gcWikiData
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregategcWikiData

type AggregategcWikiDataObject =
  | AggregategcWikiDataFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregategcWikiDataFields =
  | 'count'



  

export interface AggregategcWikiDataFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Mutation

type MutationObject =
  | MutationFields
  | { name: 'createPeriod', args?: MutationCreatePeriodArgs[] | false, alias?: string  } 
  | { name: 'updatePeriod', args?: MutationUpdatePeriodArgs[] | false, alias?: string  } 
  | { name: 'updateManyPeriods', args?: MutationUpdateManyPeriodsArgs[] | false, alias?: string  } 
  | { name: 'upsertPeriod', args?: MutationUpsertPeriodArgs[] | false, alias?: string  } 
  | { name: 'deletePeriod', args?: MutationDeletePeriodArgs[] | false, alias?: string  } 
  | { name: 'deleteManyPeriods', args?: MutationDeleteManyPeriodsArgs[] | false, alias?: string  } 
  | { name: 'creategaStats', args?: MutationCreategaStatsArgs[] | false, alias?: string  } 
  | { name: 'updategaStats', args?: MutationUpdategaStatsArgs[] | false, alias?: string  } 
  | { name: 'updateManygaStatses', args?: MutationUpdateManygaStatsesArgs[] | false, alias?: string  } 
  | { name: 'upsertgaStats', args?: MutationUpsertgaStatsArgs[] | false, alias?: string  } 
  | { name: 'deletegaStats', args?: MutationDeletegaStatsArgs[] | false, alias?: string  } 
  | { name: 'deleteManygaStatses', args?: MutationDeleteManygaStatsesArgs[] | false, alias?: string  } 
  | { name: 'creategcAccountData', args?: MutationCreategcAccountDataArgs[] | false, alias?: string  } 
  | { name: 'updategcAccountData', args?: MutationUpdategcAccountDataArgs[] | false, alias?: string  } 
  | { name: 'updateManygcAccountDatas', args?: MutationUpdateManygcAccountDatasArgs[] | false, alias?: string  } 
  | { name: 'upsertgcAccountData', args?: MutationUpsertgcAccountDataArgs[] | false, alias?: string  } 
  | { name: 'deletegcAccountData', args?: MutationDeletegcAccountDataArgs[] | false, alias?: string  } 
  | { name: 'deleteManygcAccountDatas', args?: MutationDeleteManygcAccountDatasArgs[] | false, alias?: string  } 
  | { name: 'creategcCollabData', args?: MutationCreategcCollabDataArgs[] | false, alias?: string  } 
  | { name: 'updategcCollabData', args?: MutationUpdategcCollabDataArgs[] | false, alias?: string  } 
  | { name: 'updateManygcCollabDatas', args?: MutationUpdateManygcCollabDatasArgs[] | false, alias?: string  } 
  | { name: 'upsertgcCollabData', args?: MutationUpsertgcCollabDataArgs[] | false, alias?: string  } 
  | { name: 'deletegcCollabData', args?: MutationDeletegcCollabDataArgs[] | false, alias?: string  } 
  | { name: 'deleteManygcCollabDatas', args?: MutationDeleteManygcCollabDatasArgs[] | false, alias?: string  } 
  | { name: 'creategcConnexData', args?: MutationCreategcConnexDataArgs[] | false, alias?: string  } 
  | { name: 'updategcConnexData', args?: MutationUpdategcConnexDataArgs[] | false, alias?: string  } 
  | { name: 'updateManygcConnexDatas', args?: MutationUpdateManygcConnexDatasArgs[] | false, alias?: string  } 
  | { name: 'upsertgcConnexData', args?: MutationUpsertgcConnexDataArgs[] | false, alias?: string  } 
  | { name: 'deletegcConnexData', args?: MutationDeletegcConnexDataArgs[] | false, alias?: string  } 
  | { name: 'deleteManygcConnexDatas', args?: MutationDeleteManygcConnexDatasArgs[] | false, alias?: string  } 
  | { name: 'creategcMessageData', args?: MutationCreategcMessageDataArgs[] | false, alias?: string  } 
  | { name: 'updategcMessageData', args?: MutationUpdategcMessageDataArgs[] | false, alias?: string  } 
  | { name: 'updateManygcMessageDatas', args?: MutationUpdateManygcMessageDatasArgs[] | false, alias?: string  } 
  | { name: 'upsertgcMessageData', args?: MutationUpsertgcMessageDataArgs[] | false, alias?: string  } 
  | { name: 'deletegcMessageData', args?: MutationDeletegcMessageDataArgs[] | false, alias?: string  } 
  | { name: 'deleteManygcMessageDatas', args?: MutationDeleteManygcMessageDatasArgs[] | false, alias?: string  } 
  | { name: 'creategcPediaData', args?: MutationCreategcPediaDataArgs[] | false, alias?: string  } 
  | { name: 'updategcPediaData', args?: MutationUpdategcPediaDataArgs[] | false, alias?: string  } 
  | { name: 'updateManygcPediaDatas', args?: MutationUpdateManygcPediaDatasArgs[] | false, alias?: string  } 
  | { name: 'upsertgcPediaData', args?: MutationUpsertgcPediaDataArgs[] | false, alias?: string  } 
  | { name: 'deletegcPediaData', args?: MutationDeletegcPediaDataArgs[] | false, alias?: string  } 
  | { name: 'deleteManygcPediaDatas', args?: MutationDeleteManygcPediaDatasArgs[] | false, alias?: string  } 
  | { name: 'creategcWikiData', args?: MutationCreategcWikiDataArgs[] | false, alias?: string  } 
  | { name: 'updategcWikiData', args?: MutationUpdategcWikiDataArgs[] | false, alias?: string  } 
  | { name: 'updateManygcWikiDatas', args?: MutationUpdateManygcWikiDatasArgs[] | false, alias?: string  } 
  | { name: 'upsertgcWikiData', args?: MutationUpsertgcWikiDataArgs[] | false, alias?: string  } 
  | { name: 'deletegcWikiData', args?: MutationDeletegcWikiDataArgs[] | false, alias?: string  } 
  | { name: 'deleteManygcWikiDatas', args?: MutationDeleteManygcWikiDatasArgs[] | false, alias?: string  } 

type MutationFields =
  | 'createPeriod'
  | 'updatePeriod'
  | 'updateManyPeriods'
  | 'upsertPeriod'
  | 'deletePeriod'
  | 'deleteManyPeriods'
  | 'creategaStats'
  | 'updategaStats'
  | 'updateManygaStatses'
  | 'upsertgaStats'
  | 'deletegaStats'
  | 'deleteManygaStatses'
  | 'creategcAccountData'
  | 'updategcAccountData'
  | 'updateManygcAccountDatas'
  | 'upsertgcAccountData'
  | 'deletegcAccountData'
  | 'deleteManygcAccountDatas'
  | 'creategcCollabData'
  | 'updategcCollabData'
  | 'updateManygcCollabDatas'
  | 'upsertgcCollabData'
  | 'deletegcCollabData'
  | 'deleteManygcCollabDatas'
  | 'creategcConnexData'
  | 'updategcConnexData'
  | 'updateManygcConnexDatas'
  | 'upsertgcConnexData'
  | 'deletegcConnexData'
  | 'deleteManygcConnexDatas'
  | 'creategcMessageData'
  | 'updategcMessageData'
  | 'updateManygcMessageDatas'
  | 'upsertgcMessageData'
  | 'deletegcMessageData'
  | 'deleteManygcMessageDatas'
  | 'creategcPediaData'
  | 'updategcPediaData'
  | 'updateManygcPediaDatas'
  | 'upsertgcPediaData'
  | 'deletegcPediaData'
  | 'deleteManygcPediaDatas'
  | 'creategcWikiData'
  | 'updategcWikiData'
  | 'updateManygcWikiDatas'
  | 'upsertgcWikiData'
  | 'deletegcWikiData'
  | 'deleteManygcWikiDatas'


type MutationCreatePeriodArgs =
  | 'data'
type MutationUpdatePeriodArgs =
  | 'data'
  | 'where'
type MutationUpdateManyPeriodsArgs =
  | 'data'
  | 'where'
type MutationUpsertPeriodArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeletePeriodArgs =
  | 'where'
type MutationDeleteManyPeriodsArgs =
  | 'where'
type MutationCreategaStatsArgs =
  | 'data'
type MutationUpdategaStatsArgs =
  | 'data'
  | 'where'
type MutationUpdateManygaStatsesArgs =
  | 'data'
  | 'where'
type MutationUpsertgaStatsArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeletegaStatsArgs =
  | 'where'
type MutationDeleteManygaStatsesArgs =
  | 'where'
type MutationCreategcAccountDataArgs =
  | 'data'
type MutationUpdategcAccountDataArgs =
  | 'data'
  | 'where'
type MutationUpdateManygcAccountDatasArgs =
  | 'data'
  | 'where'
type MutationUpsertgcAccountDataArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeletegcAccountDataArgs =
  | 'where'
type MutationDeleteManygcAccountDatasArgs =
  | 'where'
type MutationCreategcCollabDataArgs =
  | 'data'
type MutationUpdategcCollabDataArgs =
  | 'data'
  | 'where'
type MutationUpdateManygcCollabDatasArgs =
  | 'data'
  | 'where'
type MutationUpsertgcCollabDataArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeletegcCollabDataArgs =
  | 'where'
type MutationDeleteManygcCollabDatasArgs =
  | 'where'
type MutationCreategcConnexDataArgs =
  | 'data'
type MutationUpdategcConnexDataArgs =
  | 'data'
  | 'where'
type MutationUpdateManygcConnexDatasArgs =
  | 'data'
  | 'where'
type MutationUpsertgcConnexDataArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeletegcConnexDataArgs =
  | 'where'
type MutationDeleteManygcConnexDatasArgs =
  | 'where'
type MutationCreategcMessageDataArgs =
  | 'data'
type MutationUpdategcMessageDataArgs =
  | 'data'
  | 'where'
type MutationUpdateManygcMessageDatasArgs =
  | 'data'
  | 'where'
type MutationUpsertgcMessageDataArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeletegcMessageDataArgs =
  | 'where'
type MutationDeleteManygcMessageDatasArgs =
  | 'where'
type MutationCreategcPediaDataArgs =
  | 'data'
type MutationUpdategcPediaDataArgs =
  | 'data'
  | 'where'
type MutationUpdateManygcPediaDatasArgs =
  | 'data'
  | 'where'
type MutationUpsertgcPediaDataArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeletegcPediaDataArgs =
  | 'where'
type MutationDeleteManygcPediaDatasArgs =
  | 'where'
type MutationCreategcWikiDataArgs =
  | 'data'
type MutationUpdategcWikiDataArgs =
  | 'data'
  | 'where'
type MutationUpdateManygcWikiDatasArgs =
  | 'data'
  | 'where'
type MutationUpsertgcWikiDataArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeletegcWikiDataArgs =
  | 'where'
type MutationDeleteManygcWikiDatasArgs =
  | 'where'
  

export interface MutationFieldDetails {
  createPeriod: {
    type: 'Period'
    args: Record<MutationCreatePeriodArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PeriodCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Period> | prisma.Period
  }
  updatePeriod: {
    type: 'Period'
    args: Record<MutationUpdatePeriodArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PeriodUpdateInput, where: PeriodWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Period | null> | prisma.Period | null
  }
  updateManyPeriods: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyPeriodsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PeriodUpdateManyMutationInput, where?: PeriodWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertPeriod: {
    type: 'Period'
    args: Record<MutationUpsertPeriodArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PeriodWhereUniqueInput, create: PeriodCreateInput, update: PeriodUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Period> | prisma.Period
  }
  deletePeriod: {
    type: 'Period'
    args: Record<MutationDeletePeriodArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PeriodWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Period | null> | prisma.Period | null
  }
  deleteManyPeriods: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyPeriodsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: PeriodWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  creategaStats: {
    type: 'gaStats'
    args: Record<MutationCreategaStatsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: gaStatsCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gaStats> | prisma.gaStats
  }
  updategaStats: {
    type: 'gaStats'
    args: Record<MutationUpdategaStatsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: gaStatsUpdateInput, where: gaStatsWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gaStats | null> | prisma.gaStats | null
  }
  updateManygaStatses: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManygaStatsesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: gaStatsUpdateManyMutationInput, where?: gaStatsWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertgaStats: {
    type: 'gaStats'
    args: Record<MutationUpsertgaStatsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: gaStatsWhereUniqueInput, create: gaStatsCreateInput, update: gaStatsUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gaStats> | prisma.gaStats
  }
  deletegaStats: {
    type: 'gaStats'
    args: Record<MutationDeletegaStatsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: gaStatsWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gaStats | null> | prisma.gaStats | null
  }
  deleteManygaStatses: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManygaStatsesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: gaStatsWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  creategcAccountData: {
    type: 'gcAccountData'
    args: Record<MutationCreategcAccountDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: gcAccountDataCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcAccountData> | prisma.gcAccountData
  }
  updategcAccountData: {
    type: 'gcAccountData'
    args: Record<MutationUpdategcAccountDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: gcAccountDataUpdateInput, where: gcAccountDataWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcAccountData | null> | prisma.gcAccountData | null
  }
  updateManygcAccountDatas: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManygcAccountDatasArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: gcAccountDataUpdateManyMutationInput, where?: gcAccountDataWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertgcAccountData: {
    type: 'gcAccountData'
    args: Record<MutationUpsertgcAccountDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: gcAccountDataWhereUniqueInput, create: gcAccountDataCreateInput, update: gcAccountDataUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcAccountData> | prisma.gcAccountData
  }
  deletegcAccountData: {
    type: 'gcAccountData'
    args: Record<MutationDeletegcAccountDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: gcAccountDataWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcAccountData | null> | prisma.gcAccountData | null
  }
  deleteManygcAccountDatas: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManygcAccountDatasArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: gcAccountDataWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  creategcCollabData: {
    type: 'gcCollabData'
    args: Record<MutationCreategcCollabDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: gcCollabDataCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcCollabData> | prisma.gcCollabData
  }
  updategcCollabData: {
    type: 'gcCollabData'
    args: Record<MutationUpdategcCollabDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: gcCollabDataUpdateInput, where: gcCollabDataWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcCollabData | null> | prisma.gcCollabData | null
  }
  updateManygcCollabDatas: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManygcCollabDatasArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: gcCollabDataUpdateManyMutationInput, where?: gcCollabDataWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertgcCollabData: {
    type: 'gcCollabData'
    args: Record<MutationUpsertgcCollabDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: gcCollabDataWhereUniqueInput, create: gcCollabDataCreateInput, update: gcCollabDataUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcCollabData> | prisma.gcCollabData
  }
  deletegcCollabData: {
    type: 'gcCollabData'
    args: Record<MutationDeletegcCollabDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: gcCollabDataWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcCollabData | null> | prisma.gcCollabData | null
  }
  deleteManygcCollabDatas: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManygcCollabDatasArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: gcCollabDataWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  creategcConnexData: {
    type: 'gcConnexData'
    args: Record<MutationCreategcConnexDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: gcConnexDataCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcConnexData> | prisma.gcConnexData
  }
  updategcConnexData: {
    type: 'gcConnexData'
    args: Record<MutationUpdategcConnexDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: gcConnexDataUpdateInput, where: gcConnexDataWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcConnexData | null> | prisma.gcConnexData | null
  }
  updateManygcConnexDatas: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManygcConnexDatasArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: gcConnexDataUpdateManyMutationInput, where?: gcConnexDataWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertgcConnexData: {
    type: 'gcConnexData'
    args: Record<MutationUpsertgcConnexDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: gcConnexDataWhereUniqueInput, create: gcConnexDataCreateInput, update: gcConnexDataUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcConnexData> | prisma.gcConnexData
  }
  deletegcConnexData: {
    type: 'gcConnexData'
    args: Record<MutationDeletegcConnexDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: gcConnexDataWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcConnexData | null> | prisma.gcConnexData | null
  }
  deleteManygcConnexDatas: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManygcConnexDatasArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: gcConnexDataWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  creategcMessageData: {
    type: 'gcMessageData'
    args: Record<MutationCreategcMessageDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: gcMessageDataCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcMessageData> | prisma.gcMessageData
  }
  updategcMessageData: {
    type: 'gcMessageData'
    args: Record<MutationUpdategcMessageDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: gcMessageDataUpdateInput, where: gcMessageDataWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcMessageData | null> | prisma.gcMessageData | null
  }
  updateManygcMessageDatas: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManygcMessageDatasArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: gcMessageDataUpdateManyMutationInput, where?: gcMessageDataWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertgcMessageData: {
    type: 'gcMessageData'
    args: Record<MutationUpsertgcMessageDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: gcMessageDataWhereUniqueInput, create: gcMessageDataCreateInput, update: gcMessageDataUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcMessageData> | prisma.gcMessageData
  }
  deletegcMessageData: {
    type: 'gcMessageData'
    args: Record<MutationDeletegcMessageDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: gcMessageDataWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcMessageData | null> | prisma.gcMessageData | null
  }
  deleteManygcMessageDatas: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManygcMessageDatasArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: gcMessageDataWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  creategcPediaData: {
    type: 'gcPediaData'
    args: Record<MutationCreategcPediaDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: gcPediaDataCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcPediaData> | prisma.gcPediaData
  }
  updategcPediaData: {
    type: 'gcPediaData'
    args: Record<MutationUpdategcPediaDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: gcPediaDataUpdateInput, where: gcPediaDataWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcPediaData | null> | prisma.gcPediaData | null
  }
  updateManygcPediaDatas: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManygcPediaDatasArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: gcPediaDataUpdateManyMutationInput, where?: gcPediaDataWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertgcPediaData: {
    type: 'gcPediaData'
    args: Record<MutationUpsertgcPediaDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: gcPediaDataWhereUniqueInput, create: gcPediaDataCreateInput, update: gcPediaDataUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcPediaData> | prisma.gcPediaData
  }
  deletegcPediaData: {
    type: 'gcPediaData'
    args: Record<MutationDeletegcPediaDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: gcPediaDataWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcPediaData | null> | prisma.gcPediaData | null
  }
  deleteManygcPediaDatas: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManygcPediaDatasArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: gcPediaDataWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  creategcWikiData: {
    type: 'gcWikiData'
    args: Record<MutationCreategcWikiDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: gcWikiDataCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcWikiData> | prisma.gcWikiData
  }
  updategcWikiData: {
    type: 'gcWikiData'
    args: Record<MutationUpdategcWikiDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: gcWikiDataUpdateInput, where: gcWikiDataWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcWikiData | null> | prisma.gcWikiData | null
  }
  updateManygcWikiDatas: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManygcWikiDatasArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: gcWikiDataUpdateManyMutationInput, where?: gcWikiDataWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertgcWikiData: {
    type: 'gcWikiData'
    args: Record<MutationUpsertgcWikiDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: gcWikiDataWhereUniqueInput, create: gcWikiDataCreateInput, update: gcWikiDataUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcWikiData> | prisma.gcWikiData
  }
  deletegcWikiData: {
    type: 'gcWikiData'
    args: Record<MutationDeletegcWikiDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: gcWikiDataWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcWikiData | null> | prisma.gcWikiData | null
  }
  deleteManygcWikiDatas: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManygcWikiDatasArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: gcWikiDataWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
}
  

// Types for BatchPayload

type BatchPayloadObject =
  | BatchPayloadFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type BatchPayloadFields =
  | 'count'



  

export interface BatchPayloadFieldDetails {
  count: {
    type: 'Long'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Subscription

type SubscriptionObject =
  | SubscriptionFields
  | { name: 'period', args?: SubscriptionPeriodArgs[] | false, alias?: string  } 
  | { name: 'gaStats', args?: SubscriptionGaStatsArgs[] | false, alias?: string  } 
  | { name: 'gcAccountData', args?: SubscriptionGcAccountDataArgs[] | false, alias?: string  } 
  | { name: 'gcCollabData', args?: SubscriptionGcCollabDataArgs[] | false, alias?: string  } 
  | { name: 'gcConnexData', args?: SubscriptionGcConnexDataArgs[] | false, alias?: string  } 
  | { name: 'gcMessageData', args?: SubscriptionGcMessageDataArgs[] | false, alias?: string  } 
  | { name: 'gcPediaData', args?: SubscriptionGcPediaDataArgs[] | false, alias?: string  } 
  | { name: 'gcWikiData', args?: SubscriptionGcWikiDataArgs[] | false, alias?: string  } 

type SubscriptionFields =
  | 'period'
  | 'gaStats'
  | 'gcAccountData'
  | 'gcCollabData'
  | 'gcConnexData'
  | 'gcMessageData'
  | 'gcPediaData'
  | 'gcWikiData'


type SubscriptionPeriodArgs =
  | 'where'
type SubscriptionGaStatsArgs =
  | 'where'
type SubscriptionGcAccountDataArgs =
  | 'where'
type SubscriptionGcCollabDataArgs =
  | 'where'
type SubscriptionGcConnexDataArgs =
  | 'where'
type SubscriptionGcMessageDataArgs =
  | 'where'
type SubscriptionGcPediaDataArgs =
  | 'where'
type SubscriptionGcWikiDataArgs =
  | 'where'
  

export interface SubscriptionFieldDetails {
  period: {
    type: 'PeriodSubscriptionPayload'
    args: Record<SubscriptionPeriodArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: PeriodSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PeriodSubscriptionPayload | null> | prisma.PeriodSubscriptionPayload | null
  }
  gaStats: {
    type: 'gaStatsSubscriptionPayload'
    args: Record<SubscriptionGaStatsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: gaStatsSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gaStatsSubscriptionPayload | null> | prisma.gaStatsSubscriptionPayload | null
  }
  gcAccountData: {
    type: 'gcAccountDataSubscriptionPayload'
    args: Record<SubscriptionGcAccountDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: gcAccountDataSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcAccountDataSubscriptionPayload | null> | prisma.gcAccountDataSubscriptionPayload | null
  }
  gcCollabData: {
    type: 'gcCollabDataSubscriptionPayload'
    args: Record<SubscriptionGcCollabDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: gcCollabDataSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcCollabDataSubscriptionPayload | null> | prisma.gcCollabDataSubscriptionPayload | null
  }
  gcConnexData: {
    type: 'gcConnexDataSubscriptionPayload'
    args: Record<SubscriptionGcConnexDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: gcConnexDataSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcConnexDataSubscriptionPayload | null> | prisma.gcConnexDataSubscriptionPayload | null
  }
  gcMessageData: {
    type: 'gcMessageDataSubscriptionPayload'
    args: Record<SubscriptionGcMessageDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: gcMessageDataSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcMessageDataSubscriptionPayload | null> | prisma.gcMessageDataSubscriptionPayload | null
  }
  gcPediaData: {
    type: 'gcPediaDataSubscriptionPayload'
    args: Record<SubscriptionGcPediaDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: gcPediaDataSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcPediaDataSubscriptionPayload | null> | prisma.gcPediaDataSubscriptionPayload | null
  }
  gcWikiData: {
    type: 'gcWikiDataSubscriptionPayload'
    args: Record<SubscriptionGcWikiDataArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: gcWikiDataSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcWikiDataSubscriptionPayload | null> | prisma.gcWikiDataSubscriptionPayload | null
  }
}
  

// Types for PeriodSubscriptionPayload

type PeriodSubscriptionPayloadObject =
  | PeriodSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type PeriodSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface PeriodSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PeriodSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Period'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PeriodSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Period | null> | prisma.Period | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'PeriodPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PeriodSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PeriodPreviousValues | null> | prisma.PeriodPreviousValues | null
  }
}
  

// Types for PeriodPreviousValues

type PeriodPreviousValuesObject =
  | PeriodPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'month', args?: [] | false, alias?: string  } 
  | { name: 'year', args?: [] | false, alias?: string  } 

type PeriodPreviousValuesFields =
  | 'id'
  | 'month'
  | 'year'



  

export interface PeriodPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  month: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  year: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for gaStatsSubscriptionPayload

type gaStatsSubscriptionPayloadObject =
  | gaStatsSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type gaStatsSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface gaStatsSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gaStatsSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'gaStats'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"gaStatsSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gaStats | null> | prisma.gaStats | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'gaStatsPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"gaStatsSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gaStatsPreviousValues | null> | prisma.gaStatsPreviousValues | null
  }
}
  

// Types for gaStatsPreviousValues

type gaStatsPreviousValuesObject =
  | gaStatsPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'numSessions', args?: [] | false, alias?: string  } 
  | { name: 'avgPageviewsPerSession', args?: [] | false, alias?: string  } 
  | { name: 'avgSessionDuration', args?: [] | false, alias?: string  } 
  | { name: 'avgPageLoadTime', args?: [] | false, alias?: string  } 
  | { name: 'bounceRate', args?: [] | false, alias?: string  } 

type gaStatsPreviousValuesFields =
  | 'id'
  | 'numSessions'
  | 'avgPageviewsPerSession'
  | 'avgSessionDuration'
  | 'avgPageLoadTime'
  | 'bounceRate'



  

export interface gaStatsPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  numSessions: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  avgPageviewsPerSession: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  avgSessionDuration: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  avgPageLoadTime: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  bounceRate: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for gcAccountDataSubscriptionPayload

type gcAccountDataSubscriptionPayloadObject =
  | gcAccountDataSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type gcAccountDataSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface gcAccountDataSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcAccountDataSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'gcAccountData'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"gcAccountDataSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcAccountData | null> | prisma.gcAccountData | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'gcAccountDataPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"gcAccountDataSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcAccountDataPreviousValues | null> | prisma.gcAccountDataPreviousValues | null
  }
}
  

// Types for gcAccountDataPreviousValues

type gcAccountDataPreviousValuesObject =
  | gcAccountDataPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'totalNumAccounts', args?: [] | false, alias?: string  } 
  | { name: 'numNewAccounts', args?: [] | false, alias?: string  } 

type gcAccountDataPreviousValuesFields =
  | 'id'
  | 'totalNumAccounts'
  | 'numNewAccounts'



  

export interface gcAccountDataPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  totalNumAccounts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewAccounts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for gcCollabDataSubscriptionPayload

type gcCollabDataSubscriptionPayloadObject =
  | gcCollabDataSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type gcCollabDataSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface gcCollabDataSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcCollabDataSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'gcCollabData'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"gcCollabDataSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcCollabData | null> | prisma.gcCollabData | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'gcCollabDataPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"gcCollabDataSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcCollabDataPreviousValues | null> | prisma.gcCollabDataPreviousValues | null
  }
}
  

// Types for gcCollabDataPreviousValues

type gcCollabDataPreviousValuesObject =
  | gcCollabDataPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'totalNumAccounts', args?: [] | false, alias?: string  } 
  | { name: 'numNewAccounts', args?: [] | false, alias?: string  } 
  | { name: 'totalNumGroups', args?: [] | false, alias?: string  } 
  | { name: 'numNewGroups', args?: [] | false, alias?: string  } 

type gcCollabDataPreviousValuesFields =
  | 'id'
  | 'totalNumAccounts'
  | 'numNewAccounts'
  | 'totalNumGroups'
  | 'numNewGroups'



  

export interface gcCollabDataPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  totalNumAccounts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewAccounts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  totalNumGroups: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewGroups: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for gcConnexDataSubscriptionPayload

type gcConnexDataSubscriptionPayloadObject =
  | gcConnexDataSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type gcConnexDataSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface gcConnexDataSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcConnexDataSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'gcConnexData'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"gcConnexDataSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcConnexData | null> | prisma.gcConnexData | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'gcConnexDataPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"gcConnexDataSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcConnexDataPreviousValues | null> | prisma.gcConnexDataPreviousValues | null
  }
}
  

// Types for gcConnexDataPreviousValues

type gcConnexDataPreviousValuesObject =
  | gcConnexDataPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'totalNumAccounts', args?: [] | false, alias?: string  } 
  | { name: 'numNewAccounts', args?: [] | false, alias?: string  } 
  | { name: 'totalNumGroups', args?: [] | false, alias?: string  } 
  | { name: 'numNewGroups', args?: [] | false, alias?: string  } 

type gcConnexDataPreviousValuesFields =
  | 'id'
  | 'totalNumAccounts'
  | 'numNewAccounts'
  | 'totalNumGroups'
  | 'numNewGroups'



  

export interface gcConnexDataPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  totalNumAccounts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewAccounts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  totalNumGroups: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewGroups: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for gcMessageDataSubscriptionPayload

type gcMessageDataSubscriptionPayloadObject =
  | gcMessageDataSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type gcMessageDataSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface gcMessageDataSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcMessageDataSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'gcMessageData'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"gcMessageDataSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcMessageData | null> | prisma.gcMessageData | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'gcMessageDataPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"gcMessageDataSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcMessageDataPreviousValues | null> | prisma.gcMessageDataPreviousValues | null
  }
}
  

// Types for gcMessageDataPreviousValues

type gcMessageDataPreviousValuesObject =
  | gcMessageDataPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'totalNumAccounts', args?: [] | false, alias?: string  } 
  | { name: 'numNewAccounts', args?: [] | false, alias?: string  } 
  | { name: 'totalNumChannelMessages', args?: [] | false, alias?: string  } 
  | { name: 'numNewChannelMessages', args?: [] | false, alias?: string  } 
  | { name: 'totalNumPrivateGroupMessages', args?: [] | false, alias?: string  } 
  | { name: 'numNewPrivateGroupMessages', args?: [] | false, alias?: string  } 
  | { name: 'totalNumDirectMessages', args?: [] | false, alias?: string  } 
  | { name: 'numNewDirectMessages', args?: [] | false, alias?: string  } 
  | { name: 'totalNumFileUploads', args?: [] | false, alias?: string  } 
  | { name: 'numNewFileUploads', args?: [] | false, alias?: string  } 

type gcMessageDataPreviousValuesFields =
  | 'id'
  | 'totalNumAccounts'
  | 'numNewAccounts'
  | 'totalNumChannelMessages'
  | 'numNewChannelMessages'
  | 'totalNumPrivateGroupMessages'
  | 'numNewPrivateGroupMessages'
  | 'totalNumDirectMessages'
  | 'numNewDirectMessages'
  | 'totalNumFileUploads'
  | 'numNewFileUploads'



  

export interface gcMessageDataPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  totalNumAccounts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewAccounts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  totalNumChannelMessages: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewChannelMessages: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  totalNumPrivateGroupMessages: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewPrivateGroupMessages: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  totalNumDirectMessages: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewDirectMessages: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  totalNumFileUploads: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewFileUploads: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for gcPediaDataSubscriptionPayload

type gcPediaDataSubscriptionPayloadObject =
  | gcPediaDataSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type gcPediaDataSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface gcPediaDataSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcPediaDataSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'gcPediaData'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"gcPediaDataSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcPediaData | null> | prisma.gcPediaData | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'gcPediaDataPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"gcPediaDataSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcPediaDataPreviousValues | null> | prisma.gcPediaDataPreviousValues | null
  }
}
  

// Types for gcPediaDataPreviousValues

type gcPediaDataPreviousValuesObject =
  | gcPediaDataPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'totalNumAccounts', args?: [] | false, alias?: string  } 
  | { name: 'numNewAccounts', args?: [] | false, alias?: string  } 
  | { name: 'totalNumArticles', args?: [] | false, alias?: string  } 
  | { name: 'numNewArticles', args?: [] | false, alias?: string  } 
  | { name: 'totalNumEdits', args?: [] | false, alias?: string  } 
  | { name: 'numNewEdits', args?: [] | false, alias?: string  } 

type gcPediaDataPreviousValuesFields =
  | 'id'
  | 'totalNumAccounts'
  | 'numNewAccounts'
  | 'totalNumArticles'
  | 'numNewArticles'
  | 'totalNumEdits'
  | 'numNewEdits'



  

export interface gcPediaDataPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  totalNumAccounts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewAccounts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  totalNumArticles: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewArticles: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  totalNumEdits: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewEdits: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for gcWikiDataSubscriptionPayload

type gcWikiDataSubscriptionPayloadObject =
  | gcWikiDataSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type gcWikiDataSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface gcWikiDataSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"gcWikiDataSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'gcWikiData'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"gcWikiDataSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcWikiData | null> | prisma.gcWikiData | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'gcWikiDataPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"gcWikiDataSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.gcWikiDataPreviousValues | null> | prisma.gcWikiDataPreviousValues | null
  }
}
  

// Types for gcWikiDataPreviousValues

type gcWikiDataPreviousValuesObject =
  | gcWikiDataPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'totalNumAccounts', args?: [] | false, alias?: string  } 
  | { name: 'numNewAccounts', args?: [] | false, alias?: string  } 
  | { name: 'totalNumArticles', args?: [] | false, alias?: string  } 
  | { name: 'numNewArticles', args?: [] | false, alias?: string  } 
  | { name: 'totalNumEdits', args?: [] | false, alias?: string  } 
  | { name: 'numNewEdits', args?: [] | false, alias?: string  } 

type gcWikiDataPreviousValuesFields =
  | 'id'
  | 'totalNumAccounts'
  | 'numNewAccounts'
  | 'totalNumArticles'
  | 'numNewArticles'
  | 'totalNumEdits'
  | 'numNewEdits'



  

export interface gcWikiDataPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  totalNumAccounts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewAccounts: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  totalNumArticles: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewArticles: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  totalNumEdits: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  numNewEdits: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  


export interface PeriodWhereUniqueInput {
  id?: string | null
}
export type PeriodWhereUniqueInputInputObject =
  | Extract<keyof PeriodWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface PeriodWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  month?: number | null
  month_not?: number | null
  month_in?: number[]
  month_not_in?: number[]
  month_lt?: number | null
  month_lte?: number | null
  month_gt?: number | null
  month_gte?: number | null
  year?: number | null
  year_not?: number | null
  year_in?: number[]
  year_not_in?: number[]
  year_lt?: number | null
  year_lte?: number | null
  year_gt?: number | null
  year_gte?: number | null
  gcAccount?: gcAccountDataWhereInput | null
  gcCollab?: gcCollabDataWhereInput | null
  gcConnex?: gcConnexDataWhereInput | null
  gcMessage?: gcMessageDataWhereInput | null
  gcPedia?: gcPediaDataWhereInput | null
  gcWiki?: gcWikiDataWhereInput | null
  AND?: PeriodWhereInput[]
  OR?: PeriodWhereInput[]
  NOT?: PeriodWhereInput[]
}
export type PeriodWhereInputInputObject =
  | Extract<keyof PeriodWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'month', alias?: string  } 
  | { name: 'month_not', alias?: string  } 
  | { name: 'month_in', alias?: string  } 
  | { name: 'month_not_in', alias?: string  } 
  | { name: 'month_lt', alias?: string  } 
  | { name: 'month_lte', alias?: string  } 
  | { name: 'month_gt', alias?: string  } 
  | { name: 'month_gte', alias?: string  } 
  | { name: 'year', alias?: string  } 
  | { name: 'year_not', alias?: string  } 
  | { name: 'year_in', alias?: string  } 
  | { name: 'year_not_in', alias?: string  } 
  | { name: 'year_lt', alias?: string  } 
  | { name: 'year_lte', alias?: string  } 
  | { name: 'year_gt', alias?: string  } 
  | { name: 'year_gte', alias?: string  } 
  | { name: 'gcAccount', alias?: string  } 
  | { name: 'gcCollab', alias?: string  } 
  | { name: 'gcConnex', alias?: string  } 
  | { name: 'gcMessage', alias?: string  } 
  | { name: 'gcPedia', alias?: string  } 
  | { name: 'gcWiki', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface gcAccountDataWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  period?: PeriodWhereInput | null
  totalNumAccounts?: number | null
  totalNumAccounts_not?: number | null
  totalNumAccounts_in?: number[]
  totalNumAccounts_not_in?: number[]
  totalNumAccounts_lt?: number | null
  totalNumAccounts_lte?: number | null
  totalNumAccounts_gt?: number | null
  totalNumAccounts_gte?: number | null
  numNewAccounts?: number | null
  numNewAccounts_not?: number | null
  numNewAccounts_in?: number[]
  numNewAccounts_not_in?: number[]
  numNewAccounts_lt?: number | null
  numNewAccounts_lte?: number | null
  numNewAccounts_gt?: number | null
  numNewAccounts_gte?: number | null
  AND?: gcAccountDataWhereInput[]
  OR?: gcAccountDataWhereInput[]
  NOT?: gcAccountDataWhereInput[]
}
export type gcAccountDataWhereInputInputObject =
  | Extract<keyof gcAccountDataWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'period', alias?: string  } 
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'totalNumAccounts_not', alias?: string  } 
  | { name: 'totalNumAccounts_in', alias?: string  } 
  | { name: 'totalNumAccounts_not_in', alias?: string  } 
  | { name: 'totalNumAccounts_lt', alias?: string  } 
  | { name: 'totalNumAccounts_lte', alias?: string  } 
  | { name: 'totalNumAccounts_gt', alias?: string  } 
  | { name: 'totalNumAccounts_gte', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'numNewAccounts_not', alias?: string  } 
  | { name: 'numNewAccounts_in', alias?: string  } 
  | { name: 'numNewAccounts_not_in', alias?: string  } 
  | { name: 'numNewAccounts_lt', alias?: string  } 
  | { name: 'numNewAccounts_lte', alias?: string  } 
  | { name: 'numNewAccounts_gt', alias?: string  } 
  | { name: 'numNewAccounts_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface gcCollabDataWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  period?: PeriodWhereInput | null
  totalNumAccounts?: number | null
  totalNumAccounts_not?: number | null
  totalNumAccounts_in?: number[]
  totalNumAccounts_not_in?: number[]
  totalNumAccounts_lt?: number | null
  totalNumAccounts_lte?: number | null
  totalNumAccounts_gt?: number | null
  totalNumAccounts_gte?: number | null
  numNewAccounts?: number | null
  numNewAccounts_not?: number | null
  numNewAccounts_in?: number[]
  numNewAccounts_not_in?: number[]
  numNewAccounts_lt?: number | null
  numNewAccounts_lte?: number | null
  numNewAccounts_gt?: number | null
  numNewAccounts_gte?: number | null
  gaStats?: gaStatsWhereInput | null
  totalNumGroups?: number | null
  totalNumGroups_not?: number | null
  totalNumGroups_in?: number[]
  totalNumGroups_not_in?: number[]
  totalNumGroups_lt?: number | null
  totalNumGroups_lte?: number | null
  totalNumGroups_gt?: number | null
  totalNumGroups_gte?: number | null
  numNewGroups?: number | null
  numNewGroups_not?: number | null
  numNewGroups_in?: number[]
  numNewGroups_not_in?: number[]
  numNewGroups_lt?: number | null
  numNewGroups_lte?: number | null
  numNewGroups_gt?: number | null
  numNewGroups_gte?: number | null
  AND?: gcCollabDataWhereInput[]
  OR?: gcCollabDataWhereInput[]
  NOT?: gcCollabDataWhereInput[]
}
export type gcCollabDataWhereInputInputObject =
  | Extract<keyof gcCollabDataWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'period', alias?: string  } 
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'totalNumAccounts_not', alias?: string  } 
  | { name: 'totalNumAccounts_in', alias?: string  } 
  | { name: 'totalNumAccounts_not_in', alias?: string  } 
  | { name: 'totalNumAccounts_lt', alias?: string  } 
  | { name: 'totalNumAccounts_lte', alias?: string  } 
  | { name: 'totalNumAccounts_gt', alias?: string  } 
  | { name: 'totalNumAccounts_gte', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'numNewAccounts_not', alias?: string  } 
  | { name: 'numNewAccounts_in', alias?: string  } 
  | { name: 'numNewAccounts_not_in', alias?: string  } 
  | { name: 'numNewAccounts_lt', alias?: string  } 
  | { name: 'numNewAccounts_lte', alias?: string  } 
  | { name: 'numNewAccounts_gt', alias?: string  } 
  | { name: 'numNewAccounts_gte', alias?: string  } 
  | { name: 'gaStats', alias?: string  } 
  | { name: 'totalNumGroups', alias?: string  } 
  | { name: 'totalNumGroups_not', alias?: string  } 
  | { name: 'totalNumGroups_in', alias?: string  } 
  | { name: 'totalNumGroups_not_in', alias?: string  } 
  | { name: 'totalNumGroups_lt', alias?: string  } 
  | { name: 'totalNumGroups_lte', alias?: string  } 
  | { name: 'totalNumGroups_gt', alias?: string  } 
  | { name: 'totalNumGroups_gte', alias?: string  } 
  | { name: 'numNewGroups', alias?: string  } 
  | { name: 'numNewGroups_not', alias?: string  } 
  | { name: 'numNewGroups_in', alias?: string  } 
  | { name: 'numNewGroups_not_in', alias?: string  } 
  | { name: 'numNewGroups_lt', alias?: string  } 
  | { name: 'numNewGroups_lte', alias?: string  } 
  | { name: 'numNewGroups_gt', alias?: string  } 
  | { name: 'numNewGroups_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface gaStatsWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  numSessions?: number | null
  numSessions_not?: number | null
  numSessions_in?: number[]
  numSessions_not_in?: number[]
  numSessions_lt?: number | null
  numSessions_lte?: number | null
  numSessions_gt?: number | null
  numSessions_gte?: number | null
  avgPageviewsPerSession?: number | null
  avgPageviewsPerSession_not?: number | null
  avgPageviewsPerSession_in?: number[]
  avgPageviewsPerSession_not_in?: number[]
  avgPageviewsPerSession_lt?: number | null
  avgPageviewsPerSession_lte?: number | null
  avgPageviewsPerSession_gt?: number | null
  avgPageviewsPerSession_gte?: number | null
  avgSessionDuration?: number | null
  avgSessionDuration_not?: number | null
  avgSessionDuration_in?: number[]
  avgSessionDuration_not_in?: number[]
  avgSessionDuration_lt?: number | null
  avgSessionDuration_lte?: number | null
  avgSessionDuration_gt?: number | null
  avgSessionDuration_gte?: number | null
  avgPageLoadTime?: number | null
  avgPageLoadTime_not?: number | null
  avgPageLoadTime_in?: number[]
  avgPageLoadTime_not_in?: number[]
  avgPageLoadTime_lt?: number | null
  avgPageLoadTime_lte?: number | null
  avgPageLoadTime_gt?: number | null
  avgPageLoadTime_gte?: number | null
  bounceRate?: number | null
  bounceRate_not?: number | null
  bounceRate_in?: number[]
  bounceRate_not_in?: number[]
  bounceRate_lt?: number | null
  bounceRate_lte?: number | null
  bounceRate_gt?: number | null
  bounceRate_gte?: number | null
  AND?: gaStatsWhereInput[]
  OR?: gaStatsWhereInput[]
  NOT?: gaStatsWhereInput[]
}
export type gaStatsWhereInputInputObject =
  | Extract<keyof gaStatsWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'numSessions', alias?: string  } 
  | { name: 'numSessions_not', alias?: string  } 
  | { name: 'numSessions_in', alias?: string  } 
  | { name: 'numSessions_not_in', alias?: string  } 
  | { name: 'numSessions_lt', alias?: string  } 
  | { name: 'numSessions_lte', alias?: string  } 
  | { name: 'numSessions_gt', alias?: string  } 
  | { name: 'numSessions_gte', alias?: string  } 
  | { name: 'avgPageviewsPerSession', alias?: string  } 
  | { name: 'avgPageviewsPerSession_not', alias?: string  } 
  | { name: 'avgPageviewsPerSession_in', alias?: string  } 
  | { name: 'avgPageviewsPerSession_not_in', alias?: string  } 
  | { name: 'avgPageviewsPerSession_lt', alias?: string  } 
  | { name: 'avgPageviewsPerSession_lte', alias?: string  } 
  | { name: 'avgPageviewsPerSession_gt', alias?: string  } 
  | { name: 'avgPageviewsPerSession_gte', alias?: string  } 
  | { name: 'avgSessionDuration', alias?: string  } 
  | { name: 'avgSessionDuration_not', alias?: string  } 
  | { name: 'avgSessionDuration_in', alias?: string  } 
  | { name: 'avgSessionDuration_not_in', alias?: string  } 
  | { name: 'avgSessionDuration_lt', alias?: string  } 
  | { name: 'avgSessionDuration_lte', alias?: string  } 
  | { name: 'avgSessionDuration_gt', alias?: string  } 
  | { name: 'avgSessionDuration_gte', alias?: string  } 
  | { name: 'avgPageLoadTime', alias?: string  } 
  | { name: 'avgPageLoadTime_not', alias?: string  } 
  | { name: 'avgPageLoadTime_in', alias?: string  } 
  | { name: 'avgPageLoadTime_not_in', alias?: string  } 
  | { name: 'avgPageLoadTime_lt', alias?: string  } 
  | { name: 'avgPageLoadTime_lte', alias?: string  } 
  | { name: 'avgPageLoadTime_gt', alias?: string  } 
  | { name: 'avgPageLoadTime_gte', alias?: string  } 
  | { name: 'bounceRate', alias?: string  } 
  | { name: 'bounceRate_not', alias?: string  } 
  | { name: 'bounceRate_in', alias?: string  } 
  | { name: 'bounceRate_not_in', alias?: string  } 
  | { name: 'bounceRate_lt', alias?: string  } 
  | { name: 'bounceRate_lte', alias?: string  } 
  | { name: 'bounceRate_gt', alias?: string  } 
  | { name: 'bounceRate_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface gcConnexDataWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  period?: PeriodWhereInput | null
  totalNumAccounts?: number | null
  totalNumAccounts_not?: number | null
  totalNumAccounts_in?: number[]
  totalNumAccounts_not_in?: number[]
  totalNumAccounts_lt?: number | null
  totalNumAccounts_lte?: number | null
  totalNumAccounts_gt?: number | null
  totalNumAccounts_gte?: number | null
  numNewAccounts?: number | null
  numNewAccounts_not?: number | null
  numNewAccounts_in?: number[]
  numNewAccounts_not_in?: number[]
  numNewAccounts_lt?: number | null
  numNewAccounts_lte?: number | null
  numNewAccounts_gt?: number | null
  numNewAccounts_gte?: number | null
  gaStats?: gaStatsWhereInput | null
  totalNumGroups?: number | null
  totalNumGroups_not?: number | null
  totalNumGroups_in?: number[]
  totalNumGroups_not_in?: number[]
  totalNumGroups_lt?: number | null
  totalNumGroups_lte?: number | null
  totalNumGroups_gt?: number | null
  totalNumGroups_gte?: number | null
  numNewGroups?: number | null
  numNewGroups_not?: number | null
  numNewGroups_in?: number[]
  numNewGroups_not_in?: number[]
  numNewGroups_lt?: number | null
  numNewGroups_lte?: number | null
  numNewGroups_gt?: number | null
  numNewGroups_gte?: number | null
  AND?: gcConnexDataWhereInput[]
  OR?: gcConnexDataWhereInput[]
  NOT?: gcConnexDataWhereInput[]
}
export type gcConnexDataWhereInputInputObject =
  | Extract<keyof gcConnexDataWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'period', alias?: string  } 
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'totalNumAccounts_not', alias?: string  } 
  | { name: 'totalNumAccounts_in', alias?: string  } 
  | { name: 'totalNumAccounts_not_in', alias?: string  } 
  | { name: 'totalNumAccounts_lt', alias?: string  } 
  | { name: 'totalNumAccounts_lte', alias?: string  } 
  | { name: 'totalNumAccounts_gt', alias?: string  } 
  | { name: 'totalNumAccounts_gte', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'numNewAccounts_not', alias?: string  } 
  | { name: 'numNewAccounts_in', alias?: string  } 
  | { name: 'numNewAccounts_not_in', alias?: string  } 
  | { name: 'numNewAccounts_lt', alias?: string  } 
  | { name: 'numNewAccounts_lte', alias?: string  } 
  | { name: 'numNewAccounts_gt', alias?: string  } 
  | { name: 'numNewAccounts_gte', alias?: string  } 
  | { name: 'gaStats', alias?: string  } 
  | { name: 'totalNumGroups', alias?: string  } 
  | { name: 'totalNumGroups_not', alias?: string  } 
  | { name: 'totalNumGroups_in', alias?: string  } 
  | { name: 'totalNumGroups_not_in', alias?: string  } 
  | { name: 'totalNumGroups_lt', alias?: string  } 
  | { name: 'totalNumGroups_lte', alias?: string  } 
  | { name: 'totalNumGroups_gt', alias?: string  } 
  | { name: 'totalNumGroups_gte', alias?: string  } 
  | { name: 'numNewGroups', alias?: string  } 
  | { name: 'numNewGroups_not', alias?: string  } 
  | { name: 'numNewGroups_in', alias?: string  } 
  | { name: 'numNewGroups_not_in', alias?: string  } 
  | { name: 'numNewGroups_lt', alias?: string  } 
  | { name: 'numNewGroups_lte', alias?: string  } 
  | { name: 'numNewGroups_gt', alias?: string  } 
  | { name: 'numNewGroups_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface gcMessageDataWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  period?: PeriodWhereInput | null
  totalNumAccounts?: number | null
  totalNumAccounts_not?: number | null
  totalNumAccounts_in?: number[]
  totalNumAccounts_not_in?: number[]
  totalNumAccounts_lt?: number | null
  totalNumAccounts_lte?: number | null
  totalNumAccounts_gt?: number | null
  totalNumAccounts_gte?: number | null
  numNewAccounts?: number | null
  numNewAccounts_not?: number | null
  numNewAccounts_in?: number[]
  numNewAccounts_not_in?: number[]
  numNewAccounts_lt?: number | null
  numNewAccounts_lte?: number | null
  numNewAccounts_gt?: number | null
  numNewAccounts_gte?: number | null
  totalNumChannelMessages?: number | null
  totalNumChannelMessages_not?: number | null
  totalNumChannelMessages_in?: number[]
  totalNumChannelMessages_not_in?: number[]
  totalNumChannelMessages_lt?: number | null
  totalNumChannelMessages_lte?: number | null
  totalNumChannelMessages_gt?: number | null
  totalNumChannelMessages_gte?: number | null
  numNewChannelMessages?: number | null
  numNewChannelMessages_not?: number | null
  numNewChannelMessages_in?: number[]
  numNewChannelMessages_not_in?: number[]
  numNewChannelMessages_lt?: number | null
  numNewChannelMessages_lte?: number | null
  numNewChannelMessages_gt?: number | null
  numNewChannelMessages_gte?: number | null
  totalNumPrivateGroupMessages?: number | null
  totalNumPrivateGroupMessages_not?: number | null
  totalNumPrivateGroupMessages_in?: number[]
  totalNumPrivateGroupMessages_not_in?: number[]
  totalNumPrivateGroupMessages_lt?: number | null
  totalNumPrivateGroupMessages_lte?: number | null
  totalNumPrivateGroupMessages_gt?: number | null
  totalNumPrivateGroupMessages_gte?: number | null
  numNewPrivateGroupMessages?: number | null
  numNewPrivateGroupMessages_not?: number | null
  numNewPrivateGroupMessages_in?: number[]
  numNewPrivateGroupMessages_not_in?: number[]
  numNewPrivateGroupMessages_lt?: number | null
  numNewPrivateGroupMessages_lte?: number | null
  numNewPrivateGroupMessages_gt?: number | null
  numNewPrivateGroupMessages_gte?: number | null
  totalNumDirectMessages?: number | null
  totalNumDirectMessages_not?: number | null
  totalNumDirectMessages_in?: number[]
  totalNumDirectMessages_not_in?: number[]
  totalNumDirectMessages_lt?: number | null
  totalNumDirectMessages_lte?: number | null
  totalNumDirectMessages_gt?: number | null
  totalNumDirectMessages_gte?: number | null
  numNewDirectMessages?: number | null
  numNewDirectMessages_not?: number | null
  numNewDirectMessages_in?: number[]
  numNewDirectMessages_not_in?: number[]
  numNewDirectMessages_lt?: number | null
  numNewDirectMessages_lte?: number | null
  numNewDirectMessages_gt?: number | null
  numNewDirectMessages_gte?: number | null
  totalNumFileUploads?: number | null
  totalNumFileUploads_not?: number | null
  totalNumFileUploads_in?: number[]
  totalNumFileUploads_not_in?: number[]
  totalNumFileUploads_lt?: number | null
  totalNumFileUploads_lte?: number | null
  totalNumFileUploads_gt?: number | null
  totalNumFileUploads_gte?: number | null
  numNewFileUploads?: number | null
  numNewFileUploads_not?: number | null
  numNewFileUploads_in?: number[]
  numNewFileUploads_not_in?: number[]
  numNewFileUploads_lt?: number | null
  numNewFileUploads_lte?: number | null
  numNewFileUploads_gt?: number | null
  numNewFileUploads_gte?: number | null
  AND?: gcMessageDataWhereInput[]
  OR?: gcMessageDataWhereInput[]
  NOT?: gcMessageDataWhereInput[]
}
export type gcMessageDataWhereInputInputObject =
  | Extract<keyof gcMessageDataWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'period', alias?: string  } 
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'totalNumAccounts_not', alias?: string  } 
  | { name: 'totalNumAccounts_in', alias?: string  } 
  | { name: 'totalNumAccounts_not_in', alias?: string  } 
  | { name: 'totalNumAccounts_lt', alias?: string  } 
  | { name: 'totalNumAccounts_lte', alias?: string  } 
  | { name: 'totalNumAccounts_gt', alias?: string  } 
  | { name: 'totalNumAccounts_gte', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'numNewAccounts_not', alias?: string  } 
  | { name: 'numNewAccounts_in', alias?: string  } 
  | { name: 'numNewAccounts_not_in', alias?: string  } 
  | { name: 'numNewAccounts_lt', alias?: string  } 
  | { name: 'numNewAccounts_lte', alias?: string  } 
  | { name: 'numNewAccounts_gt', alias?: string  } 
  | { name: 'numNewAccounts_gte', alias?: string  } 
  | { name: 'totalNumChannelMessages', alias?: string  } 
  | { name: 'totalNumChannelMessages_not', alias?: string  } 
  | { name: 'totalNumChannelMessages_in', alias?: string  } 
  | { name: 'totalNumChannelMessages_not_in', alias?: string  } 
  | { name: 'totalNumChannelMessages_lt', alias?: string  } 
  | { name: 'totalNumChannelMessages_lte', alias?: string  } 
  | { name: 'totalNumChannelMessages_gt', alias?: string  } 
  | { name: 'totalNumChannelMessages_gte', alias?: string  } 
  | { name: 'numNewChannelMessages', alias?: string  } 
  | { name: 'numNewChannelMessages_not', alias?: string  } 
  | { name: 'numNewChannelMessages_in', alias?: string  } 
  | { name: 'numNewChannelMessages_not_in', alias?: string  } 
  | { name: 'numNewChannelMessages_lt', alias?: string  } 
  | { name: 'numNewChannelMessages_lte', alias?: string  } 
  | { name: 'numNewChannelMessages_gt', alias?: string  } 
  | { name: 'numNewChannelMessages_gte', alias?: string  } 
  | { name: 'totalNumPrivateGroupMessages', alias?: string  } 
  | { name: 'totalNumPrivateGroupMessages_not', alias?: string  } 
  | { name: 'totalNumPrivateGroupMessages_in', alias?: string  } 
  | { name: 'totalNumPrivateGroupMessages_not_in', alias?: string  } 
  | { name: 'totalNumPrivateGroupMessages_lt', alias?: string  } 
  | { name: 'totalNumPrivateGroupMessages_lte', alias?: string  } 
  | { name: 'totalNumPrivateGroupMessages_gt', alias?: string  } 
  | { name: 'totalNumPrivateGroupMessages_gte', alias?: string  } 
  | { name: 'numNewPrivateGroupMessages', alias?: string  } 
  | { name: 'numNewPrivateGroupMessages_not', alias?: string  } 
  | { name: 'numNewPrivateGroupMessages_in', alias?: string  } 
  | { name: 'numNewPrivateGroupMessages_not_in', alias?: string  } 
  | { name: 'numNewPrivateGroupMessages_lt', alias?: string  } 
  | { name: 'numNewPrivateGroupMessages_lte', alias?: string  } 
  | { name: 'numNewPrivateGroupMessages_gt', alias?: string  } 
  | { name: 'numNewPrivateGroupMessages_gte', alias?: string  } 
  | { name: 'totalNumDirectMessages', alias?: string  } 
  | { name: 'totalNumDirectMessages_not', alias?: string  } 
  | { name: 'totalNumDirectMessages_in', alias?: string  } 
  | { name: 'totalNumDirectMessages_not_in', alias?: string  } 
  | { name: 'totalNumDirectMessages_lt', alias?: string  } 
  | { name: 'totalNumDirectMessages_lte', alias?: string  } 
  | { name: 'totalNumDirectMessages_gt', alias?: string  } 
  | { name: 'totalNumDirectMessages_gte', alias?: string  } 
  | { name: 'numNewDirectMessages', alias?: string  } 
  | { name: 'numNewDirectMessages_not', alias?: string  } 
  | { name: 'numNewDirectMessages_in', alias?: string  } 
  | { name: 'numNewDirectMessages_not_in', alias?: string  } 
  | { name: 'numNewDirectMessages_lt', alias?: string  } 
  | { name: 'numNewDirectMessages_lte', alias?: string  } 
  | { name: 'numNewDirectMessages_gt', alias?: string  } 
  | { name: 'numNewDirectMessages_gte', alias?: string  } 
  | { name: 'totalNumFileUploads', alias?: string  } 
  | { name: 'totalNumFileUploads_not', alias?: string  } 
  | { name: 'totalNumFileUploads_in', alias?: string  } 
  | { name: 'totalNumFileUploads_not_in', alias?: string  } 
  | { name: 'totalNumFileUploads_lt', alias?: string  } 
  | { name: 'totalNumFileUploads_lte', alias?: string  } 
  | { name: 'totalNumFileUploads_gt', alias?: string  } 
  | { name: 'totalNumFileUploads_gte', alias?: string  } 
  | { name: 'numNewFileUploads', alias?: string  } 
  | { name: 'numNewFileUploads_not', alias?: string  } 
  | { name: 'numNewFileUploads_in', alias?: string  } 
  | { name: 'numNewFileUploads_not_in', alias?: string  } 
  | { name: 'numNewFileUploads_lt', alias?: string  } 
  | { name: 'numNewFileUploads_lte', alias?: string  } 
  | { name: 'numNewFileUploads_gt', alias?: string  } 
  | { name: 'numNewFileUploads_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface gcPediaDataWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  period?: PeriodWhereInput | null
  totalNumAccounts?: number | null
  totalNumAccounts_not?: number | null
  totalNumAccounts_in?: number[]
  totalNumAccounts_not_in?: number[]
  totalNumAccounts_lt?: number | null
  totalNumAccounts_lte?: number | null
  totalNumAccounts_gt?: number | null
  totalNumAccounts_gte?: number | null
  numNewAccounts?: number | null
  numNewAccounts_not?: number | null
  numNewAccounts_in?: number[]
  numNewAccounts_not_in?: number[]
  numNewAccounts_lt?: number | null
  numNewAccounts_lte?: number | null
  numNewAccounts_gt?: number | null
  numNewAccounts_gte?: number | null
  totalNumArticles?: number | null
  totalNumArticles_not?: number | null
  totalNumArticles_in?: number[]
  totalNumArticles_not_in?: number[]
  totalNumArticles_lt?: number | null
  totalNumArticles_lte?: number | null
  totalNumArticles_gt?: number | null
  totalNumArticles_gte?: number | null
  numNewArticles?: number | null
  numNewArticles_not?: number | null
  numNewArticles_in?: number[]
  numNewArticles_not_in?: number[]
  numNewArticles_lt?: number | null
  numNewArticles_lte?: number | null
  numNewArticles_gt?: number | null
  numNewArticles_gte?: number | null
  totalNumEdits?: number | null
  totalNumEdits_not?: number | null
  totalNumEdits_in?: number[]
  totalNumEdits_not_in?: number[]
  totalNumEdits_lt?: number | null
  totalNumEdits_lte?: number | null
  totalNumEdits_gt?: number | null
  totalNumEdits_gte?: number | null
  numNewEdits?: number | null
  numNewEdits_not?: number | null
  numNewEdits_in?: number[]
  numNewEdits_not_in?: number[]
  numNewEdits_lt?: number | null
  numNewEdits_lte?: number | null
  numNewEdits_gt?: number | null
  numNewEdits_gte?: number | null
  AND?: gcPediaDataWhereInput[]
  OR?: gcPediaDataWhereInput[]
  NOT?: gcPediaDataWhereInput[]
}
export type gcPediaDataWhereInputInputObject =
  | Extract<keyof gcPediaDataWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'period', alias?: string  } 
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'totalNumAccounts_not', alias?: string  } 
  | { name: 'totalNumAccounts_in', alias?: string  } 
  | { name: 'totalNumAccounts_not_in', alias?: string  } 
  | { name: 'totalNumAccounts_lt', alias?: string  } 
  | { name: 'totalNumAccounts_lte', alias?: string  } 
  | { name: 'totalNumAccounts_gt', alias?: string  } 
  | { name: 'totalNumAccounts_gte', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'numNewAccounts_not', alias?: string  } 
  | { name: 'numNewAccounts_in', alias?: string  } 
  | { name: 'numNewAccounts_not_in', alias?: string  } 
  | { name: 'numNewAccounts_lt', alias?: string  } 
  | { name: 'numNewAccounts_lte', alias?: string  } 
  | { name: 'numNewAccounts_gt', alias?: string  } 
  | { name: 'numNewAccounts_gte', alias?: string  } 
  | { name: 'totalNumArticles', alias?: string  } 
  | { name: 'totalNumArticles_not', alias?: string  } 
  | { name: 'totalNumArticles_in', alias?: string  } 
  | { name: 'totalNumArticles_not_in', alias?: string  } 
  | { name: 'totalNumArticles_lt', alias?: string  } 
  | { name: 'totalNumArticles_lte', alias?: string  } 
  | { name: 'totalNumArticles_gt', alias?: string  } 
  | { name: 'totalNumArticles_gte', alias?: string  } 
  | { name: 'numNewArticles', alias?: string  } 
  | { name: 'numNewArticles_not', alias?: string  } 
  | { name: 'numNewArticles_in', alias?: string  } 
  | { name: 'numNewArticles_not_in', alias?: string  } 
  | { name: 'numNewArticles_lt', alias?: string  } 
  | { name: 'numNewArticles_lte', alias?: string  } 
  | { name: 'numNewArticles_gt', alias?: string  } 
  | { name: 'numNewArticles_gte', alias?: string  } 
  | { name: 'totalNumEdits', alias?: string  } 
  | { name: 'totalNumEdits_not', alias?: string  } 
  | { name: 'totalNumEdits_in', alias?: string  } 
  | { name: 'totalNumEdits_not_in', alias?: string  } 
  | { name: 'totalNumEdits_lt', alias?: string  } 
  | { name: 'totalNumEdits_lte', alias?: string  } 
  | { name: 'totalNumEdits_gt', alias?: string  } 
  | { name: 'totalNumEdits_gte', alias?: string  } 
  | { name: 'numNewEdits', alias?: string  } 
  | { name: 'numNewEdits_not', alias?: string  } 
  | { name: 'numNewEdits_in', alias?: string  } 
  | { name: 'numNewEdits_not_in', alias?: string  } 
  | { name: 'numNewEdits_lt', alias?: string  } 
  | { name: 'numNewEdits_lte', alias?: string  } 
  | { name: 'numNewEdits_gt', alias?: string  } 
  | { name: 'numNewEdits_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface gcWikiDataWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  period?: PeriodWhereInput | null
  totalNumAccounts?: number | null
  totalNumAccounts_not?: number | null
  totalNumAccounts_in?: number[]
  totalNumAccounts_not_in?: number[]
  totalNumAccounts_lt?: number | null
  totalNumAccounts_lte?: number | null
  totalNumAccounts_gt?: number | null
  totalNumAccounts_gte?: number | null
  numNewAccounts?: number | null
  numNewAccounts_not?: number | null
  numNewAccounts_in?: number[]
  numNewAccounts_not_in?: number[]
  numNewAccounts_lt?: number | null
  numNewAccounts_lte?: number | null
  numNewAccounts_gt?: number | null
  numNewAccounts_gte?: number | null
  gaStats?: gaStatsWhereInput | null
  totalNumArticles?: number | null
  totalNumArticles_not?: number | null
  totalNumArticles_in?: number[]
  totalNumArticles_not_in?: number[]
  totalNumArticles_lt?: number | null
  totalNumArticles_lte?: number | null
  totalNumArticles_gt?: number | null
  totalNumArticles_gte?: number | null
  numNewArticles?: number | null
  numNewArticles_not?: number | null
  numNewArticles_in?: number[]
  numNewArticles_not_in?: number[]
  numNewArticles_lt?: number | null
  numNewArticles_lte?: number | null
  numNewArticles_gt?: number | null
  numNewArticles_gte?: number | null
  totalNumEdits?: number | null
  totalNumEdits_not?: number | null
  totalNumEdits_in?: number[]
  totalNumEdits_not_in?: number[]
  totalNumEdits_lt?: number | null
  totalNumEdits_lte?: number | null
  totalNumEdits_gt?: number | null
  totalNumEdits_gte?: number | null
  numNewEdits?: number | null
  numNewEdits_not?: number | null
  numNewEdits_in?: number[]
  numNewEdits_not_in?: number[]
  numNewEdits_lt?: number | null
  numNewEdits_lte?: number | null
  numNewEdits_gt?: number | null
  numNewEdits_gte?: number | null
  AND?: gcWikiDataWhereInput[]
  OR?: gcWikiDataWhereInput[]
  NOT?: gcWikiDataWhereInput[]
}
export type gcWikiDataWhereInputInputObject =
  | Extract<keyof gcWikiDataWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'period', alias?: string  } 
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'totalNumAccounts_not', alias?: string  } 
  | { name: 'totalNumAccounts_in', alias?: string  } 
  | { name: 'totalNumAccounts_not_in', alias?: string  } 
  | { name: 'totalNumAccounts_lt', alias?: string  } 
  | { name: 'totalNumAccounts_lte', alias?: string  } 
  | { name: 'totalNumAccounts_gt', alias?: string  } 
  | { name: 'totalNumAccounts_gte', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'numNewAccounts_not', alias?: string  } 
  | { name: 'numNewAccounts_in', alias?: string  } 
  | { name: 'numNewAccounts_not_in', alias?: string  } 
  | { name: 'numNewAccounts_lt', alias?: string  } 
  | { name: 'numNewAccounts_lte', alias?: string  } 
  | { name: 'numNewAccounts_gt', alias?: string  } 
  | { name: 'numNewAccounts_gte', alias?: string  } 
  | { name: 'gaStats', alias?: string  } 
  | { name: 'totalNumArticles', alias?: string  } 
  | { name: 'totalNumArticles_not', alias?: string  } 
  | { name: 'totalNumArticles_in', alias?: string  } 
  | { name: 'totalNumArticles_not_in', alias?: string  } 
  | { name: 'totalNumArticles_lt', alias?: string  } 
  | { name: 'totalNumArticles_lte', alias?: string  } 
  | { name: 'totalNumArticles_gt', alias?: string  } 
  | { name: 'totalNumArticles_gte', alias?: string  } 
  | { name: 'numNewArticles', alias?: string  } 
  | { name: 'numNewArticles_not', alias?: string  } 
  | { name: 'numNewArticles_in', alias?: string  } 
  | { name: 'numNewArticles_not_in', alias?: string  } 
  | { name: 'numNewArticles_lt', alias?: string  } 
  | { name: 'numNewArticles_lte', alias?: string  } 
  | { name: 'numNewArticles_gt', alias?: string  } 
  | { name: 'numNewArticles_gte', alias?: string  } 
  | { name: 'totalNumEdits', alias?: string  } 
  | { name: 'totalNumEdits_not', alias?: string  } 
  | { name: 'totalNumEdits_in', alias?: string  } 
  | { name: 'totalNumEdits_not_in', alias?: string  } 
  | { name: 'totalNumEdits_lt', alias?: string  } 
  | { name: 'totalNumEdits_lte', alias?: string  } 
  | { name: 'totalNumEdits_gt', alias?: string  } 
  | { name: 'totalNumEdits_gte', alias?: string  } 
  | { name: 'numNewEdits', alias?: string  } 
  | { name: 'numNewEdits_not', alias?: string  } 
  | { name: 'numNewEdits_in', alias?: string  } 
  | { name: 'numNewEdits_not_in', alias?: string  } 
  | { name: 'numNewEdits_lt', alias?: string  } 
  | { name: 'numNewEdits_lte', alias?: string  } 
  | { name: 'numNewEdits_gt', alias?: string  } 
  | { name: 'numNewEdits_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface gaStatsWhereUniqueInput {
  id?: string | null
}
export type gaStatsWhereUniqueInputInputObject =
  | Extract<keyof gaStatsWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface gcAccountDataWhereUniqueInput {
  id?: string | null
}
export type gcAccountDataWhereUniqueInputInputObject =
  | Extract<keyof gcAccountDataWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface gcCollabDataWhereUniqueInput {
  id?: string | null
}
export type gcCollabDataWhereUniqueInputInputObject =
  | Extract<keyof gcCollabDataWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface gcConnexDataWhereUniqueInput {
  id?: string | null
}
export type gcConnexDataWhereUniqueInputInputObject =
  | Extract<keyof gcConnexDataWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface gcMessageDataWhereUniqueInput {
  id?: string | null
}
export type gcMessageDataWhereUniqueInputInputObject =
  | Extract<keyof gcMessageDataWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface gcPediaDataWhereUniqueInput {
  id?: string | null
}
export type gcPediaDataWhereUniqueInputInputObject =
  | Extract<keyof gcPediaDataWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface gcWikiDataWhereUniqueInput {
  id?: string | null
}
export type gcWikiDataWhereUniqueInputInputObject =
  | Extract<keyof gcWikiDataWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface PeriodCreateInput {
  id?: string | null
  month?: number
  year?: number
  gcAccount?: gcAccountDataCreateOneWithoutPeriodInput | null
  gcCollab?: gcCollabDataCreateOneWithoutPeriodInput
  gcConnex?: gcConnexDataCreateOneWithoutPeriodInput
  gcMessage?: gcMessageDataCreateOneWithoutPeriodInput
  gcPedia?: gcPediaDataCreateOneWithoutPeriodInput
  gcWiki?: gcWikiDataCreateOneWithoutPeriodInput
}
export type PeriodCreateInputInputObject =
  | Extract<keyof PeriodCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'month', alias?: string  } 
  | { name: 'year', alias?: string  } 
  | { name: 'gcAccount', alias?: string  } 
  | { name: 'gcCollab', alias?: string  } 
  | { name: 'gcConnex', alias?: string  } 
  | { name: 'gcMessage', alias?: string  } 
  | { name: 'gcPedia', alias?: string  } 
  | { name: 'gcWiki', alias?: string  } 
  
export interface gcAccountDataCreateOneWithoutPeriodInput {
  create?: gcAccountDataCreateWithoutPeriodInput | null
  connect?: gcAccountDataWhereUniqueInput | null
}
export type gcAccountDataCreateOneWithoutPeriodInputInputObject =
  | Extract<keyof gcAccountDataCreateOneWithoutPeriodInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface gcAccountDataCreateWithoutPeriodInput {
  id?: string | null
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
}
export type gcAccountDataCreateWithoutPeriodInputInputObject =
  | Extract<keyof gcAccountDataCreateWithoutPeriodInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  
export interface gcCollabDataCreateOneWithoutPeriodInput {
  create?: gcCollabDataCreateWithoutPeriodInput | null
  connect?: gcCollabDataWhereUniqueInput | null
}
export type gcCollabDataCreateOneWithoutPeriodInputInputObject =
  | Extract<keyof gcCollabDataCreateOneWithoutPeriodInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface gcCollabDataCreateWithoutPeriodInput {
  id?: string | null
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  gaStats?: gaStatsCreateOneInput | null
  totalNumGroups?: number | null
  numNewGroups?: number | null
}
export type gcCollabDataCreateWithoutPeriodInputInputObject =
  | Extract<keyof gcCollabDataCreateWithoutPeriodInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'gaStats', alias?: string  } 
  | { name: 'totalNumGroups', alias?: string  } 
  | { name: 'numNewGroups', alias?: string  } 
  
export interface gaStatsCreateOneInput {
  create?: gaStatsCreateInput | null
  connect?: gaStatsWhereUniqueInput | null
}
export type gaStatsCreateOneInputInputObject =
  | Extract<keyof gaStatsCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface gaStatsCreateInput {
  id?: string | null
  numSessions?: number | null
  avgPageviewsPerSession?: number | null
  avgSessionDuration?: number | null
  avgPageLoadTime?: number | null
  bounceRate?: number | null
}
export type gaStatsCreateInputInputObject =
  | Extract<keyof gaStatsCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'numSessions', alias?: string  } 
  | { name: 'avgPageviewsPerSession', alias?: string  } 
  | { name: 'avgSessionDuration', alias?: string  } 
  | { name: 'avgPageLoadTime', alias?: string  } 
  | { name: 'bounceRate', alias?: string  } 
  
export interface gcConnexDataCreateOneWithoutPeriodInput {
  create?: gcConnexDataCreateWithoutPeriodInput | null
  connect?: gcConnexDataWhereUniqueInput | null
}
export type gcConnexDataCreateOneWithoutPeriodInputInputObject =
  | Extract<keyof gcConnexDataCreateOneWithoutPeriodInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface gcConnexDataCreateWithoutPeriodInput {
  id?: string | null
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  gaStats?: gaStatsCreateOneInput | null
  totalNumGroups?: number | null
  numNewGroups?: number | null
}
export type gcConnexDataCreateWithoutPeriodInputInputObject =
  | Extract<keyof gcConnexDataCreateWithoutPeriodInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'gaStats', alias?: string  } 
  | { name: 'totalNumGroups', alias?: string  } 
  | { name: 'numNewGroups', alias?: string  } 
  
export interface gcMessageDataCreateOneWithoutPeriodInput {
  create?: gcMessageDataCreateWithoutPeriodInput | null
  connect?: gcMessageDataWhereUniqueInput | null
}
export type gcMessageDataCreateOneWithoutPeriodInputInputObject =
  | Extract<keyof gcMessageDataCreateOneWithoutPeriodInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface gcMessageDataCreateWithoutPeriodInput {
  id?: string | null
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  totalNumChannelMessages?: number | null
  numNewChannelMessages?: number | null
  totalNumPrivateGroupMessages?: number | null
  numNewPrivateGroupMessages?: number | null
  totalNumDirectMessages?: number | null
  numNewDirectMessages?: number | null
  totalNumFileUploads?: number | null
  numNewFileUploads?: number | null
}
export type gcMessageDataCreateWithoutPeriodInputInputObject =
  | Extract<keyof gcMessageDataCreateWithoutPeriodInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'totalNumChannelMessages', alias?: string  } 
  | { name: 'numNewChannelMessages', alias?: string  } 
  | { name: 'totalNumPrivateGroupMessages', alias?: string  } 
  | { name: 'numNewPrivateGroupMessages', alias?: string  } 
  | { name: 'totalNumDirectMessages', alias?: string  } 
  | { name: 'numNewDirectMessages', alias?: string  } 
  | { name: 'totalNumFileUploads', alias?: string  } 
  | { name: 'numNewFileUploads', alias?: string  } 
  
export interface gcPediaDataCreateOneWithoutPeriodInput {
  create?: gcPediaDataCreateWithoutPeriodInput | null
  connect?: gcPediaDataWhereUniqueInput | null
}
export type gcPediaDataCreateOneWithoutPeriodInputInputObject =
  | Extract<keyof gcPediaDataCreateOneWithoutPeriodInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface gcPediaDataCreateWithoutPeriodInput {
  id?: string | null
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  totalNumArticles?: number | null
  numNewArticles?: number | null
  totalNumEdits?: number | null
  numNewEdits?: number | null
}
export type gcPediaDataCreateWithoutPeriodInputInputObject =
  | Extract<keyof gcPediaDataCreateWithoutPeriodInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'totalNumArticles', alias?: string  } 
  | { name: 'numNewArticles', alias?: string  } 
  | { name: 'totalNumEdits', alias?: string  } 
  | { name: 'numNewEdits', alias?: string  } 
  
export interface gcWikiDataCreateOneWithoutPeriodInput {
  create?: gcWikiDataCreateWithoutPeriodInput | null
  connect?: gcWikiDataWhereUniqueInput | null
}
export type gcWikiDataCreateOneWithoutPeriodInputInputObject =
  | Extract<keyof gcWikiDataCreateOneWithoutPeriodInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface gcWikiDataCreateWithoutPeriodInput {
  id?: string | null
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  gaStats?: gaStatsCreateOneInput | null
  totalNumArticles?: number | null
  numNewArticles?: number | null
  totalNumEdits?: number | null
  numNewEdits?: number | null
}
export type gcWikiDataCreateWithoutPeriodInputInputObject =
  | Extract<keyof gcWikiDataCreateWithoutPeriodInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'gaStats', alias?: string  } 
  | { name: 'totalNumArticles', alias?: string  } 
  | { name: 'numNewArticles', alias?: string  } 
  | { name: 'totalNumEdits', alias?: string  } 
  | { name: 'numNewEdits', alias?: string  } 
  
export interface PeriodUpdateInput {
  month?: number | null
  year?: number | null
  gcAccount?: gcAccountDataUpdateOneWithoutPeriodInput | null
  gcCollab?: gcCollabDataUpdateOneRequiredWithoutPeriodInput | null
  gcConnex?: gcConnexDataUpdateOneRequiredWithoutPeriodInput | null
  gcMessage?: gcMessageDataUpdateOneRequiredWithoutPeriodInput | null
  gcPedia?: gcPediaDataUpdateOneRequiredWithoutPeriodInput | null
  gcWiki?: gcWikiDataUpdateOneRequiredWithoutPeriodInput | null
}
export type PeriodUpdateInputInputObject =
  | Extract<keyof PeriodUpdateInput, string>
  | { name: 'month', alias?: string  } 
  | { name: 'year', alias?: string  } 
  | { name: 'gcAccount', alias?: string  } 
  | { name: 'gcCollab', alias?: string  } 
  | { name: 'gcConnex', alias?: string  } 
  | { name: 'gcMessage', alias?: string  } 
  | { name: 'gcPedia', alias?: string  } 
  | { name: 'gcWiki', alias?: string  } 
  
export interface gcAccountDataUpdateOneWithoutPeriodInput {
  create?: gcAccountDataCreateWithoutPeriodInput | null
  update?: gcAccountDataUpdateWithoutPeriodDataInput | null
  upsert?: gcAccountDataUpsertWithoutPeriodInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: gcAccountDataWhereUniqueInput | null
}
export type gcAccountDataUpdateOneWithoutPeriodInputInputObject =
  | Extract<keyof gcAccountDataUpdateOneWithoutPeriodInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface gcAccountDataUpdateWithoutPeriodDataInput {
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
}
export type gcAccountDataUpdateWithoutPeriodDataInputInputObject =
  | Extract<keyof gcAccountDataUpdateWithoutPeriodDataInput, string>
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  
export interface gcAccountDataUpsertWithoutPeriodInput {
  update?: gcAccountDataUpdateWithoutPeriodDataInput
  create?: gcAccountDataCreateWithoutPeriodInput
}
export type gcAccountDataUpsertWithoutPeriodInputInputObject =
  | Extract<keyof gcAccountDataUpsertWithoutPeriodInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface gcCollabDataUpdateOneRequiredWithoutPeriodInput {
  create?: gcCollabDataCreateWithoutPeriodInput | null
  update?: gcCollabDataUpdateWithoutPeriodDataInput | null
  upsert?: gcCollabDataUpsertWithoutPeriodInput | null
  connect?: gcCollabDataWhereUniqueInput | null
}
export type gcCollabDataUpdateOneRequiredWithoutPeriodInputInputObject =
  | Extract<keyof gcCollabDataUpdateOneRequiredWithoutPeriodInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface gcCollabDataUpdateWithoutPeriodDataInput {
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  gaStats?: gaStatsUpdateOneInput | null
  totalNumGroups?: number | null
  numNewGroups?: number | null
}
export type gcCollabDataUpdateWithoutPeriodDataInputInputObject =
  | Extract<keyof gcCollabDataUpdateWithoutPeriodDataInput, string>
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'gaStats', alias?: string  } 
  | { name: 'totalNumGroups', alias?: string  } 
  | { name: 'numNewGroups', alias?: string  } 
  
export interface gaStatsUpdateOneInput {
  create?: gaStatsCreateInput | null
  update?: gaStatsUpdateDataInput | null
  upsert?: gaStatsUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: gaStatsWhereUniqueInput | null
}
export type gaStatsUpdateOneInputInputObject =
  | Extract<keyof gaStatsUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface gaStatsUpdateDataInput {
  numSessions?: number | null
  avgPageviewsPerSession?: number | null
  avgSessionDuration?: number | null
  avgPageLoadTime?: number | null
  bounceRate?: number | null
}
export type gaStatsUpdateDataInputInputObject =
  | Extract<keyof gaStatsUpdateDataInput, string>
  | { name: 'numSessions', alias?: string  } 
  | { name: 'avgPageviewsPerSession', alias?: string  } 
  | { name: 'avgSessionDuration', alias?: string  } 
  | { name: 'avgPageLoadTime', alias?: string  } 
  | { name: 'bounceRate', alias?: string  } 
  
export interface gaStatsUpsertNestedInput {
  update?: gaStatsUpdateDataInput
  create?: gaStatsCreateInput
}
export type gaStatsUpsertNestedInputInputObject =
  | Extract<keyof gaStatsUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface gcCollabDataUpsertWithoutPeriodInput {
  update?: gcCollabDataUpdateWithoutPeriodDataInput
  create?: gcCollabDataCreateWithoutPeriodInput
}
export type gcCollabDataUpsertWithoutPeriodInputInputObject =
  | Extract<keyof gcCollabDataUpsertWithoutPeriodInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface gcConnexDataUpdateOneRequiredWithoutPeriodInput {
  create?: gcConnexDataCreateWithoutPeriodInput | null
  update?: gcConnexDataUpdateWithoutPeriodDataInput | null
  upsert?: gcConnexDataUpsertWithoutPeriodInput | null
  connect?: gcConnexDataWhereUniqueInput | null
}
export type gcConnexDataUpdateOneRequiredWithoutPeriodInputInputObject =
  | Extract<keyof gcConnexDataUpdateOneRequiredWithoutPeriodInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface gcConnexDataUpdateWithoutPeriodDataInput {
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  gaStats?: gaStatsUpdateOneInput | null
  totalNumGroups?: number | null
  numNewGroups?: number | null
}
export type gcConnexDataUpdateWithoutPeriodDataInputInputObject =
  | Extract<keyof gcConnexDataUpdateWithoutPeriodDataInput, string>
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'gaStats', alias?: string  } 
  | { name: 'totalNumGroups', alias?: string  } 
  | { name: 'numNewGroups', alias?: string  } 
  
export interface gcConnexDataUpsertWithoutPeriodInput {
  update?: gcConnexDataUpdateWithoutPeriodDataInput
  create?: gcConnexDataCreateWithoutPeriodInput
}
export type gcConnexDataUpsertWithoutPeriodInputInputObject =
  | Extract<keyof gcConnexDataUpsertWithoutPeriodInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface gcMessageDataUpdateOneRequiredWithoutPeriodInput {
  create?: gcMessageDataCreateWithoutPeriodInput | null
  update?: gcMessageDataUpdateWithoutPeriodDataInput | null
  upsert?: gcMessageDataUpsertWithoutPeriodInput | null
  connect?: gcMessageDataWhereUniqueInput | null
}
export type gcMessageDataUpdateOneRequiredWithoutPeriodInputInputObject =
  | Extract<keyof gcMessageDataUpdateOneRequiredWithoutPeriodInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface gcMessageDataUpdateWithoutPeriodDataInput {
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  totalNumChannelMessages?: number | null
  numNewChannelMessages?: number | null
  totalNumPrivateGroupMessages?: number | null
  numNewPrivateGroupMessages?: number | null
  totalNumDirectMessages?: number | null
  numNewDirectMessages?: number | null
  totalNumFileUploads?: number | null
  numNewFileUploads?: number | null
}
export type gcMessageDataUpdateWithoutPeriodDataInputInputObject =
  | Extract<keyof gcMessageDataUpdateWithoutPeriodDataInput, string>
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'totalNumChannelMessages', alias?: string  } 
  | { name: 'numNewChannelMessages', alias?: string  } 
  | { name: 'totalNumPrivateGroupMessages', alias?: string  } 
  | { name: 'numNewPrivateGroupMessages', alias?: string  } 
  | { name: 'totalNumDirectMessages', alias?: string  } 
  | { name: 'numNewDirectMessages', alias?: string  } 
  | { name: 'totalNumFileUploads', alias?: string  } 
  | { name: 'numNewFileUploads', alias?: string  } 
  
export interface gcMessageDataUpsertWithoutPeriodInput {
  update?: gcMessageDataUpdateWithoutPeriodDataInput
  create?: gcMessageDataCreateWithoutPeriodInput
}
export type gcMessageDataUpsertWithoutPeriodInputInputObject =
  | Extract<keyof gcMessageDataUpsertWithoutPeriodInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface gcPediaDataUpdateOneRequiredWithoutPeriodInput {
  create?: gcPediaDataCreateWithoutPeriodInput | null
  update?: gcPediaDataUpdateWithoutPeriodDataInput | null
  upsert?: gcPediaDataUpsertWithoutPeriodInput | null
  connect?: gcPediaDataWhereUniqueInput | null
}
export type gcPediaDataUpdateOneRequiredWithoutPeriodInputInputObject =
  | Extract<keyof gcPediaDataUpdateOneRequiredWithoutPeriodInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface gcPediaDataUpdateWithoutPeriodDataInput {
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  totalNumArticles?: number | null
  numNewArticles?: number | null
  totalNumEdits?: number | null
  numNewEdits?: number | null
}
export type gcPediaDataUpdateWithoutPeriodDataInputInputObject =
  | Extract<keyof gcPediaDataUpdateWithoutPeriodDataInput, string>
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'totalNumArticles', alias?: string  } 
  | { name: 'numNewArticles', alias?: string  } 
  | { name: 'totalNumEdits', alias?: string  } 
  | { name: 'numNewEdits', alias?: string  } 
  
export interface gcPediaDataUpsertWithoutPeriodInput {
  update?: gcPediaDataUpdateWithoutPeriodDataInput
  create?: gcPediaDataCreateWithoutPeriodInput
}
export type gcPediaDataUpsertWithoutPeriodInputInputObject =
  | Extract<keyof gcPediaDataUpsertWithoutPeriodInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface gcWikiDataUpdateOneRequiredWithoutPeriodInput {
  create?: gcWikiDataCreateWithoutPeriodInput | null
  update?: gcWikiDataUpdateWithoutPeriodDataInput | null
  upsert?: gcWikiDataUpsertWithoutPeriodInput | null
  connect?: gcWikiDataWhereUniqueInput | null
}
export type gcWikiDataUpdateOneRequiredWithoutPeriodInputInputObject =
  | Extract<keyof gcWikiDataUpdateOneRequiredWithoutPeriodInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface gcWikiDataUpdateWithoutPeriodDataInput {
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  gaStats?: gaStatsUpdateOneInput | null
  totalNumArticles?: number | null
  numNewArticles?: number | null
  totalNumEdits?: number | null
  numNewEdits?: number | null
}
export type gcWikiDataUpdateWithoutPeriodDataInputInputObject =
  | Extract<keyof gcWikiDataUpdateWithoutPeriodDataInput, string>
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'gaStats', alias?: string  } 
  | { name: 'totalNumArticles', alias?: string  } 
  | { name: 'numNewArticles', alias?: string  } 
  | { name: 'totalNumEdits', alias?: string  } 
  | { name: 'numNewEdits', alias?: string  } 
  
export interface gcWikiDataUpsertWithoutPeriodInput {
  update?: gcWikiDataUpdateWithoutPeriodDataInput
  create?: gcWikiDataCreateWithoutPeriodInput
}
export type gcWikiDataUpsertWithoutPeriodInputInputObject =
  | Extract<keyof gcWikiDataUpsertWithoutPeriodInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PeriodUpdateManyMutationInput {
  month?: number | null
  year?: number | null
}
export type PeriodUpdateManyMutationInputInputObject =
  | Extract<keyof PeriodUpdateManyMutationInput, string>
  | { name: 'month', alias?: string  } 
  | { name: 'year', alias?: string  } 
  
export interface gaStatsUpdateInput {
  numSessions?: number | null
  avgPageviewsPerSession?: number | null
  avgSessionDuration?: number | null
  avgPageLoadTime?: number | null
  bounceRate?: number | null
}
export type gaStatsUpdateInputInputObject =
  | Extract<keyof gaStatsUpdateInput, string>
  | { name: 'numSessions', alias?: string  } 
  | { name: 'avgPageviewsPerSession', alias?: string  } 
  | { name: 'avgSessionDuration', alias?: string  } 
  | { name: 'avgPageLoadTime', alias?: string  } 
  | { name: 'bounceRate', alias?: string  } 
  
export interface gaStatsUpdateManyMutationInput {
  numSessions?: number | null
  avgPageviewsPerSession?: number | null
  avgSessionDuration?: number | null
  avgPageLoadTime?: number | null
  bounceRate?: number | null
}
export type gaStatsUpdateManyMutationInputInputObject =
  | Extract<keyof gaStatsUpdateManyMutationInput, string>
  | { name: 'numSessions', alias?: string  } 
  | { name: 'avgPageviewsPerSession', alias?: string  } 
  | { name: 'avgSessionDuration', alias?: string  } 
  | { name: 'avgPageLoadTime', alias?: string  } 
  | { name: 'bounceRate', alias?: string  } 
  
export interface gcAccountDataCreateInput {
  id?: string | null
  period?: PeriodCreateOneWithoutGcAccountInput
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
}
export type gcAccountDataCreateInputInputObject =
  | Extract<keyof gcAccountDataCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'period', alias?: string  } 
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  
export interface PeriodCreateOneWithoutGcAccountInput {
  create?: PeriodCreateWithoutGcAccountInput | null
  connect?: PeriodWhereUniqueInput | null
}
export type PeriodCreateOneWithoutGcAccountInputInputObject =
  | Extract<keyof PeriodCreateOneWithoutGcAccountInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PeriodCreateWithoutGcAccountInput {
  id?: string | null
  month?: number
  year?: number
  gcCollab?: gcCollabDataCreateOneWithoutPeriodInput
  gcConnex?: gcConnexDataCreateOneWithoutPeriodInput
  gcMessage?: gcMessageDataCreateOneWithoutPeriodInput
  gcPedia?: gcPediaDataCreateOneWithoutPeriodInput
  gcWiki?: gcWikiDataCreateOneWithoutPeriodInput
}
export type PeriodCreateWithoutGcAccountInputInputObject =
  | Extract<keyof PeriodCreateWithoutGcAccountInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'month', alias?: string  } 
  | { name: 'year', alias?: string  } 
  | { name: 'gcCollab', alias?: string  } 
  | { name: 'gcConnex', alias?: string  } 
  | { name: 'gcMessage', alias?: string  } 
  | { name: 'gcPedia', alias?: string  } 
  | { name: 'gcWiki', alias?: string  } 
  
export interface gcAccountDataUpdateInput {
  period?: PeriodUpdateOneRequiredWithoutGcAccountInput | null
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
}
export type gcAccountDataUpdateInputInputObject =
  | Extract<keyof gcAccountDataUpdateInput, string>
  | { name: 'period', alias?: string  } 
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  
export interface PeriodUpdateOneRequiredWithoutGcAccountInput {
  create?: PeriodCreateWithoutGcAccountInput | null
  update?: PeriodUpdateWithoutGcAccountDataInput | null
  upsert?: PeriodUpsertWithoutGcAccountInput | null
  connect?: PeriodWhereUniqueInput | null
}
export type PeriodUpdateOneRequiredWithoutGcAccountInputInputObject =
  | Extract<keyof PeriodUpdateOneRequiredWithoutGcAccountInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PeriodUpdateWithoutGcAccountDataInput {
  month?: number | null
  year?: number | null
  gcCollab?: gcCollabDataUpdateOneRequiredWithoutPeriodInput | null
  gcConnex?: gcConnexDataUpdateOneRequiredWithoutPeriodInput | null
  gcMessage?: gcMessageDataUpdateOneRequiredWithoutPeriodInput | null
  gcPedia?: gcPediaDataUpdateOneRequiredWithoutPeriodInput | null
  gcWiki?: gcWikiDataUpdateOneRequiredWithoutPeriodInput | null
}
export type PeriodUpdateWithoutGcAccountDataInputInputObject =
  | Extract<keyof PeriodUpdateWithoutGcAccountDataInput, string>
  | { name: 'month', alias?: string  } 
  | { name: 'year', alias?: string  } 
  | { name: 'gcCollab', alias?: string  } 
  | { name: 'gcConnex', alias?: string  } 
  | { name: 'gcMessage', alias?: string  } 
  | { name: 'gcPedia', alias?: string  } 
  | { name: 'gcWiki', alias?: string  } 
  
export interface PeriodUpsertWithoutGcAccountInput {
  update?: PeriodUpdateWithoutGcAccountDataInput
  create?: PeriodCreateWithoutGcAccountInput
}
export type PeriodUpsertWithoutGcAccountInputInputObject =
  | Extract<keyof PeriodUpsertWithoutGcAccountInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface gcAccountDataUpdateManyMutationInput {
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
}
export type gcAccountDataUpdateManyMutationInputInputObject =
  | Extract<keyof gcAccountDataUpdateManyMutationInput, string>
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  
export interface gcCollabDataCreateInput {
  id?: string | null
  period?: PeriodCreateOneWithoutGcCollabInput
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  gaStats?: gaStatsCreateOneInput | null
  totalNumGroups?: number | null
  numNewGroups?: number | null
}
export type gcCollabDataCreateInputInputObject =
  | Extract<keyof gcCollabDataCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'period', alias?: string  } 
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'gaStats', alias?: string  } 
  | { name: 'totalNumGroups', alias?: string  } 
  | { name: 'numNewGroups', alias?: string  } 
  
export interface PeriodCreateOneWithoutGcCollabInput {
  create?: PeriodCreateWithoutGcCollabInput | null
  connect?: PeriodWhereUniqueInput | null
}
export type PeriodCreateOneWithoutGcCollabInputInputObject =
  | Extract<keyof PeriodCreateOneWithoutGcCollabInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PeriodCreateWithoutGcCollabInput {
  id?: string | null
  month?: number
  year?: number
  gcAccount?: gcAccountDataCreateOneWithoutPeriodInput | null
  gcConnex?: gcConnexDataCreateOneWithoutPeriodInput
  gcMessage?: gcMessageDataCreateOneWithoutPeriodInput
  gcPedia?: gcPediaDataCreateOneWithoutPeriodInput
  gcWiki?: gcWikiDataCreateOneWithoutPeriodInput
}
export type PeriodCreateWithoutGcCollabInputInputObject =
  | Extract<keyof PeriodCreateWithoutGcCollabInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'month', alias?: string  } 
  | { name: 'year', alias?: string  } 
  | { name: 'gcAccount', alias?: string  } 
  | { name: 'gcConnex', alias?: string  } 
  | { name: 'gcMessage', alias?: string  } 
  | { name: 'gcPedia', alias?: string  } 
  | { name: 'gcWiki', alias?: string  } 
  
export interface gcCollabDataUpdateInput {
  period?: PeriodUpdateOneRequiredWithoutGcCollabInput | null
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  gaStats?: gaStatsUpdateOneInput | null
  totalNumGroups?: number | null
  numNewGroups?: number | null
}
export type gcCollabDataUpdateInputInputObject =
  | Extract<keyof gcCollabDataUpdateInput, string>
  | { name: 'period', alias?: string  } 
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'gaStats', alias?: string  } 
  | { name: 'totalNumGroups', alias?: string  } 
  | { name: 'numNewGroups', alias?: string  } 
  
export interface PeriodUpdateOneRequiredWithoutGcCollabInput {
  create?: PeriodCreateWithoutGcCollabInput | null
  update?: PeriodUpdateWithoutGcCollabDataInput | null
  upsert?: PeriodUpsertWithoutGcCollabInput | null
  connect?: PeriodWhereUniqueInput | null
}
export type PeriodUpdateOneRequiredWithoutGcCollabInputInputObject =
  | Extract<keyof PeriodUpdateOneRequiredWithoutGcCollabInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PeriodUpdateWithoutGcCollabDataInput {
  month?: number | null
  year?: number | null
  gcAccount?: gcAccountDataUpdateOneWithoutPeriodInput | null
  gcConnex?: gcConnexDataUpdateOneRequiredWithoutPeriodInput | null
  gcMessage?: gcMessageDataUpdateOneRequiredWithoutPeriodInput | null
  gcPedia?: gcPediaDataUpdateOneRequiredWithoutPeriodInput | null
  gcWiki?: gcWikiDataUpdateOneRequiredWithoutPeriodInput | null
}
export type PeriodUpdateWithoutGcCollabDataInputInputObject =
  | Extract<keyof PeriodUpdateWithoutGcCollabDataInput, string>
  | { name: 'month', alias?: string  } 
  | { name: 'year', alias?: string  } 
  | { name: 'gcAccount', alias?: string  } 
  | { name: 'gcConnex', alias?: string  } 
  | { name: 'gcMessage', alias?: string  } 
  | { name: 'gcPedia', alias?: string  } 
  | { name: 'gcWiki', alias?: string  } 
  
export interface PeriodUpsertWithoutGcCollabInput {
  update?: PeriodUpdateWithoutGcCollabDataInput
  create?: PeriodCreateWithoutGcCollabInput
}
export type PeriodUpsertWithoutGcCollabInputInputObject =
  | Extract<keyof PeriodUpsertWithoutGcCollabInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface gcCollabDataUpdateManyMutationInput {
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  totalNumGroups?: number | null
  numNewGroups?: number | null
}
export type gcCollabDataUpdateManyMutationInputInputObject =
  | Extract<keyof gcCollabDataUpdateManyMutationInput, string>
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'totalNumGroups', alias?: string  } 
  | { name: 'numNewGroups', alias?: string  } 
  
export interface gcConnexDataCreateInput {
  id?: string | null
  period?: PeriodCreateOneWithoutGcConnexInput
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  gaStats?: gaStatsCreateOneInput | null
  totalNumGroups?: number | null
  numNewGroups?: number | null
}
export type gcConnexDataCreateInputInputObject =
  | Extract<keyof gcConnexDataCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'period', alias?: string  } 
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'gaStats', alias?: string  } 
  | { name: 'totalNumGroups', alias?: string  } 
  | { name: 'numNewGroups', alias?: string  } 
  
export interface PeriodCreateOneWithoutGcConnexInput {
  create?: PeriodCreateWithoutGcConnexInput | null
  connect?: PeriodWhereUniqueInput | null
}
export type PeriodCreateOneWithoutGcConnexInputInputObject =
  | Extract<keyof PeriodCreateOneWithoutGcConnexInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PeriodCreateWithoutGcConnexInput {
  id?: string | null
  month?: number
  year?: number
  gcAccount?: gcAccountDataCreateOneWithoutPeriodInput | null
  gcCollab?: gcCollabDataCreateOneWithoutPeriodInput
  gcMessage?: gcMessageDataCreateOneWithoutPeriodInput
  gcPedia?: gcPediaDataCreateOneWithoutPeriodInput
  gcWiki?: gcWikiDataCreateOneWithoutPeriodInput
}
export type PeriodCreateWithoutGcConnexInputInputObject =
  | Extract<keyof PeriodCreateWithoutGcConnexInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'month', alias?: string  } 
  | { name: 'year', alias?: string  } 
  | { name: 'gcAccount', alias?: string  } 
  | { name: 'gcCollab', alias?: string  } 
  | { name: 'gcMessage', alias?: string  } 
  | { name: 'gcPedia', alias?: string  } 
  | { name: 'gcWiki', alias?: string  } 
  
export interface gcConnexDataUpdateInput {
  period?: PeriodUpdateOneRequiredWithoutGcConnexInput | null
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  gaStats?: gaStatsUpdateOneInput | null
  totalNumGroups?: number | null
  numNewGroups?: number | null
}
export type gcConnexDataUpdateInputInputObject =
  | Extract<keyof gcConnexDataUpdateInput, string>
  | { name: 'period', alias?: string  } 
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'gaStats', alias?: string  } 
  | { name: 'totalNumGroups', alias?: string  } 
  | { name: 'numNewGroups', alias?: string  } 
  
export interface PeriodUpdateOneRequiredWithoutGcConnexInput {
  create?: PeriodCreateWithoutGcConnexInput | null
  update?: PeriodUpdateWithoutGcConnexDataInput | null
  upsert?: PeriodUpsertWithoutGcConnexInput | null
  connect?: PeriodWhereUniqueInput | null
}
export type PeriodUpdateOneRequiredWithoutGcConnexInputInputObject =
  | Extract<keyof PeriodUpdateOneRequiredWithoutGcConnexInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PeriodUpdateWithoutGcConnexDataInput {
  month?: number | null
  year?: number | null
  gcAccount?: gcAccountDataUpdateOneWithoutPeriodInput | null
  gcCollab?: gcCollabDataUpdateOneRequiredWithoutPeriodInput | null
  gcMessage?: gcMessageDataUpdateOneRequiredWithoutPeriodInput | null
  gcPedia?: gcPediaDataUpdateOneRequiredWithoutPeriodInput | null
  gcWiki?: gcWikiDataUpdateOneRequiredWithoutPeriodInput | null
}
export type PeriodUpdateWithoutGcConnexDataInputInputObject =
  | Extract<keyof PeriodUpdateWithoutGcConnexDataInput, string>
  | { name: 'month', alias?: string  } 
  | { name: 'year', alias?: string  } 
  | { name: 'gcAccount', alias?: string  } 
  | { name: 'gcCollab', alias?: string  } 
  | { name: 'gcMessage', alias?: string  } 
  | { name: 'gcPedia', alias?: string  } 
  | { name: 'gcWiki', alias?: string  } 
  
export interface PeriodUpsertWithoutGcConnexInput {
  update?: PeriodUpdateWithoutGcConnexDataInput
  create?: PeriodCreateWithoutGcConnexInput
}
export type PeriodUpsertWithoutGcConnexInputInputObject =
  | Extract<keyof PeriodUpsertWithoutGcConnexInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface gcConnexDataUpdateManyMutationInput {
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  totalNumGroups?: number | null
  numNewGroups?: number | null
}
export type gcConnexDataUpdateManyMutationInputInputObject =
  | Extract<keyof gcConnexDataUpdateManyMutationInput, string>
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'totalNumGroups', alias?: string  } 
  | { name: 'numNewGroups', alias?: string  } 
  
export interface gcMessageDataCreateInput {
  id?: string | null
  period?: PeriodCreateOneWithoutGcMessageInput
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  totalNumChannelMessages?: number | null
  numNewChannelMessages?: number | null
  totalNumPrivateGroupMessages?: number | null
  numNewPrivateGroupMessages?: number | null
  totalNumDirectMessages?: number | null
  numNewDirectMessages?: number | null
  totalNumFileUploads?: number | null
  numNewFileUploads?: number | null
}
export type gcMessageDataCreateInputInputObject =
  | Extract<keyof gcMessageDataCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'period', alias?: string  } 
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'totalNumChannelMessages', alias?: string  } 
  | { name: 'numNewChannelMessages', alias?: string  } 
  | { name: 'totalNumPrivateGroupMessages', alias?: string  } 
  | { name: 'numNewPrivateGroupMessages', alias?: string  } 
  | { name: 'totalNumDirectMessages', alias?: string  } 
  | { name: 'numNewDirectMessages', alias?: string  } 
  | { name: 'totalNumFileUploads', alias?: string  } 
  | { name: 'numNewFileUploads', alias?: string  } 
  
export interface PeriodCreateOneWithoutGcMessageInput {
  create?: PeriodCreateWithoutGcMessageInput | null
  connect?: PeriodWhereUniqueInput | null
}
export type PeriodCreateOneWithoutGcMessageInputInputObject =
  | Extract<keyof PeriodCreateOneWithoutGcMessageInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PeriodCreateWithoutGcMessageInput {
  id?: string | null
  month?: number
  year?: number
  gcAccount?: gcAccountDataCreateOneWithoutPeriodInput | null
  gcCollab?: gcCollabDataCreateOneWithoutPeriodInput
  gcConnex?: gcConnexDataCreateOneWithoutPeriodInput
  gcPedia?: gcPediaDataCreateOneWithoutPeriodInput
  gcWiki?: gcWikiDataCreateOneWithoutPeriodInput
}
export type PeriodCreateWithoutGcMessageInputInputObject =
  | Extract<keyof PeriodCreateWithoutGcMessageInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'month', alias?: string  } 
  | { name: 'year', alias?: string  } 
  | { name: 'gcAccount', alias?: string  } 
  | { name: 'gcCollab', alias?: string  } 
  | { name: 'gcConnex', alias?: string  } 
  | { name: 'gcPedia', alias?: string  } 
  | { name: 'gcWiki', alias?: string  } 
  
export interface gcMessageDataUpdateInput {
  period?: PeriodUpdateOneRequiredWithoutGcMessageInput | null
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  totalNumChannelMessages?: number | null
  numNewChannelMessages?: number | null
  totalNumPrivateGroupMessages?: number | null
  numNewPrivateGroupMessages?: number | null
  totalNumDirectMessages?: number | null
  numNewDirectMessages?: number | null
  totalNumFileUploads?: number | null
  numNewFileUploads?: number | null
}
export type gcMessageDataUpdateInputInputObject =
  | Extract<keyof gcMessageDataUpdateInput, string>
  | { name: 'period', alias?: string  } 
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'totalNumChannelMessages', alias?: string  } 
  | { name: 'numNewChannelMessages', alias?: string  } 
  | { name: 'totalNumPrivateGroupMessages', alias?: string  } 
  | { name: 'numNewPrivateGroupMessages', alias?: string  } 
  | { name: 'totalNumDirectMessages', alias?: string  } 
  | { name: 'numNewDirectMessages', alias?: string  } 
  | { name: 'totalNumFileUploads', alias?: string  } 
  | { name: 'numNewFileUploads', alias?: string  } 
  
export interface PeriodUpdateOneRequiredWithoutGcMessageInput {
  create?: PeriodCreateWithoutGcMessageInput | null
  update?: PeriodUpdateWithoutGcMessageDataInput | null
  upsert?: PeriodUpsertWithoutGcMessageInput | null
  connect?: PeriodWhereUniqueInput | null
}
export type PeriodUpdateOneRequiredWithoutGcMessageInputInputObject =
  | Extract<keyof PeriodUpdateOneRequiredWithoutGcMessageInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PeriodUpdateWithoutGcMessageDataInput {
  month?: number | null
  year?: number | null
  gcAccount?: gcAccountDataUpdateOneWithoutPeriodInput | null
  gcCollab?: gcCollabDataUpdateOneRequiredWithoutPeriodInput | null
  gcConnex?: gcConnexDataUpdateOneRequiredWithoutPeriodInput | null
  gcPedia?: gcPediaDataUpdateOneRequiredWithoutPeriodInput | null
  gcWiki?: gcWikiDataUpdateOneRequiredWithoutPeriodInput | null
}
export type PeriodUpdateWithoutGcMessageDataInputInputObject =
  | Extract<keyof PeriodUpdateWithoutGcMessageDataInput, string>
  | { name: 'month', alias?: string  } 
  | { name: 'year', alias?: string  } 
  | { name: 'gcAccount', alias?: string  } 
  | { name: 'gcCollab', alias?: string  } 
  | { name: 'gcConnex', alias?: string  } 
  | { name: 'gcPedia', alias?: string  } 
  | { name: 'gcWiki', alias?: string  } 
  
export interface PeriodUpsertWithoutGcMessageInput {
  update?: PeriodUpdateWithoutGcMessageDataInput
  create?: PeriodCreateWithoutGcMessageInput
}
export type PeriodUpsertWithoutGcMessageInputInputObject =
  | Extract<keyof PeriodUpsertWithoutGcMessageInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface gcMessageDataUpdateManyMutationInput {
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  totalNumChannelMessages?: number | null
  numNewChannelMessages?: number | null
  totalNumPrivateGroupMessages?: number | null
  numNewPrivateGroupMessages?: number | null
  totalNumDirectMessages?: number | null
  numNewDirectMessages?: number | null
  totalNumFileUploads?: number | null
  numNewFileUploads?: number | null
}
export type gcMessageDataUpdateManyMutationInputInputObject =
  | Extract<keyof gcMessageDataUpdateManyMutationInput, string>
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'totalNumChannelMessages', alias?: string  } 
  | { name: 'numNewChannelMessages', alias?: string  } 
  | { name: 'totalNumPrivateGroupMessages', alias?: string  } 
  | { name: 'numNewPrivateGroupMessages', alias?: string  } 
  | { name: 'totalNumDirectMessages', alias?: string  } 
  | { name: 'numNewDirectMessages', alias?: string  } 
  | { name: 'totalNumFileUploads', alias?: string  } 
  | { name: 'numNewFileUploads', alias?: string  } 
  
export interface gcPediaDataCreateInput {
  id?: string | null
  period?: PeriodCreateOneWithoutGcPediaInput
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  totalNumArticles?: number | null
  numNewArticles?: number | null
  totalNumEdits?: number | null
  numNewEdits?: number | null
}
export type gcPediaDataCreateInputInputObject =
  | Extract<keyof gcPediaDataCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'period', alias?: string  } 
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'totalNumArticles', alias?: string  } 
  | { name: 'numNewArticles', alias?: string  } 
  | { name: 'totalNumEdits', alias?: string  } 
  | { name: 'numNewEdits', alias?: string  } 
  
export interface PeriodCreateOneWithoutGcPediaInput {
  create?: PeriodCreateWithoutGcPediaInput | null
  connect?: PeriodWhereUniqueInput | null
}
export type PeriodCreateOneWithoutGcPediaInputInputObject =
  | Extract<keyof PeriodCreateOneWithoutGcPediaInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PeriodCreateWithoutGcPediaInput {
  id?: string | null
  month?: number
  year?: number
  gcAccount?: gcAccountDataCreateOneWithoutPeriodInput | null
  gcCollab?: gcCollabDataCreateOneWithoutPeriodInput
  gcConnex?: gcConnexDataCreateOneWithoutPeriodInput
  gcMessage?: gcMessageDataCreateOneWithoutPeriodInput
  gcWiki?: gcWikiDataCreateOneWithoutPeriodInput
}
export type PeriodCreateWithoutGcPediaInputInputObject =
  | Extract<keyof PeriodCreateWithoutGcPediaInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'month', alias?: string  } 
  | { name: 'year', alias?: string  } 
  | { name: 'gcAccount', alias?: string  } 
  | { name: 'gcCollab', alias?: string  } 
  | { name: 'gcConnex', alias?: string  } 
  | { name: 'gcMessage', alias?: string  } 
  | { name: 'gcWiki', alias?: string  } 
  
export interface gcPediaDataUpdateInput {
  period?: PeriodUpdateOneRequiredWithoutGcPediaInput | null
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  totalNumArticles?: number | null
  numNewArticles?: number | null
  totalNumEdits?: number | null
  numNewEdits?: number | null
}
export type gcPediaDataUpdateInputInputObject =
  | Extract<keyof gcPediaDataUpdateInput, string>
  | { name: 'period', alias?: string  } 
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'totalNumArticles', alias?: string  } 
  | { name: 'numNewArticles', alias?: string  } 
  | { name: 'totalNumEdits', alias?: string  } 
  | { name: 'numNewEdits', alias?: string  } 
  
export interface PeriodUpdateOneRequiredWithoutGcPediaInput {
  create?: PeriodCreateWithoutGcPediaInput | null
  update?: PeriodUpdateWithoutGcPediaDataInput | null
  upsert?: PeriodUpsertWithoutGcPediaInput | null
  connect?: PeriodWhereUniqueInput | null
}
export type PeriodUpdateOneRequiredWithoutGcPediaInputInputObject =
  | Extract<keyof PeriodUpdateOneRequiredWithoutGcPediaInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PeriodUpdateWithoutGcPediaDataInput {
  month?: number | null
  year?: number | null
  gcAccount?: gcAccountDataUpdateOneWithoutPeriodInput | null
  gcCollab?: gcCollabDataUpdateOneRequiredWithoutPeriodInput | null
  gcConnex?: gcConnexDataUpdateOneRequiredWithoutPeriodInput | null
  gcMessage?: gcMessageDataUpdateOneRequiredWithoutPeriodInput | null
  gcWiki?: gcWikiDataUpdateOneRequiredWithoutPeriodInput | null
}
export type PeriodUpdateWithoutGcPediaDataInputInputObject =
  | Extract<keyof PeriodUpdateWithoutGcPediaDataInput, string>
  | { name: 'month', alias?: string  } 
  | { name: 'year', alias?: string  } 
  | { name: 'gcAccount', alias?: string  } 
  | { name: 'gcCollab', alias?: string  } 
  | { name: 'gcConnex', alias?: string  } 
  | { name: 'gcMessage', alias?: string  } 
  | { name: 'gcWiki', alias?: string  } 
  
export interface PeriodUpsertWithoutGcPediaInput {
  update?: PeriodUpdateWithoutGcPediaDataInput
  create?: PeriodCreateWithoutGcPediaInput
}
export type PeriodUpsertWithoutGcPediaInputInputObject =
  | Extract<keyof PeriodUpsertWithoutGcPediaInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface gcPediaDataUpdateManyMutationInput {
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  totalNumArticles?: number | null
  numNewArticles?: number | null
  totalNumEdits?: number | null
  numNewEdits?: number | null
}
export type gcPediaDataUpdateManyMutationInputInputObject =
  | Extract<keyof gcPediaDataUpdateManyMutationInput, string>
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'totalNumArticles', alias?: string  } 
  | { name: 'numNewArticles', alias?: string  } 
  | { name: 'totalNumEdits', alias?: string  } 
  | { name: 'numNewEdits', alias?: string  } 
  
export interface gcWikiDataCreateInput {
  id?: string | null
  period?: PeriodCreateOneWithoutGcWikiInput
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  gaStats?: gaStatsCreateOneInput | null
  totalNumArticles?: number | null
  numNewArticles?: number | null
  totalNumEdits?: number | null
  numNewEdits?: number | null
}
export type gcWikiDataCreateInputInputObject =
  | Extract<keyof gcWikiDataCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'period', alias?: string  } 
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'gaStats', alias?: string  } 
  | { name: 'totalNumArticles', alias?: string  } 
  | { name: 'numNewArticles', alias?: string  } 
  | { name: 'totalNumEdits', alias?: string  } 
  | { name: 'numNewEdits', alias?: string  } 
  
export interface PeriodCreateOneWithoutGcWikiInput {
  create?: PeriodCreateWithoutGcWikiInput | null
  connect?: PeriodWhereUniqueInput | null
}
export type PeriodCreateOneWithoutGcWikiInputInputObject =
  | Extract<keyof PeriodCreateOneWithoutGcWikiInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PeriodCreateWithoutGcWikiInput {
  id?: string | null
  month?: number
  year?: number
  gcAccount?: gcAccountDataCreateOneWithoutPeriodInput | null
  gcCollab?: gcCollabDataCreateOneWithoutPeriodInput
  gcConnex?: gcConnexDataCreateOneWithoutPeriodInput
  gcMessage?: gcMessageDataCreateOneWithoutPeriodInput
  gcPedia?: gcPediaDataCreateOneWithoutPeriodInput
}
export type PeriodCreateWithoutGcWikiInputInputObject =
  | Extract<keyof PeriodCreateWithoutGcWikiInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'month', alias?: string  } 
  | { name: 'year', alias?: string  } 
  | { name: 'gcAccount', alias?: string  } 
  | { name: 'gcCollab', alias?: string  } 
  | { name: 'gcConnex', alias?: string  } 
  | { name: 'gcMessage', alias?: string  } 
  | { name: 'gcPedia', alias?: string  } 
  
export interface gcWikiDataUpdateInput {
  period?: PeriodUpdateOneRequiredWithoutGcWikiInput | null
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  gaStats?: gaStatsUpdateOneInput | null
  totalNumArticles?: number | null
  numNewArticles?: number | null
  totalNumEdits?: number | null
  numNewEdits?: number | null
}
export type gcWikiDataUpdateInputInputObject =
  | Extract<keyof gcWikiDataUpdateInput, string>
  | { name: 'period', alias?: string  } 
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'gaStats', alias?: string  } 
  | { name: 'totalNumArticles', alias?: string  } 
  | { name: 'numNewArticles', alias?: string  } 
  | { name: 'totalNumEdits', alias?: string  } 
  | { name: 'numNewEdits', alias?: string  } 
  
export interface PeriodUpdateOneRequiredWithoutGcWikiInput {
  create?: PeriodCreateWithoutGcWikiInput | null
  update?: PeriodUpdateWithoutGcWikiDataInput | null
  upsert?: PeriodUpsertWithoutGcWikiInput | null
  connect?: PeriodWhereUniqueInput | null
}
export type PeriodUpdateOneRequiredWithoutGcWikiInputInputObject =
  | Extract<keyof PeriodUpdateOneRequiredWithoutGcWikiInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PeriodUpdateWithoutGcWikiDataInput {
  month?: number | null
  year?: number | null
  gcAccount?: gcAccountDataUpdateOneWithoutPeriodInput | null
  gcCollab?: gcCollabDataUpdateOneRequiredWithoutPeriodInput | null
  gcConnex?: gcConnexDataUpdateOneRequiredWithoutPeriodInput | null
  gcMessage?: gcMessageDataUpdateOneRequiredWithoutPeriodInput | null
  gcPedia?: gcPediaDataUpdateOneRequiredWithoutPeriodInput | null
}
export type PeriodUpdateWithoutGcWikiDataInputInputObject =
  | Extract<keyof PeriodUpdateWithoutGcWikiDataInput, string>
  | { name: 'month', alias?: string  } 
  | { name: 'year', alias?: string  } 
  | { name: 'gcAccount', alias?: string  } 
  | { name: 'gcCollab', alias?: string  } 
  | { name: 'gcConnex', alias?: string  } 
  | { name: 'gcMessage', alias?: string  } 
  | { name: 'gcPedia', alias?: string  } 
  
export interface PeriodUpsertWithoutGcWikiInput {
  update?: PeriodUpdateWithoutGcWikiDataInput
  create?: PeriodCreateWithoutGcWikiInput
}
export type PeriodUpsertWithoutGcWikiInputInputObject =
  | Extract<keyof PeriodUpsertWithoutGcWikiInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface gcWikiDataUpdateManyMutationInput {
  totalNumAccounts?: number | null
  numNewAccounts?: number | null
  totalNumArticles?: number | null
  numNewArticles?: number | null
  totalNumEdits?: number | null
  numNewEdits?: number | null
}
export type gcWikiDataUpdateManyMutationInputInputObject =
  | Extract<keyof gcWikiDataUpdateManyMutationInput, string>
  | { name: 'totalNumAccounts', alias?: string  } 
  | { name: 'numNewAccounts', alias?: string  } 
  | { name: 'totalNumArticles', alias?: string  } 
  | { name: 'numNewArticles', alias?: string  } 
  | { name: 'totalNumEdits', alias?: string  } 
  | { name: 'numNewEdits', alias?: string  } 
  
export interface PeriodSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: PeriodWhereInput | null
  AND?: PeriodSubscriptionWhereInput[]
  OR?: PeriodSubscriptionWhereInput[]
  NOT?: PeriodSubscriptionWhereInput[]
}
export type PeriodSubscriptionWhereInputInputObject =
  | Extract<keyof PeriodSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface gaStatsSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: gaStatsWhereInput | null
  AND?: gaStatsSubscriptionWhereInput[]
  OR?: gaStatsSubscriptionWhereInput[]
  NOT?: gaStatsSubscriptionWhereInput[]
}
export type gaStatsSubscriptionWhereInputInputObject =
  | Extract<keyof gaStatsSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface gcAccountDataSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: gcAccountDataWhereInput | null
  AND?: gcAccountDataSubscriptionWhereInput[]
  OR?: gcAccountDataSubscriptionWhereInput[]
  NOT?: gcAccountDataSubscriptionWhereInput[]
}
export type gcAccountDataSubscriptionWhereInputInputObject =
  | Extract<keyof gcAccountDataSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface gcCollabDataSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: gcCollabDataWhereInput | null
  AND?: gcCollabDataSubscriptionWhereInput[]
  OR?: gcCollabDataSubscriptionWhereInput[]
  NOT?: gcCollabDataSubscriptionWhereInput[]
}
export type gcCollabDataSubscriptionWhereInputInputObject =
  | Extract<keyof gcCollabDataSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface gcConnexDataSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: gcConnexDataWhereInput | null
  AND?: gcConnexDataSubscriptionWhereInput[]
  OR?: gcConnexDataSubscriptionWhereInput[]
  NOT?: gcConnexDataSubscriptionWhereInput[]
}
export type gcConnexDataSubscriptionWhereInputInputObject =
  | Extract<keyof gcConnexDataSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface gcMessageDataSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: gcMessageDataWhereInput | null
  AND?: gcMessageDataSubscriptionWhereInput[]
  OR?: gcMessageDataSubscriptionWhereInput[]
  NOT?: gcMessageDataSubscriptionWhereInput[]
}
export type gcMessageDataSubscriptionWhereInputInputObject =
  | Extract<keyof gcMessageDataSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface gcPediaDataSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: gcPediaDataWhereInput | null
  AND?: gcPediaDataSubscriptionWhereInput[]
  OR?: gcPediaDataSubscriptionWhereInput[]
  NOT?: gcPediaDataSubscriptionWhereInput[]
}
export type gcPediaDataSubscriptionWhereInputInputObject =
  | Extract<keyof gcPediaDataSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface gcWikiDataSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: gcWikiDataWhereInput | null
  AND?: gcWikiDataSubscriptionWhereInput[]
  OR?: gcWikiDataSubscriptionWhereInput[]
  NOT?: gcWikiDataSubscriptionWhereInput[]
}
export type gcWikiDataSubscriptionWhereInputInputObject =
  | Extract<keyof gcWikiDataSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  

export type PeriodOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'month_ASC'
  | 'month_DESC'
  | 'year_ASC'
  | 'year_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type gaStatsOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'numSessions_ASC'
  | 'numSessions_DESC'
  | 'avgPageviewsPerSession_ASC'
  | 'avgPageviewsPerSession_DESC'
  | 'avgSessionDuration_ASC'
  | 'avgSessionDuration_DESC'
  | 'avgPageLoadTime_ASC'
  | 'avgPageLoadTime_DESC'
  | 'bounceRate_ASC'
  | 'bounceRate_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type gcAccountDataOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'totalNumAccounts_ASC'
  | 'totalNumAccounts_DESC'
  | 'numNewAccounts_ASC'
  | 'numNewAccounts_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type gcCollabDataOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'totalNumAccounts_ASC'
  | 'totalNumAccounts_DESC'
  | 'numNewAccounts_ASC'
  | 'numNewAccounts_DESC'
  | 'totalNumGroups_ASC'
  | 'totalNumGroups_DESC'
  | 'numNewGroups_ASC'
  | 'numNewGroups_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type gcConnexDataOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'totalNumAccounts_ASC'
  | 'totalNumAccounts_DESC'
  | 'numNewAccounts_ASC'
  | 'numNewAccounts_DESC'
  | 'totalNumGroups_ASC'
  | 'totalNumGroups_DESC'
  | 'numNewGroups_ASC'
  | 'numNewGroups_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type gcMessageDataOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'totalNumAccounts_ASC'
  | 'totalNumAccounts_DESC'
  | 'numNewAccounts_ASC'
  | 'numNewAccounts_DESC'
  | 'totalNumChannelMessages_ASC'
  | 'totalNumChannelMessages_DESC'
  | 'numNewChannelMessages_ASC'
  | 'numNewChannelMessages_DESC'
  | 'totalNumPrivateGroupMessages_ASC'
  | 'totalNumPrivateGroupMessages_DESC'
  | 'numNewPrivateGroupMessages_ASC'
  | 'numNewPrivateGroupMessages_DESC'
  | 'totalNumDirectMessages_ASC'
  | 'totalNumDirectMessages_DESC'
  | 'numNewDirectMessages_ASC'
  | 'numNewDirectMessages_DESC'
  | 'totalNumFileUploads_ASC'
  | 'totalNumFileUploads_DESC'
  | 'numNewFileUploads_ASC'
  | 'numNewFileUploads_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type gcPediaDataOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'totalNumAccounts_ASC'
  | 'totalNumAccounts_DESC'
  | 'numNewAccounts_ASC'
  | 'numNewAccounts_DESC'
  | 'totalNumArticles_ASC'
  | 'totalNumArticles_DESC'
  | 'numNewArticles_ASC'
  | 'numNewArticles_DESC'
  | 'totalNumEdits_ASC'
  | 'totalNumEdits_DESC'
  | 'numNewEdits_ASC'
  | 'numNewEdits_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type gcWikiDataOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'totalNumAccounts_ASC'
  | 'totalNumAccounts_DESC'
  | 'numNewAccounts_ASC'
  | 'numNewAccounts_DESC'
  | 'totalNumArticles_ASC'
  | 'totalNumArticles_DESC'
  | 'numNewArticles_ASC'
  | 'numNewArticles_DESC'
  | 'totalNumEdits_ASC'
  | 'totalNumEdits_DESC'
  | 'numNewEdits_ASC'
  | 'numNewEdits_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MutationTypeValues =
  | 'CREATED'
  | 'UPDATED'
  | 'DELETED'
  
  